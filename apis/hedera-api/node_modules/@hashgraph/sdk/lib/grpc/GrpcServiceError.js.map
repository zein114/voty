{"version":3,"file":"GrpcServiceError.js","sources":["../../src/grpc/GrpcServiceError.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport GrpcStatus from \"./GrpcStatus.js\";\n\n/**\n * Describes how the gRPC request failed.\n *\n * Exists in order for the Hiero JavaScript SDK to produce the same error type for gRPC errors regardless of\n * operating in node or the browser.\n *\n * Definition taken from <https://grpc.github.io/grpc/node/grpc.html#~ServiceError>.\n */\nexport default class GrpcServiceError extends Error {\n    /**\n     * @param {GrpcStatus} status\n     * @param {string} [nodeAccountId]\n     */\n    constructor(status, nodeAccountId) {\n        super(\n            `gRPC service failed with: Status: ${status.toString()}, Code: ${status.valueOf()}`,\n        );\n\n        /**\n         * @readonly\n         */\n        this.status = status;\n\n        /**\n         * Optional: node account ID associated with the error\n         */\n        this.nodeAccountId = nodeAccountId;\n\n        this.name = \"GrpcServiceError\";\n\n        if (typeof Error.captureStackTrace !== \"undefined\") {\n            Error.captureStackTrace(this, GrpcServiceError);\n        }\n    }\n\n    /**\n     * @param {Error & { code?: number; details?: string }} obj\n     * @returns {Error}\n     */\n    static _fromResponse(obj) {\n        if (obj.code != null && obj.details != null) {\n            const status = GrpcStatus._fromValue(obj.code);\n            const err = new GrpcServiceError(status);\n            err.stack += `\\nCaused by: ${\n                obj.stack ? obj.stack.toString() : \"\"\n            }`;\n            err.message += `: ${obj.details}`;\n            return err;\n        } else {\n            return /** @type {Error} */ (obj);\n        }\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.name}: ${this.message}`;\n    }\n}\n"],"names":["GrpcServiceError","Error","constructor","status","nodeAccountId","super","toString","valueOf","this","name","captureStackTrace","_fromResponse","obj","code","details","GrpcStatus","_fromValue","err","stack","message"],"mappings":"+BAYe,MAAMA,UAAyBC,MAK1C,WAAAC,CAAYC,EAAQC,GAChBC,MACI,qCAAqCF,EAAOG,qBAAqBH,EAAOI,aAM5EC,KAAKL,OAASA,EAKdK,KAAKJ,cAAgBA,EAErBI,KAAKC,KAAO,wBAE2B,IAA5BR,MAAMS,mBACbT,MAAMS,kBAAkBF,KAAMR,EAE1C,CAMI,oBAAOW,CAAcC,GACjB,GAAgB,MAAZA,EAAIC,MAA+B,MAAfD,EAAIE,QAAiB,CACzC,MAAMX,EAASY,EAAWC,WAAWJ,EAAIC,MACnCI,EAAM,IAAIjB,EAAiBG,GAKjC,OAJAc,EAAIC,OAAS,gBACTN,EAAIM,MAAQN,EAAIM,MAAMZ,WAAa,KAEvCW,EAAIE,SAAW,KAAKP,EAAIE,UACjBG,CACnB,CACY,QAEZ,CAKI,QAAAX,GACI,MAAO,GAAGE,KAAKC,SAASD,KAAKW,SACrC"}