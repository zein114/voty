{"version":3,"file":"ExchangeRate.js","sources":["../src/ExchangeRate.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport Long from \"long\";\n\n/**\n * @typedef {object} ExchangeRateJSON\n * @property {number} hbars\n * @property {number} cents\n * @property {Date} expirationTime\n * @property {number} exchangeRateInCents\n */\n\n/**\n * Represents an exchange rate between hbars and cents (USD).\n * This class provides functionality for handling and converting exchange rates\n * between Hedera's native HBAR currency and US cents.\n */\nexport default class ExchangeRate {\n    /**\n     * @private\n     * @param {object} props\n     * @param {number} props.hbars\n     * @param {number} props.cents\n     * @param {Date} props.expirationTime\n     */\n    constructor(props) {\n        /**\n         * Denotes Hbar equivalent to cents (USD)\n         *\n         * @readonly\n         * @type {number}\n         */\n        this.hbars = props.hbars;\n\n        /**\n         * Denotes cents (USD) equivalent to Hbar\n         *\n         * @readonly\n         * @type {number}\n         */\n        this.cents = props.cents;\n\n        /**\n         * Expiration time of this exchange rate\n         *\n         * @readonly\n         * @type {Date}\n         */\n        this.expirationTime = props.expirationTime;\n\n        /**\n         * Calculated exchange rate\n         *\n         * @readonly\n         * @type {number}\n         */\n        this.exchangeRateInCents = props.cents / props.hbars;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {import(\"@hashgraph/proto\").proto.IExchangeRate} rate\n     * @returns {ExchangeRate}\n     */\n    static _fromProtobuf(rate) {\n        return new ExchangeRate({\n            hbars: /** @type {number} */ (rate.hbarEquiv),\n            cents: /** @type {number} */ (rate.centEquiv),\n            expirationTime: new Date(\n                rate.expirationTime != null\n                    ? rate.expirationTime.seconds != null\n                        ? Long.isLong(rate.expirationTime.seconds)\n                            ? rate.expirationTime.seconds.toInt() * 1000\n                            : rate.expirationTime.seconds\n                        : 0\n                    : 0,\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {import(\"@hashgraph/proto\").proto.IExchangeRate}\n     */\n    _toProtobuf() {\n        return {\n            hbarEquiv: this.hbars,\n            centEquiv: this.cents,\n            expirationTime: {\n                seconds: Long.fromNumber(\n                    Math.trunc(this.expirationTime.getTime() / 1000),\n                ),\n            },\n        };\n    }\n\n    /**\n     * @returns {ExchangeRateJSON}\n     */\n    toJSON() {\n        return {\n            hbars: this.hbars,\n            cents: this.cents,\n            expirationTime: this.expirationTime,\n            exchangeRateInCents: this.exchangeRateInCents,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n}\n"],"names":["ExchangeRate","constructor","props","this","hbars","cents","expirationTime","exchangeRateInCents","Object","freeze","_fromProtobuf","rate","Date","seconds","Long","isLong","toInt","_toProtobuf","hbarEquiv","centEquiv","fromNumber","Math","trunc","getTime","toJSON","toString","JSON","stringify"],"mappings":"oBAiBe,MAAMA,EAQjB,WAAAC,CAAYC,GAORC,KAAKC,MAAQF,EAAME,MAQnBD,KAAKE,MAAQH,EAAMG,MAQnBF,KAAKG,eAAiBJ,EAAMI,eAQ5BH,KAAKI,oBAAsBL,EAAMG,MAAQH,EAAME,MAE/CI,OAAOC,OAAON,KACtB,CAOI,oBAAOO,CAAcC,GACjB,OAAO,IAAIX,EAAa,CACpBI,MAA8BO,EAAc,UAC5CN,MAA8BM,EAAc,UAC5CL,eAAgB,IAAIM,KACO,MAAvBD,EAAKL,gBACgC,MAA/BK,EAAKL,eAAeO,QAChBC,EAAKC,OAAOJ,EAAKL,eAAeO,SACU,IAAtCF,EAAKL,eAAeO,QAAQG,QAC5BL,EAAKL,eAAeO,QAE5B,IAGtB,CAMI,WAAAI,GACI,MAAO,CACHC,UAAWf,KAAKC,MAChBe,UAAWhB,KAAKE,MAChBC,eAAgB,CACZO,QAASC,EAAKM,WACVC,KAAKC,MAAMnB,KAAKG,eAAeiB,UAAY,OAI/D,CAKI,MAAAC,GACI,MAAO,CACHpB,MAAOD,KAAKC,MACZC,MAAOF,KAAKE,MACZC,eAAgBH,KAAKG,eACrBC,oBAAqBJ,KAAKI,oBAEtC,CAKI,QAAAkB,GACI,OAAOC,KAAKC,UAAUxB,KAAKqB,SACnC"}