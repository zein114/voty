{"version":3,"file":"RequestType.js","sources":["../src/RequestType.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.HederaFunctionality} HieroProto.proto.HederaFunctionality\n */\n\nexport default class RequestType {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {number} code\n     */\n    constructor(code) {\n        /** @readonly */\n        this._code = code;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        switch (this) {\n            case RequestType.None:\n                return \"NONE\";\n            case RequestType.CryptoTransfer:\n                return \"CryptoTransfer\";\n            case RequestType.CryptoUpdate:\n                return \"CryptoUpdate\";\n            case RequestType.CryptoDelete:\n                return \"CryptoDelete\";\n            case RequestType.CryptoAddLiveHash:\n                return \"CryptoAddLiveHash\";\n            case RequestType.CryptoDeleteLiveHash:\n                return \"CryptoDeleteLiveHash\";\n            case RequestType.ContractCall:\n                return \"ContractCall\";\n            case RequestType.ContractCreate:\n                return \"ContractCreate\";\n            case RequestType.ContractUpdate:\n                return \"ContractUpdate\";\n            case RequestType.FileCreate:\n                return \"FileCreate\";\n            case RequestType.FileAppend:\n                return \"FileAppend\";\n            case RequestType.FileUpdate:\n                return \"FileUpdate\";\n            case RequestType.FileDelete:\n                return \"FileDelete\";\n            case RequestType.CryptoGetAccountBalance:\n                return \"CryptoGetAccountBalance\";\n            case RequestType.CryptoGetAccountRecords:\n                return \"CryptoGetAccountRecords\";\n            case RequestType.CryptoGetInfo:\n                return \"CryptoGetInfo\";\n            case RequestType.ContractCallLocal:\n                return \"ContractCallLocal\";\n            case RequestType.ContractGetInfo:\n                return \"ContractGetInfo\";\n            case RequestType.ContractGetBytecode:\n                return \"ContractGetBytecode\";\n            case RequestType.GetBySolidityID:\n                return \"GetBySolidityID\";\n            case RequestType.GetByKey:\n                return \"GetByKey\";\n            case RequestType.CryptoGetLiveHash:\n                return \"CryptoGetLiveHash\";\n            case RequestType.CryptoGetStakers:\n                return \"CryptoGetStakers\";\n            case RequestType.FileGetContents:\n                return \"FileGetContents\";\n            case RequestType.FileGetInfo:\n                return \"FileGetInfo\";\n            case RequestType.TransactionGetRecord:\n                return \"TransactionGetRecord\";\n            case RequestType.ContractGetRecords:\n                return \"ContractGetRecords\";\n            case RequestType.CryptoCreate:\n                return \"CryptoCreate\";\n            case RequestType.SystemDelete:\n                return \"SystemDelete\";\n            case RequestType.SystemUndelete:\n                return \"SystemUndelete\";\n            case RequestType.ContractDelete:\n                return \"ContractDelete\";\n            case RequestType.Freeze:\n                return \"Freeze\";\n            case RequestType.CreateTransactionRecord:\n                return \"CreateTransactionRecord\";\n            case RequestType.CryptoAccountAutoRenew:\n                return \"CryptoAccountAutoRenew\";\n            case RequestType.ContractAutoRenew:\n                return \"ContractAutoRenew\";\n            case RequestType.GetVersionInfo:\n                return \"GetVersionInfo\";\n            case RequestType.TransactionGetReceipt:\n                return \"TransactionGetReceipt\";\n            case RequestType.ConsensusCreateTopic:\n                return \"ConsensusCreateTopic\";\n            case RequestType.ConsensusUpdateTopic:\n                return \"ConsensusUpdateTopic\";\n            case RequestType.ConsensusDeleteTopic:\n                return \"ConsensusDeleteTopic\";\n            case RequestType.ConsensusGetTopicInfo:\n                return \"ConsensusGetTopicInfo\";\n            case RequestType.ConsensusSubmitMessage:\n                return \"ConsensusSubmitMessage\";\n            case RequestType.UncheckedSubmit:\n                return \"UncheckedSubmit\";\n            case RequestType.TokenCreate:\n                return \"TokenCreate\";\n            case RequestType.TokenGetInfo:\n                return \"TokenGetInfo\";\n            case RequestType.TokenFreezeAccount:\n                return \"TokenFreezeAccount\";\n            case RequestType.TokenUnfreezeAccount:\n                return \"TokenUnfreezeAccount\";\n            case RequestType.TokenGrantKycToAccount:\n                return \"TokenGrantKycToAccount\";\n            case RequestType.TokenRevokeKycFromAccount:\n                return \"TokenRevokeKycFromAccount\";\n            case RequestType.TokenDelete:\n                return \"TokenDelete\";\n            case RequestType.TokenUpdate:\n                return \"TokenUpdate\";\n            case RequestType.TokenMint:\n                return \"TokenMint\";\n            case RequestType.TokenBurn:\n                return \"TokenBurn\";\n            case RequestType.TokenAccountWipe:\n                return \"TokenAccountWipe\";\n            case RequestType.TokenAssociateToAccount:\n                return \"TokenAssociateToAccount\";\n            case RequestType.TokenDissociateFromAccount:\n                return \"TokenDissociateFromAccount\";\n            case RequestType.ScheduleCreate:\n                return \"ScheduleCreate\";\n            case RequestType.ScheduleDelete:\n                return \"ScheduleDelete\";\n            case RequestType.ScheduleSign:\n                return \"ScheduleSign\";\n            case RequestType.ScheduleGetInfo:\n                return \"ScheduleGetInfo\";\n            case RequestType.TokenGetAccountNftInfos:\n                return \"TokenGetAccountNftInfos\";\n            case RequestType.TokenGetNftInfo:\n                return \"TokenGetNftInfo\";\n            case RequestType.TokenGetNftInfos:\n                return \"TokenGetNftInfos\";\n            case RequestType.TokenFeeScheduleUpdate:\n                return \"TokenFeeScheduleUpdate\";\n            case RequestType.NetworkGetExecutionTime:\n                return \"NetworkGetExecutionTime\";\n            case RequestType.TokenPause:\n                return \"TokenPause\";\n            case RequestType.TokenUnpause:\n                return \"TokenUnpause\";\n            case RequestType.CryptoApproveAllowance:\n                return \"CryptoApproveAllowance\";\n            case RequestType.CryptoDeleteAllowance:\n                return \"CryptoDeleteAllowance\";\n            case RequestType.GetAccountDetails:\n                return \"GetAccountDetails\";\n            case RequestType.EthereumTransaction:\n                return \"EthereumTransaction\";\n            case RequestType.NodeStakeUpdate:\n                return \"NodeStakeUpdate\";\n            case RequestType.Prng:\n                return \"UtilPrng\";\n            case RequestType.TransactionGetFastRecord:\n                return \"TransactionGetFastRecord\";\n            case RequestType.TokenUpdateNfts:\n                return \"TokenUpdateNfts\";\n            case RequestType.NodeCreate:\n                return \"NodeCreate\";\n            case RequestType.NodeUpdate:\n                return \"NodeUpdate\";\n            case RequestType.NodeDelete:\n                return \"NodeDelete\";\n            case RequestType.TokenReject:\n                return \"TokenReject\";\n            case RequestType.TokenAirdrop:\n                return \"TokenAirdrop\";\n            case RequestType.TokenCancelAirdrop:\n                return \"TokenCancelAirdrop\";\n            case RequestType.TokenClaimAirdrop:\n                return \"TokenClaimAirdrop\";\n            case RequestType.TssMessage:\n                return \"TssMessage\";\n            case RequestType.TssVote:\n                return \"TssVote\";\n            case RequestType.TssShareSignature:\n                return \"TssShareSignature\";\n            case RequestType.TssEncryptionKey:\n                return \"TssEncryptionKey\";\n            case RequestType.StateSignatureTransaction:\n                return \"StateSignatureTransaction\";\n            case RequestType.HistoryAssemblySignature:\n                return \"HistoryAssemblySignature\";\n            case RequestType.HistoryProofKeyPublication:\n                return \"HistoryProofKeyPublication\";\n            case RequestType.HistoryProofVote:\n                return \"HistoryProofVote\";\n            case RequestType.HintsKeyPublication:\n                return \"HintsKeyPublication\";\n            case RequestType.HintsPreprocessingVote:\n                return \"HintsPreprocessingVote\";\n            case RequestType.HintsPartialSignature:\n                return \"HintsPartialSignature\";\n            case RequestType.CrsPublication:\n                return \"CrsPublication\";\n            case RequestType.AtomicBatch:\n                return \"AtomicBatch\";\n            default:\n                return `UNKNOWN (${this._code})`;\n        }\n    }\n\n    /**\n     * @internal\n     * @param {number} code\n     * @returns {RequestType}\n     */\n    static _fromCode(code) {\n        switch (code) {\n            case 0:\n                return RequestType.None;\n            case 1:\n                return RequestType.CryptoTransfer;\n            case 2:\n                return RequestType.CryptoUpdate;\n            case 3:\n                return RequestType.CryptoDelete;\n            case 4:\n                return RequestType.CryptoAddLiveHash;\n            case 5:\n                return RequestType.CryptoDeleteLiveHash;\n            case 6:\n                return RequestType.ContractCall;\n            case 7:\n                return RequestType.ContractCreate;\n            case 8:\n                return RequestType.ContractUpdate;\n            case 9:\n                return RequestType.FileCreate;\n            case 10:\n                return RequestType.FileAppend;\n            case 11:\n                return RequestType.FileUpdate;\n            case 12:\n                return RequestType.FileDelete;\n            case 13:\n                return RequestType.CryptoGetAccountBalance;\n            case 14:\n                return RequestType.CryptoGetAccountRecords;\n            case 15:\n                return RequestType.CryptoGetInfo;\n            case 16:\n                return RequestType.ContractCallLocal;\n            case 17:\n                return RequestType.ContractGetInfo;\n            case 18:\n                return RequestType.ContractGetBytecode;\n            case 19:\n                return RequestType.GetBySolidityID;\n            case 20:\n                return RequestType.GetByKey;\n            case 21:\n                return RequestType.CryptoGetLiveHash;\n            case 22:\n                return RequestType.CryptoGetStakers;\n            case 23:\n                return RequestType.FileGetContents;\n            case 24:\n                return RequestType.FileGetInfo;\n            case 25:\n                return RequestType.TransactionGetRecord;\n            case 26:\n                return RequestType.ContractGetRecords;\n            case 27:\n                return RequestType.CryptoCreate;\n            case 28:\n                return RequestType.SystemDelete;\n            case 29:\n                return RequestType.SystemUndelete;\n            case 30:\n                return RequestType.ContractDelete;\n            case 31:\n                return RequestType.Freeze;\n            case 32:\n                return RequestType.CreateTransactionRecord;\n            case 33:\n                return RequestType.CryptoAccountAutoRenew;\n            case 34:\n                return RequestType.ContractAutoRenew;\n            case 35:\n                return RequestType.GetVersionInfo;\n            case 36:\n                return RequestType.TransactionGetReceipt;\n            case 50:\n                return RequestType.ConsensusCreateTopic;\n            case 51:\n                return RequestType.ConsensusUpdateTopic;\n            case 52:\n                return RequestType.ConsensusDeleteTopic;\n            case 53:\n                return RequestType.ConsensusGetTopicInfo;\n            case 54:\n                return RequestType.ConsensusSubmitMessage;\n            case 55:\n                return RequestType.UncheckedSubmit;\n            case 56:\n                return RequestType.TokenCreate;\n            case 58:\n                return RequestType.TokenGetInfo;\n            case 59:\n                return RequestType.TokenFreezeAccount;\n            case 60:\n                return RequestType.TokenUnfreezeAccount;\n            case 61:\n                return RequestType.TokenGrantKycToAccount;\n            case 62:\n                return RequestType.TokenRevokeKycFromAccount;\n            case 63:\n                return RequestType.TokenDelete;\n            case 64:\n                return RequestType.TokenUpdate;\n            case 65:\n                return RequestType.TokenMint;\n            case 66:\n                return RequestType.TokenBurn;\n            case 67:\n                return RequestType.TokenAccountWipe;\n            case 68:\n                return RequestType.TokenAssociateToAccount;\n            case 69:\n                return RequestType.TokenDissociateFromAccount;\n            case 70:\n                return RequestType.ScheduleCreate;\n            case 71:\n                return RequestType.ScheduleDelete;\n            case 72:\n                return RequestType.ScheduleSign;\n            case 73:\n                return RequestType.ScheduleGetInfo;\n            case 74:\n                return RequestType.TokenGetAccountNftInfos;\n            case 75:\n                return RequestType.TokenGetNftInfo;\n            case 76:\n                return RequestType.TokenGetNftInfos;\n            case 77:\n                return RequestType.TokenFeeScheduleUpdate;\n            case 78:\n                return RequestType.NetworkGetExecutionTime;\n            case 79:\n                return RequestType.TokenPause;\n            case 80:\n                return RequestType.TokenUnpause;\n            case 81:\n                return RequestType.CryptoApproveAllowance;\n            case 82:\n                return RequestType.CryptoDeleteAllowance;\n            case 83:\n                return RequestType.GetAccountDetails;\n            case 84:\n                return RequestType.EthereumTransaction;\n            case 85:\n                return RequestType.NodeStakeUpdate;\n            case 86:\n                return RequestType.Prng;\n            case 87:\n                return RequestType.TransactionGetFastRecord;\n            case 88:\n                return RequestType.TokenUpdateNfts;\n            case 89:\n                return RequestType.NodeCreate;\n            case 90:\n                return RequestType.NodeUpdate;\n            case 91:\n                return RequestType.NodeDelete;\n            case 92:\n                return RequestType.TokenReject;\n            case 93:\n                return RequestType.TokenAirdrop;\n            case 94:\n                return RequestType.TokenCancelAirdrop;\n            case 95:\n                return RequestType.TokenClaimAirdrop;\n            case 96:\n                return RequestType.TssMessage;\n            case 97:\n                return RequestType.TssVote;\n            case 98:\n                return RequestType.TssShareSignature;\n            case 99:\n                return RequestType.TssEncryptionKey;\n            case 100:\n                return RequestType.StateSignatureTransaction;\n            case 101:\n                return RequestType.HintsKeyPublication;\n            case 102:\n                return RequestType.HintsPreprocessingVote;\n            case 103:\n                return RequestType.HintsPartialSignature;\n            case 104:\n                return RequestType.HistoryAssemblySignature;\n            case 105:\n                return RequestType.HistoryProofKeyPublication;\n            case 106:\n                return RequestType.HistoryProofVote;\n            case 107:\n                return RequestType.CrsPublication;\n            case 108:\n                return RequestType.AtomicBatch;\n        }\n\n        throw new Error(\n            `(BUG) RequestType.fromCode() does not handle code: ${code}`,\n        );\n    }\n\n    /**\n     * @returns {HieroProto.proto.HederaFunctionality}\n     */\n    valueOf() {\n        return this._code;\n    }\n}\n\n/**\n * UNSPECIFIED - Need to keep first value as unspecified because first element is ignored and\n * not parsed (0 is ignored by parser)\n */\nRequestType.None = new RequestType(0);\n\n/**\n * crypto transfer\n */\nRequestType.CryptoTransfer = new RequestType(1);\n\n/**\n * crypto update account\n */\nRequestType.CryptoUpdate = new RequestType(2);\n\n/**\n * crypto delete account\n */\nRequestType.CryptoDelete = new RequestType(3);\n\n/**\n * Add a livehash to a crypto account\n */\nRequestType.CryptoAddLiveHash = new RequestType(4);\n\n/**\n * Delete a livehash from a crypto account\n */\nRequestType.CryptoDeleteLiveHash = new RequestType(5);\n\n/**\n * Smart Contract Call\n */\nRequestType.ContractCall = new RequestType(6);\n\n/**\n * Smart Contract Create Contract\n */\nRequestType.ContractCreate = new RequestType(7);\n\n/**\n * Smart Contract update contract\n */\nRequestType.ContractUpdate = new RequestType(8);\n\n/**\n * File Operation create file\n */\nRequestType.FileCreate = new RequestType(9);\n\n/**\n * File Operation append file\n */\nRequestType.FileAppend = new RequestType(10);\n\n/**\n * File Operation update file\n */\nRequestType.FileUpdate = new RequestType(11);\n\n/**\n * File Operation delete file\n */\nRequestType.FileDelete = new RequestType(12);\n\n/**\n * crypto get account balance\n */\nRequestType.CryptoGetAccountBalance = new RequestType(13);\n\n/**\n * crypto get account record\n */\nRequestType.CryptoGetAccountRecords = new RequestType(14);\n\n/**\n * Crypto get info\n */\nRequestType.CryptoGetInfo = new RequestType(15);\n\n/**\n * Smart Contract Call\n */\nRequestType.ContractCallLocal = new RequestType(16);\n\n/**\n * Smart Contract get info\n */\nRequestType.ContractGetInfo = new RequestType(17);\n\n/**\n * Smart Contract, get the runtime code\n */\nRequestType.ContractGetBytecode = new RequestType(18);\n\n/**\n * Smart Contract, get by solidity ID\n */\nRequestType.GetBySolidityID = new RequestType(19);\n\n/**\n * Smart Contract, get by key\n */\nRequestType.GetByKey = new RequestType(20);\n\n/**\n * Get a live hash from a crypto account\n */\nRequestType.CryptoGetLiveHash = new RequestType(21);\n\n/**\n * Crypto, get the stakers for the node\n */\nRequestType.CryptoGetStakers = new RequestType(22);\n\n/**\n * File Operations get file contents\n */\nRequestType.FileGetContents = new RequestType(23);\n\n/**\n * File Operations get the info of the file\n */\nRequestType.FileGetInfo = new RequestType(24);\n\n/**\n * Crypto get the transaction records\n */\nRequestType.TransactionGetRecord = new RequestType(25);\n\n/**\n * Contract get the transaction records\n */\nRequestType.ContractGetRecords = new RequestType(26);\n\n/**\n * crypto create account\n */\nRequestType.CryptoCreate = new RequestType(27);\n\n/**\n * system delete file\n */\nRequestType.SystemDelete = new RequestType(28);\n\n/**\n * system undelete file\n */\nRequestType.SystemUndelete = new RequestType(29);\n\n/**\n * delete contract\n */\nRequestType.ContractDelete = new RequestType(30);\n\n/**\n * freeze\n */\nRequestType.Freeze = new RequestType(31);\n\n/**\n * Create Tx Record\n */\nRequestType.CreateTransactionRecord = new RequestType(32);\n\n/**\n * Crypto Auto Renew\n */\nRequestType.CryptoAccountAutoRenew = new RequestType(33);\n\n/**\n * Contract Auto Renew\n */\nRequestType.ContractAutoRenew = new RequestType(34);\n\n/**\n * Get Version\n */\nRequestType.GetVersionInfo = new RequestType(35);\n\n/**\n * Transaction Get Receipt\n */\nRequestType.TransactionGetReceipt = new RequestType(36);\n\n/**\n * Create Topic\n */\nRequestType.ConsensusCreateTopic = new RequestType(50);\n\n/**\n * Update Topic\n */\nRequestType.ConsensusUpdateTopic = new RequestType(51);\n\n/**\n * Delete Topic\n */\nRequestType.ConsensusDeleteTopic = new RequestType(52);\n\n/**\n * Get Topic information\n */\nRequestType.ConsensusGetTopicInfo = new RequestType(53);\n\n/**\n * Submit message to topic\n */\nRequestType.ConsensusSubmitMessage = new RequestType(54);\n\nRequestType.UncheckedSubmit = new RequestType(55);\n/**\n * Create Token\n */\nRequestType.TokenCreate = new RequestType(56);\n\n/**\n * Get Token information\n */\nRequestType.TokenGetInfo = new RequestType(58);\n\n/**\n * Freeze Account\n */\nRequestType.TokenFreezeAccount = new RequestType(59);\n\n/**\n * Unfreeze Account\n */\nRequestType.TokenUnfreezeAccount = new RequestType(60);\n\n/**\n * Grant KYC to Account\n */\nRequestType.TokenGrantKycToAccount = new RequestType(61);\n\n/**\n * Revoke KYC from Account\n */\nRequestType.TokenRevokeKycFromAccount = new RequestType(62);\n\n/**\n * Delete Token\n */\nRequestType.TokenDelete = new RequestType(63);\n\n/**\n * Update Token\n */\nRequestType.TokenUpdate = new RequestType(64);\n\n/**\n * Mint tokens to treasury\n */\nRequestType.TokenMint = new RequestType(65);\n\n/**\n * Burn tokens from treasury\n */\nRequestType.TokenBurn = new RequestType(66);\n\n/**\n * Wipe token amount from Account holder\n */\nRequestType.TokenAccountWipe = new RequestType(67);\n\n/**\n * Associate tokens to an account\n */\nRequestType.TokenAssociateToAccount = new RequestType(68);\n\n/**\n * Dissociate tokens from an account\n */\nRequestType.TokenDissociateFromAccount = new RequestType(69);\n\n/**\n * Create Scheduled Transaction\n */\nRequestType.ScheduleCreate = new RequestType(70);\n\n/**\n * Delete Scheduled Transaction\n */\nRequestType.ScheduleDelete = new RequestType(71);\n\n/**\n * Sign Scheduled Transaction\n */\nRequestType.ScheduleSign = new RequestType(72);\n\n/**\n * Get Scheduled Transaction Information\n */\nRequestType.ScheduleGetInfo = new RequestType(73);\n\n/**\n * Get Token Account Nft Information\n */\nRequestType.TokenGetAccountNftInfos = new RequestType(74);\n\n/**\n * Get Token Nft Information\n */\nRequestType.TokenGetNftInfo = new RequestType(75);\n\n/**\n * Get Token Nft List Information\n */\nRequestType.TokenGetNftInfos = new RequestType(76);\n\n/**\n * Update a token's custom fee schedule, if permissible\n */\nRequestType.TokenFeeScheduleUpdate = new RequestType(77);\n\n/**\n * Get execution time(s) by TransactionID, if available\n */\nRequestType.NetworkGetExecutionTime = new RequestType(78);\n\n/**\n * Pause the Token\n */\nRequestType.TokenPause = new RequestType(79);\n\n/**\n * Unpause the Token\n */\nRequestType.TokenUnpause = new RequestType(80);\n\n/**\n * Approve allowance for a spender relative to the owner account\n */\nRequestType.CryptoApproveAllowance = new RequestType(81);\n\n/**\n * Deletes granted allowances on owner account\n */\nRequestType.CryptoDeleteAllowance = new RequestType(82);\n\n/**\n * Gets all the information about an account, including balance and allowances. This does not get the list of\n * account records.\n */\nRequestType.GetAccountDetails = new RequestType(83);\n\n/**\n * Ethereum Transaction\n */\nRequestType.EthereumTransaction = new RequestType(84);\n\n/**\n * Updates the staking info at the end of staking period to indicate new staking period has started.\n */\nRequestType.NodeStakeUpdate = new RequestType(85);\n\n/**\n * Generates a pseudorandom number.\n */\nRequestType.Prng = new RequestType(86);\n\n/**\n * Get a record for a transaction (lasts 180 seconds)\n */\nRequestType.TransactionGetFastRecord = new RequestType(87);\n\n/**\n * Update the metadata of one or more NFT's of a specific token type.\n */\nRequestType.TokenUpdateNfts = new RequestType(88);\n\n/**\n * A transaction body for a `createNode` request.\n */\nRequestType.NodeCreate = new RequestType(89);\n\n/**\n * A transaction body for an `updateNode` request.\n */\nRequestType.NodeUpdate = new RequestType(90);\n\n/**\n * A transaction body for a `deleteNode` request.\n */\nRequestType.NodeDelete = new RequestType(91);\n\n/**\n * Transfer one or more token balances held by the requesting account to the treasury for each token type.\n */\nRequestType.TokenReject = new RequestType(92);\n\n/**\n * Airdrop one or more tokens to one or more accounts.\n */\nRequestType.TokenAirdrop = new RequestType(93);\n\n/**\n * Remove one or more pending airdrops from state on behalf of the sender(s) for each airdrop.\n */\nRequestType.TokenCancelAirdrop = new RequestType(94);\n\n/**\n * Claim one or more pending airdrops\n */\nRequestType.TokenClaimAirdrop = new RequestType(95);\n\n/**\n * (TSS) Messages for a candidate roster.\n */\nRequestType.TssMessage = new RequestType(96);\n\n/**\n * Vote on the validity of Threshold Signature Scheme (TSS)\n */\nRequestType.TssVote = new RequestType(97);\n\n/**\n * Communicates a node's signature of a block hash\n * using its private share within the TSS process\n */\nRequestType.TssShareSignature = new RequestType(98);\n\n/**\n * Submit a node public tss encryption key as part of the Threshold Signature Scheme (TSS).\n */\nRequestType.TssEncryptionKey = new RequestType(99);\n\n/**\n * Submit a signature of a state root hash gossiped to other nodes\n */\nRequestType.StateSignatureTransaction = new RequestType(100);\n\n/**\n * Publish a hinTS key to the network.\n */\nRequestType.HintsKeyPublication = new RequestType(101);\n\n/**\n * Vote for a particular preprocessing output of a hinTS construction.\n */\nRequestType.HintsPreprocessingVote = new RequestType(102);\n\n/**\n * Sign a partial signature for the active hinTS construction.\n */\nRequestType.HintsPartialSignature = new RequestType(103);\n\n/**\n * Sign a particular history assembly.\n */\nRequestType.HistoryAssemblySignature = new RequestType(104);\n\n/**\n * Publish a roster history proof key to the network.\n */\nRequestType.HistoryProofKeyPublication = new RequestType(105);\n\n/**\n * Vote for a particular history proof.\n */\nRequestType.HistoryProofVote = new RequestType(106);\n\n/**\n * Sign a particular CRS publication.\n */\nRequestType.CrsPublication = new RequestType(107);\n\n/**\n * Sign a particular history assembly.\n */\nRequestType.HistoryAssemblySignature = new RequestType(104);\n\n/**\n * Publish a roster history proof key to the network.\n */\nRequestType.HistoryProofKeyPublication = new RequestType(105);\n\n/**\n * Vote for a particular history proof.\n */\nRequestType.HistoryProofVote = new RequestType(106);\n\n/**\n * Sign a particular atomic batch.\n */\nRequestType.AtomicBatch = new RequestType(108);\n"],"names":["RequestType","constructor","code","this","_code","Object","freeze","toString","None","CryptoTransfer","CryptoUpdate","CryptoDelete","CryptoAddLiveHash","CryptoDeleteLiveHash","ContractCall","ContractCreate","ContractUpdate","FileCreate","FileAppend","FileUpdate","FileDelete","CryptoGetAccountBalance","CryptoGetAccountRecords","CryptoGetInfo","ContractCallLocal","ContractGetInfo","ContractGetBytecode","GetBySolidityID","GetByKey","CryptoGetLiveHash","CryptoGetStakers","FileGetContents","FileGetInfo","TransactionGetRecord","ContractGetRecords","CryptoCreate","SystemDelete","SystemUndelete","ContractDelete","Freeze","CreateTransactionRecord","CryptoAccountAutoRenew","ContractAutoRenew","GetVersionInfo","TransactionGetReceipt","ConsensusCreateTopic","ConsensusUpdateTopic","ConsensusDeleteTopic","ConsensusGetTopicInfo","ConsensusSubmitMessage","UncheckedSubmit","TokenCreate","TokenGetInfo","TokenFreezeAccount","TokenUnfreezeAccount","TokenGrantKycToAccount","TokenRevokeKycFromAccount","TokenDelete","TokenUpdate","TokenMint","TokenBurn","TokenAccountWipe","TokenAssociateToAccount","TokenDissociateFromAccount","ScheduleCreate","ScheduleDelete","ScheduleSign","ScheduleGetInfo","TokenGetAccountNftInfos","TokenGetNftInfo","TokenGetNftInfos","TokenFeeScheduleUpdate","NetworkGetExecutionTime","TokenPause","TokenUnpause","CryptoApproveAllowance","CryptoDeleteAllowance","GetAccountDetails","EthereumTransaction","NodeStakeUpdate","Prng","TransactionGetFastRecord","TokenUpdateNfts","NodeCreate","NodeUpdate","NodeDelete","TokenReject","TokenAirdrop","TokenCancelAirdrop","TokenClaimAirdrop","TssMessage","TssVote","TssShareSignature","TssEncryptionKey","StateSignatureTransaction","HistoryAssemblySignature","HistoryProofKeyPublication","HistoryProofVote","HintsKeyPublication","HintsPreprocessingVote","HintsPartialSignature","CrsPublication","AtomicBatch","_fromCode","Error","valueOf"],"mappings":"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"}