{"version":3,"file":"FeeData.js","sources":["../src/FeeData.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport * as HieroProto from \"@hashgraph/proto\";\nimport FeeComponents from \"./FeeComponents.js\";\nimport FeeDataType from \"./FeeDataType.js\";\n\n/**\n * A total fee, in component amounts charged for a transaction.\n *\n * Total fees are composed of three sets of components.\n * - Node data, components that compensate the specific node that submitted\n *   the transaction.\n * - Network data, components that compensate the Hedera network for gossiping\n *   the transaction and determining the consensus timestamp.\n * - Service data, components that compensate the Hedera network for the ongoing\n *   maintenance and operation of the network, as well as ongoing development\n *   of network services.\n *\n * Fee components are recorded in thousandths of a tiny cent, and the network\n * exchange rate converts these to tinybar amounts, which are what the network\n * charges for transactions and what the network reports in the record stream.\n */\nexport default class FeeData {\n    /**\n     * @param {object} [props]\n     * @param {FeeComponents} [props.nodedata]\n     * @param {FeeComponents} [props.networkdata]\n     * @param {FeeComponents} [props.servicedata]\n     * @param {FeeDataType} [props.feeDataType]\n     */\n    constructor(props = {}) {\n        /*\n         * Fee paid to the submitting node\n         *\n         * @type {FeeComponents}\n         */\n        this.nodedata = props.nodedata;\n\n        /*\n         * Fee paid to the network for processing a transaction into consensus\n         *\n         * @type {FeeComponents}\n         */\n        this.networkdata = props.networkdata;\n\n        /*\n         * Fee paid to the network for providing the service associated with the transaction; for instance, storing a file\n         *\n         * @type {FeeComponents}\n         */\n        this.servicedata = props.servicedata;\n\n        /*\n         * SubType distinguishing between different types of FeeData, correlating to the same HederaFunctionality\n         *\n         * @type {SubType}\n         */\n        this.feeDataType = props.feeDataType;\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {FeeData}\n     */\n    static fromBytes(bytes) {\n        return FeeData._fromProtobuf(HieroProto.proto.FeeData.decode(bytes));\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.IFeeData} feeData\n     * @returns {FeeData}\n     */\n    static _fromProtobuf(feeData) {\n        return new FeeData({\n            nodedata:\n                feeData.nodedata != null\n                    ? FeeComponents._fromProtobuf(feeData.nodedata)\n                    : undefined,\n            networkdata:\n                feeData.networkdata != null\n                    ? FeeComponents._fromProtobuf(feeData.networkdata)\n                    : undefined,\n            servicedata:\n                feeData.servicedata != null\n                    ? FeeComponents._fromProtobuf(feeData.servicedata)\n                    : undefined,\n            feeDataType:\n                feeData.subType != null\n                    ? FeeDataType._fromCode(feeData.subType)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {HieroProto.proto.IFeeData}\n     */\n    _toProtobuf() {\n        return {\n            nodedata:\n                this.nodedata != null ? this.nodedata._toProtobuf() : undefined,\n\n            networkdata:\n                this.networkdata != null\n                    ? this.networkdata._toProtobuf()\n                    : undefined,\n\n            servicedata:\n                this.servicedata != null\n                    ? this.servicedata._toProtobuf()\n                    : undefined,\n\n            subType:\n                this.feeDataType != null\n                    ? this.feeDataType.valueOf()\n                    : undefined,\n        };\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return HieroProto.proto.FeeData.encode(this._toProtobuf()).finish();\n    }\n}\n"],"names":["FeeData","constructor","props","this","nodedata","networkdata","servicedata","feeDataType","fromBytes","bytes","_fromProtobuf","HieroProto","proto","decode","feeData","FeeComponents","undefined","subType","FeeDataType","_fromCode","_toProtobuf","valueOf","toBytes","encode","finish"],"mappings":"qGAsBe,MAAMA,EAQjB,WAAAC,CAAYC,EAAQ,IAMhBC,KAAKC,SAAWF,EAAME,SAOtBD,KAAKE,YAAcH,EAAMG,YAOzBF,KAAKG,YAAcJ,EAAMI,YAOzBH,KAAKI,YAAcL,EAAMK,WACjC,CAMI,gBAAOC,CAAUC,GACb,OAAOT,EAAQU,cAAcC,EAAWC,MAAMZ,QAAQa,OAAOJ,GACrE,CAOI,oBAAOC,CAAcI,GACjB,OAAO,IAAId,EAAQ,CACfI,SACwB,MAApBU,EAAQV,SACFW,EAAcL,cAAcI,EAAQV,eACpCY,EACVX,YAC2B,MAAvBS,EAAQT,YACFU,EAAcL,cAAcI,EAAQT,kBACpCW,EACVV,YAC2B,MAAvBQ,EAAQR,YACFS,EAAcL,cAAcI,EAAQR,kBACpCU,EACVT,YACuB,MAAnBO,EAAQG,QACFC,EAAYC,UAAUL,EAAQG,cAC9BD,GAEtB,CAMI,WAAAI,GACI,MAAO,CACHhB,SACqB,MAAjBD,KAAKC,SAAmBD,KAAKC,SAASgB,mBAAgBJ,EAE1DX,YACwB,MAApBF,KAAKE,YACCF,KAAKE,YAAYe,mBACjBJ,EAEVV,YACwB,MAApBH,KAAKG,YACCH,KAAKG,YAAYc,mBACjBJ,EAEVC,QACwB,MAApBd,KAAKI,YACCJ,KAAKI,YAAYc,eACjBL,EAEtB,CAKI,OAAAM,GACI,OAAOX,EAAWC,MAAMZ,QAAQuB,OAAOpB,KAAKiB,eAAeI,QACnE"}