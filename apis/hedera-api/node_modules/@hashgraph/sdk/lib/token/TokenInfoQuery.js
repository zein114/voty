import t,{QUERY_REGISTRY as e}from"../query/Query.js";import o from"./TokenId.js";import n from"./TokenInfo.js";import"bignumber.js";import"../HbarUnit.js";import"long";class r extends t{constructor(t={}){super(),this._tokenId=null,null!=t.tokenId&&this.setTokenId(t.tokenId)}static _fromProtobuf(t){const e=t.tokenGetInfo;return new r({tokenId:null!=e.token?o._fromProtobuf(e.token):void 0})}get tokenId(){return this._tokenId}setTokenId(t){return this._tokenId="string"==typeof t?o.fromString(t):t.clone(),this}async getCost(t){return super.getCost(t)}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t)}_execute(t,e){return t.token.getTokenInfo(e)}_mapResponseHeader(t){return t.tokenGetInfo.header}_mapResponse(t,e,o){const r=t.tokenGetInfo;return Promise.resolve(n._fromProtobuf(r.tokenInfo))}_onMakeRequest(t){return{tokenGetInfo:{header:t,token:null!=this._tokenId?this._tokenId._toProtobuf():null}}}_getLogId(){return`TokenInfoQuery:${(null!=this._paymentTransactionId&&null!=this._paymentTransactionId.validStart?this._paymentTransactionId.validStart:this._timestamp).toString()}`}}e.set("tokenGetInfo",r._fromProtobuf);export{r as default};
//# sourceMappingURL=TokenInfoQuery.js.map
