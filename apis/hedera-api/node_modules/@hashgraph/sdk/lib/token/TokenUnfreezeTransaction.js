import t from"./TokenId.js";import n from"../account/AccountId.js";import o,{TRANSACTION_REGISTRY as e}from"../transaction/Transaction.js";class r extends o{constructor(t={}){super(),this._tokenId=null,this._accountId=null,null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(e,u,c,s,a){const i=a[0].tokenUnfreeze;return o._fromProtobufTransactions(new r({tokenId:null!=i.token?t._fromProtobuf(i.token):void 0,accountId:null!=i.account?n._fromProtobuf(i.account):void 0}),e,u,c,s,a)}get tokenId(){return this._tokenId}setTokenId(n){return this._requireNotFrozen(),this._tokenId="string"==typeof n?t.fromString(n):n.clone(),this}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?n.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t),null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,n){return t.token.unfreezeTokenAccount(n)}_getTransactionDataCase(){return"tokenUnfreeze"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null,account:null!=this._accountId?this._accountId._toProtobuf():null}}_getLogId(){return`TokenUnfreezeTransaction:${this._transactionIds.current.validStart.toString()}`}}e.set("tokenUnfreeze",r._fromProtobuf);export{r as default};
//# sourceMappingURL=TokenUnfreezeTransaction.js.map
