{"version":3,"file":"AssessedCustomFee.js","sources":["../../src/token/AssessedCustomFee.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport { convertAmountToLong } from \"../util.js\";\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IAssessedCustomFee} HieroProto.proto.IAssessedCustomFee\n */\n\n/**\n * @typedef {object} AssessedCustomFeeJSON\n * @property {?string} feeCollectorAccountId\n * @property {?string} tokenId\n * @property {?string} amount\n * @property {string[]} payerAccountIds\n */\n\n/**\n * Represents an assessed custom fee that has been evaluated and attached to a transaction.\n * This includes details about who collects the fee, which token the fee is paid in,\n * the amount of the fee, and which accounts are responsible for paying it.\n */\nexport default class AssessedCustomFee {\n    /**\n     * @param {object} props\n     * @param {AccountId | string} [props.feeCollectorAccountId]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {Long | number | BigNumber | bigint} [props.amount]\n     * @param {AccountId[]} [props.payerAccountIds]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {?AccountId}\n         */\n        this._feeCollectorAccountId = null;\n\n        if (props.feeCollectorAccountId != null) {\n            this.setFeeCollectorAccountId(props.feeCollectorAccountId);\n        }\n\n        /**\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        /**\n         * @type {?Long}\n         */\n        this._amount = null;\n\n        if (props.amount != null) {\n            this.setAmount(props.amount);\n        }\n\n        /**\n         * @type {?AccountId[]}\n         */\n        this._payerAccountIds = null;\n\n        if (props.payerAccountIds != null) {\n            this.setPayerAccountIds(props.payerAccountIds);\n        }\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get feeCollectorAccountId() {\n        return this._feeCollectorAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} feeCollectorAccountId\n     * @returns {this}\n     */\n    setFeeCollectorAccountId(feeCollectorAccountId) {\n        this._feeCollectorAccountId =\n            typeof feeCollectorAccountId === \"string\"\n                ? AccountId.fromString(feeCollectorAccountId)\n                : feeCollectorAccountId;\n        return this;\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._tokenId =\n            typeof tokenId === \"string\" ? TokenId.fromString(tokenId) : tokenId;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * @param {Long | number | BigNumber | bigint} amount\n     * @returns {AssessedCustomFee}\n     */\n    setAmount(amount) {\n        this._amount = convertAmountToLong(amount);\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId[]}\n     */\n    get payerAccountIds() {\n        return this._payerAccountIds;\n    }\n\n    /**\n     * @param {AccountId[]} payerAccountIds\n     * @returns {AssessedCustomFee}\n     */\n    setPayerAccountIds(payerAccountIds) {\n        this._payerAccountIds = payerAccountIds;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.IAssessedCustomFee} fee\n     * @returns {AssessedCustomFee}\n     */\n    static _fromProtobuf(fee) {\n        return new AssessedCustomFee({\n            feeCollectorAccountId:\n                fee.feeCollectorAccountId != null\n                    ? AccountId._fromProtobuf(fee.feeCollectorAccountId)\n                    : undefined,\n            tokenId:\n                fee.tokenId != null\n                    ? TokenId._fromProtobuf(fee.tokenId)\n                    : undefined,\n            amount: fee.amount != null ? fee.amount : undefined,\n            payerAccountIds:\n                fee.effectivePayerAccountId != null\n                    ? fee.effectivePayerAccountId.map((id) =>\n                          AccountId._fromProtobuf(id),\n                      )\n                    : undefined,\n        });\n    }\n\n    /**\n     * @internal\n     * @abstract\n     * @returns {HieroProto.proto.IAssessedCustomFee}\n     */\n    _toProtobuf() {\n        return {\n            feeCollectorAccountId:\n                this.feeCollectorAccountId != null\n                    ? this.feeCollectorAccountId._toProtobuf()\n                    : null,\n            tokenId: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            amount: this._amount,\n            effectivePayerAccountId:\n                this._payerAccountIds != null\n                    ? this._payerAccountIds.map((id) => id._toProtobuf())\n                    : null,\n        };\n    }\n\n    /**\n     * @returns {AssessedCustomFeeJSON}\n     */\n    toJSON() {\n        return {\n            feeCollectorAccountId:\n                this.feeCollectorAccountId?.toString() || null,\n            tokenId: this._tokenId?.toString() || null,\n            amount: this._amount?.toString() || null,\n            payerAccountIds:\n                this._payerAccountIds?.map((id) => id.toString()) || [],\n        };\n    }\n}\n"],"names":["AssessedCustomFee","constructor","props","this","_feeCollectorAccountId","feeCollectorAccountId","setFeeCollectorAccountId","_tokenId","tokenId","setTokenId","_amount","amount","setAmount","_payerAccountIds","payerAccountIds","setPayerAccountIds","AccountId","fromString","TokenId","convertAmountToLong","_fromProtobuf","fee","undefined","effectivePayerAccountId","map","id","_toProtobuf","toJSON","toString"],"mappings":"oHA4Be,MAAMA,EAQjB,WAAAC,CAAYC,EAAQ,IAIhBC,KAAKC,uBAAyB,KAEK,MAA/BF,EAAMG,uBACNF,KAAKG,yBAAyBJ,EAAMG,uBAMxCF,KAAKI,SAAW,KAEK,MAAjBL,EAAMM,SACNL,KAAKM,WAAWP,EAAMM,SAM1BL,KAAKO,QAAU,KAEK,MAAhBR,EAAMS,QACNR,KAAKS,UAAUV,EAAMS,QAMzBR,KAAKU,iBAAmB,KAEK,MAAzBX,EAAMY,iBACNX,KAAKY,mBAAmBb,EAAMY,gBAE1C,CAKI,yBAAIT,GACA,OAAOF,KAAKC,sBACpB,CAMI,wBAAAE,CAAyBD,GAKrB,OAJAF,KAAKC,uBACgC,iBAA1BC,EACDW,EAAUC,WAAWZ,GACrBA,EACHF,IACf,CAKI,WAAIK,GACA,OAAOL,KAAKI,QACpB,CAMI,UAAAE,CAAWD,GAGP,OAFAL,KAAKI,SACkB,iBAAZC,EAAuBU,EAAQD,WAAWT,GAAWA,EACzDL,IACf,CAKI,UAAIQ,GACA,OAAOR,KAAKO,OACpB,CAMI,SAAAE,CAAUD,GAEN,OADAR,KAAKO,QAAUS,EAAoBR,GAC5BR,IACf,CAKI,mBAAIW,GACA,OAAOX,KAAKU,gBACpB,CAMI,kBAAAE,CAAmBD,GAEf,OADAX,KAAKU,iBAAmBC,EACjBX,IACf,CAOI,oBAAOiB,CAAcC,GACjB,OAAO,IAAIrB,EAAkB,CACzBK,sBACiC,MAA7BgB,EAAIhB,sBACEW,EAAUI,cAAcC,EAAIhB,4BAC5BiB,EACVd,QACmB,MAAfa,EAAIb,QACEU,EAAQE,cAAcC,EAAIb,cAC1Bc,EACVX,OAAsB,MAAdU,EAAIV,OAAiBU,EAAIV,YAASW,EAC1CR,gBACmC,MAA/BO,EAAIE,wBACEF,EAAIE,wBAAwBC,IAAKC,GAC7BT,EAAUI,cAAcK,SAE5BH,GAEtB,CAOI,WAAAI,GACI,MAAO,CACHrB,sBACkC,MAA9BF,KAAKE,sBACCF,KAAKE,sBAAsBqB,cAC3B,KACVlB,QAA0B,MAAjBL,KAAKI,SAAmBJ,KAAKI,SAASmB,cAAgB,KAC/Df,OAAQR,KAAKO,QACba,wBAC6B,MAAzBpB,KAAKU,iBACCV,KAAKU,iBAAiBW,IAAKC,GAAOA,EAAGC,eACrC,KAEtB,CAKI,MAAAC,GACI,MAAO,CACHtB,sBACIF,KAAKE,uBAAuBuB,YAAc,KAC9CpB,QAASL,KAAKI,UAAUqB,YAAc,KACtCjB,OAAQR,KAAKO,SAASkB,YAAc,KACpCd,gBACIX,KAAKU,kBAAkBW,IAAKC,GAAOA,EAAGG,aAAe,GAErE"}