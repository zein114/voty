{"version":3,"file":"TokenCreateTransaction.js","sources":["../../src/token/TokenCreateTransaction.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport Hbar from \"../Hbar.js\";\nimport Transaction, {\n    DEFAULT_AUTO_RENEW_PERIOD,\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Long from \"long\";\nimport AccountId from \"../account/AccountId.js\";\nimport { convertAmountToLong } from \"../util.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Duration from \"../Duration.js\";\nimport CustomFixedFee from \"./CustomFixedFee.js\";\nimport CustomFractionalFee from \"./CustomFractionalFee.js\";\nimport CustomRoyaltyFee from \"./CustomRoyaltyFee.js\";\nimport TokenType from \"./TokenType.js\";\nimport TokenSupplyType from \"./TokenSupplyType.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HieroProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HieroProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HieroProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HieroProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HieroProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenCreateTransactionBody} HieroProto.proto.ITokenCreateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenID} HieroProto.proto.ITokenID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"./CustomFee.js\").default} CustomFee\n */\n\n/**\n * Create a new Hederaâ„¢ crypto-currency token.\n */\nexport default class TokenCreateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {string} [props.tokenName]\n     * @param {string} [props.tokenSymbol]\n     * @param {Long | number} [props.decimals]\n     * @param {Long | number | BigNumber | bigint} [props.initialSupply]\n     * @param {AccountId | string} [props.treasuryAccountId]\n     * @param {Key} [props.adminKey]\n     * @param {Key} [props.kycKey]\n     * @param {Key} [props.freezeKey]\n     * @param {Key} [props.pauseKey]\n     * @param {Key} [props.wipeKey]\n     * @param {Key} [props.supplyKey]\n     * @param {Key} [props.feeScheduleKey]\n     * @param {boolean} [props.freezeDefault]\n     * @param {AccountId | string} [props.autoRenewAccountId]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {string} [props.tokenMemo]\n     * @param {CustomFee[]} [props.customFees]\n     * @param {TokenType} [props.tokenType]\n     * @param {TokenSupplyType} [props.supplyType]\n     * @param {Long | number | BigNumber | bigint} [props.maxSupply]\n     * @param {Key} [props.metadataKey]\n     * @param {Uint8Array} [props.metadata]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenName = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenSymbol = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._decimals = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._initialSupply = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._treasuryAccountId = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._kycKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._freezeKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._pauseKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._wipeKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._supplyKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._feeScheduleKey = null;\n\n        /**\n         * @private\n         * @type {?boolean}\n         */\n        this._freezeDefault = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._autoRenewAccountId = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = new Timestamp(\n            Math.floor(\n                Date.now() / 1000 + DEFAULT_AUTO_RENEW_PERIOD.toNumber(),\n            ),\n            0,\n        );\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._autoRenewPeriod = new Duration(DEFAULT_AUTO_RENEW_PERIOD);\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenMemo = null;\n\n        /**\n         * @private\n         * @type {CustomFee[]}\n         */\n        this._customFees = [];\n\n        /**\n         * @private\n         * @type {?TokenType}\n         */\n        this._tokenType = null;\n\n        /**\n         * @private\n         * @type {?TokenSupplyType}\n         */\n        this._supplyType = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._maxSupply = null;\n\n        this._defaultMaxTransactionFee = new Hbar(30);\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._metadataKey = null;\n\n        /**\n         * @private\n         * @description Metadata of the created token definition.\n         * @type {?Uint8Array}\n         */\n        this._metadata = null;\n\n        if (props.tokenName != null) {\n            this.setTokenName(props.tokenName);\n        }\n\n        if (props.tokenSymbol != null) {\n            this.setTokenSymbol(props.tokenSymbol);\n        }\n\n        if (props.decimals != null) {\n            this.setDecimals(props.decimals);\n        }\n\n        if (props.initialSupply != null) {\n            this.setInitialSupply(props.initialSupply);\n        }\n\n        if (props.treasuryAccountId != null) {\n            this.setTreasuryAccountId(props.treasuryAccountId);\n        }\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.kycKey != null) {\n            this.setKycKey(props.kycKey);\n        }\n\n        if (props.freezeKey != null) {\n            this.setFreezeKey(props.freezeKey);\n        }\n\n        if (props.pauseKey != null) {\n            this.setPauseKey(props.pauseKey);\n        }\n\n        if (props.wipeKey != null) {\n            this.setWipeKey(props.wipeKey);\n        }\n\n        if (props.supplyKey != null) {\n            this.setSupplyKey(props.supplyKey);\n        }\n\n        if (props.feeScheduleKey != null) {\n            this.setFeeScheduleKey(props.feeScheduleKey);\n        }\n\n        if (props.freezeDefault != null) {\n            this.setFreezeDefault(props.freezeDefault);\n        }\n\n        if (props.autoRenewAccountId != null) {\n            this.setAutoRenewAccountId(props.autoRenewAccountId);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.tokenMemo != null) {\n            this.setTokenMemo(props.tokenMemo);\n        }\n\n        if (props.customFees != null) {\n            this.setCustomFees(props.customFees);\n        }\n\n        if (props.tokenType != null) {\n            this.setTokenType(props.tokenType);\n        }\n\n        if (props.supplyType != null) {\n            this.setSupplyType(props.supplyType);\n        }\n\n        if (props.maxSupply != null) {\n            this.setMaxSupply(props.maxSupply);\n        }\n\n        if (props.metadataKey != null) {\n            this.setMetadataKey(props.metadataKey);\n        }\n\n        if (props.metadata != null) {\n            this.setMetadata(props.metadata);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ITransaction[]} transactions\n     * @param {HieroProto.proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {HieroProto.proto.ITransactionBody[]} bodies\n     * @returns {TokenCreateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies,\n    ) {\n        const body = bodies[0];\n        const create =\n            /** @type {HieroProto.proto.ITokenCreateTransactionBody} */ (\n                body.tokenCreation\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenCreateTransaction({\n                tokenName: create.name != null ? create.name : undefined,\n                tokenSymbol: create.symbol != null ? create.symbol : undefined,\n                decimals: create.decimals != null ? create.decimals : undefined,\n                initialSupply:\n                    create.initialSupply != null\n                        ? create.initialSupply\n                        : undefined,\n                treasuryAccountId:\n                    create.treasury != null\n                        ? AccountId._fromProtobuf(create.treasury)\n                        : undefined,\n                adminKey:\n                    create.adminKey != null\n                        ? Key._fromProtobufKey(create.adminKey)\n                        : undefined,\n                kycKey:\n                    create.kycKey != null\n                        ? Key._fromProtobufKey(create.kycKey)\n                        : undefined,\n                freezeKey:\n                    create.freezeKey != null\n                        ? Key._fromProtobufKey(create.freezeKey)\n                        : undefined,\n                pauseKey:\n                    create.pauseKey != null\n                        ? Key._fromProtobufKey(create.pauseKey)\n                        : undefined,\n                wipeKey:\n                    create.wipeKey != null\n                        ? Key._fromProtobufKey(create.wipeKey)\n                        : undefined,\n                supplyKey:\n                    create.supplyKey != null\n                        ? Key._fromProtobufKey(create.supplyKey)\n                        : undefined,\n                feeScheduleKey:\n                    create.feeScheduleKey != null\n                        ? Key._fromProtobufKey(create.feeScheduleKey)\n                        : undefined,\n                freezeDefault:\n                    create.freezeDefault != null\n                        ? create.freezeDefault\n                        : undefined,\n                autoRenewAccountId:\n                    create.autoRenewAccount != null\n                        ? AccountId._fromProtobuf(create.autoRenewAccount)\n                        : undefined,\n                expirationTime:\n                    create.expiry != null\n                        ? Timestamp._fromProtobuf(create.expiry)\n                        : undefined,\n                autoRenewPeriod:\n                    create.autoRenewPeriod != null\n                        ? Duration._fromProtobuf(create.autoRenewPeriod)\n                        : undefined,\n                tokenMemo: create.memo != null ? create.memo : undefined,\n                customFees:\n                    create.customFees != null\n                        ? create.customFees.map((fee) => {\n                              if (fee.fixedFee != null) {\n                                  return CustomFixedFee._fromProtobuf(fee);\n                              } else if (fee.fractionalFee != null) {\n                                  return CustomFractionalFee._fromProtobuf(fee);\n                              } else {\n                                  return CustomRoyaltyFee._fromProtobuf(fee);\n                              }\n                          })\n                        : undefined,\n                tokenType:\n                    create.tokenType != null\n                        ? TokenType._fromCode(create.tokenType)\n                        : undefined,\n                supplyType:\n                    create.supplyType != null\n                        ? TokenSupplyType._fromCode(create.supplyType)\n                        : undefined,\n                maxSupply:\n                    create.maxSupply != null ? create.maxSupply : undefined,\n                metadataKey:\n                    create.metadataKey != null\n                        ? Key._fromProtobufKey(create.metadataKey)\n                        : undefined,\n                metadata: create.metadata != null ? create.metadata : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies,\n        );\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenName() {\n        return this._tokenName;\n    }\n\n    /**\n     * @param {string} name\n     * @returns {this}\n     */\n    setTokenName(name) {\n        this._requireNotFrozen();\n        this._tokenName = name;\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenSymbol() {\n        return this._tokenSymbol;\n    }\n\n    /**\n     * @param {string} symbol\n     * @returns {this}\n     */\n    setTokenSymbol(symbol) {\n        this._requireNotFrozen();\n        this._tokenSymbol = symbol;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get decimals() {\n        return this._decimals;\n    }\n\n    /**\n     * @param {Long | number} decimals\n     * @returns {this}\n     */\n    setDecimals(decimals) {\n        this._requireNotFrozen();\n        this._decimals =\n            decimals instanceof Long ? decimals : Long.fromValue(decimals);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get initialSupply() {\n        return this._initialSupply;\n    }\n\n    /**\n     * @param {Long | number | BigNumber | bigint} initialSupply\n     * @returns {this}\n     */\n    setInitialSupply(initialSupply) {\n        this._requireNotFrozen();\n        this._initialSupply = convertAmountToLong(initialSupply);\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get treasuryAccountId() {\n        return this._treasuryAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} id\n     * @returns {this}\n     */\n    setTreasuryAccountId(id) {\n        this._requireNotFrozen();\n        this._treasuryAccountId =\n            typeof id === \"string\" ? AccountId.fromString(id) : id.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setAdminKey(key) {\n        this._requireNotFrozen();\n        this._adminKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get kycKey() {\n        return this._kycKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setKycKey(key) {\n        this._requireNotFrozen();\n        this._kycKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get freezeKey() {\n        return this._freezeKey;\n    }\n\n    /**\n     * @override\n     * @param {?import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {this}\n     */\n    freezeWith(client) {\n        if (\n            !this._autoRenewAccountId &&\n            this.transactionId?.accountId &&\n            this.autoRenewPeriod != null\n        ) {\n            this.setAutoRenewAccountId(this.transactionId?.accountId);\n        } else if (\n            !this._autoRenewAccountId &&\n            client?.operatorAccountId &&\n            this.autoRenewPeriod != null\n        ) {\n            this.setAutoRenewAccountId(client.operatorAccountId);\n        }\n        return super.freezeWith(client);\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setFreezeKey(key) {\n        this._requireNotFrozen();\n        this._freezeKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get pauseKey() {\n        return this._pauseKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setPauseKey(key) {\n        this._requireNotFrozen();\n        this._pauseKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get wipeKey() {\n        return this._wipeKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setWipeKey(key) {\n        this._requireNotFrozen();\n        this._wipeKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get supplyKey() {\n        return this._supplyKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setSupplyKey(key) {\n        this._requireNotFrozen();\n        this._supplyKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get feeScheduleKey() {\n        return this._feeScheduleKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setFeeScheduleKey(key) {\n        this._requireNotFrozen();\n        this._feeScheduleKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?boolean}\n     */\n    get freezeDefault() {\n        return this._freezeDefault;\n    }\n\n    /**\n     * @param {boolean} freeze\n     * @returns {this}\n     */\n    setFreezeDefault(freeze) {\n        this._requireNotFrozen();\n        this._freezeDefault = freeze;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * If autoRenewPeriod is set - this value will be ignored and the expiration time will be calculated based on the autoRenewPeriod + time.now()\n     * Setting this value will clear the autoRenewPeriod as the autoRenewPeriod period has default value of 7890000 seconds and leaving it set will override the expiration time\n     * @param {Timestamp | Date} time\n     * @returns {this}\n     */\n    setExpirationTime(time) {\n        this._requireNotFrozen();\n        this._expirationTime =\n            time instanceof Timestamp ? time : Timestamp.fromDate(time);\n        this._autoRenewPeriod = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get autoRenewAccountId() {\n        return this._autoRenewAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} id\n     * @returns {this}\n     */\n    setAutoRenewAccountId(id) {\n        this._requireNotFrozen();\n        this._autoRenewAccountId =\n            id instanceof AccountId ? id : AccountId.fromString(id);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * If expirationTime is set - autoRenewPeriod will be effectively ignored and it's effect will be replaced by expirationTime\n     *\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenMemo() {\n        return this._tokenMemo;\n    }\n\n    /**\n     * @param {string} memo\n     * @returns {this}\n     */\n    setTokenMemo(memo) {\n        this._requireNotFrozen();\n        this._tokenMemo = memo;\n\n        return this;\n    }\n\n    /**\n     * @returns {CustomFee[]}\n     */\n    get customFees() {\n        return this._customFees;\n    }\n\n    /**\n     * @param {CustomFee[]} customFees\n     * @returns {this}\n     */\n    setCustomFees(customFees) {\n        this._customFees = customFees;\n        return this;\n    }\n\n    /**\n     * @returns {?TokenType}\n     */\n    get tokenType() {\n        return this._tokenType;\n    }\n\n    /**\n     * @param {TokenType} tokenType\n     * @returns {this}\n     */\n    setTokenType(tokenType) {\n        this._tokenType = tokenType;\n        return this;\n    }\n\n    /**\n     * @returns {?TokenSupplyType}\n     */\n    get supplyType() {\n        return this._supplyType;\n    }\n\n    /**\n     * @param {TokenSupplyType} supplyType\n     * @returns {this}\n     */\n    setSupplyType(supplyType) {\n        this._supplyType = supplyType;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get maxSupply() {\n        return this._maxSupply;\n    }\n\n    /**\n     * @param {Long | number | BigNumber | bigint} maxSupply\n     * @returns {this}\n     */\n    setMaxSupply(maxSupply) {\n        this._maxSupply = convertAmountToLong(maxSupply);\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get metadataKey() {\n        return this._metadataKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setMetadataKey(key) {\n        this._requireNotFrozen();\n        this._metadataKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get metadata() {\n        return this._metadata;\n    }\n\n    /**\n     * @param {Uint8Array} metadata\n     * @returns {this}\n     */\n    setMetadata(metadata) {\n        this._requireNotFrozen();\n        this._metadata = metadata;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._treasuryAccountId != null) {\n            this._treasuryAccountId.validateChecksum(client);\n        }\n\n        if (this._autoRenewAccountId != null) {\n            this._autoRenewAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HieroProto.proto.ITransaction} request\n     * @returns {Promise<HieroProto.proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.createToken(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<HieroProto.proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenCreation\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {HieroProto.proto.ITokenCreateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            name: this._tokenName,\n            symbol: this._tokenSymbol,\n            decimals: this._decimals != null ? this._decimals.toInt() : null,\n            initialSupply: this._initialSupply,\n            treasury:\n                this._treasuryAccountId != null\n                    ? this._treasuryAccountId._toProtobuf()\n                    : null,\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            kycKey: this._kycKey != null ? this._kycKey._toProtobufKey() : null,\n            freezeKey:\n                this._freezeKey != null\n                    ? this._freezeKey._toProtobufKey()\n                    : null,\n            pauseKey:\n                this._pauseKey != null ? this._pauseKey._toProtobufKey() : null,\n            wipeKey:\n                this._wipeKey != null ? this._wipeKey._toProtobufKey() : null,\n            supplyKey:\n                this._supplyKey != null\n                    ? this._supplyKey._toProtobufKey()\n                    : null,\n            feeScheduleKey:\n                this._feeScheduleKey != null\n                    ? this._feeScheduleKey._toProtobufKey()\n                    : null,\n            freezeDefault: this._freezeDefault,\n            autoRenewAccount:\n                this._autoRenewAccountId != null\n                    ? this._autoRenewAccountId._toProtobuf()\n                    : null,\n            expiry:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n            autoRenewPeriod:\n                this._autoRenewPeriod != null\n                    ? this._autoRenewPeriod._toProtobuf()\n                    : null,\n            memo: this._tokenMemo,\n            customFees: this.customFees.map((fee) => fee._toProtobuf()),\n            tokenType: this._tokenType != null ? this._tokenType._code : null,\n            supplyType:\n                this._supplyType != null ? this._supplyType._code : null,\n            maxSupply: this.maxSupply,\n            metadataKey:\n                this._metadataKey != null\n                    ? this._metadataKey._toProtobufKey()\n                    : null,\n            metadata: this._metadata != null ? this._metadata : undefined,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp = /** @type {import(\"../Timestamp.js\").default} */ (\n            this._transactionIds.current.validStart\n        );\n        return `TokenCreateTransaction:${timestamp.toString()}`;\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenCreation\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenCreateTransaction._fromProtobuf,\n);\n"],"names":["TokenCreateTransaction","Transaction","constructor","props","super","this","_tokenName","_tokenSymbol","_decimals","_initialSupply","_treasuryAccountId","_adminKey","_kycKey","_freezeKey","_pauseKey","_wipeKey","_supplyKey","_feeScheduleKey","_freezeDefault","_autoRenewAccountId","_expirationTime","Timestamp","Math","floor","Date","now","DEFAULT_AUTO_RENEW_PERIOD","toNumber","_autoRenewPeriod","Duration","_tokenMemo","_customFees","_tokenType","_supplyType","_maxSupply","_defaultMaxTransactionFee","Hbar","_metadataKey","_metadata","tokenName","setTokenName","tokenSymbol","setTokenSymbol","decimals","setDecimals","initialSupply","setInitialSupply","treasuryAccountId","setTreasuryAccountId","adminKey","setAdminKey","kycKey","setKycKey","freezeKey","setFreezeKey","pauseKey","setPauseKey","wipeKey","setWipeKey","supplyKey","setSupplyKey","feeScheduleKey","setFeeScheduleKey","freezeDefault","setFreezeDefault","autoRenewAccountId","setAutoRenewAccountId","expirationTime","setExpirationTime","autoRenewPeriod","setAutoRenewPeriod","tokenMemo","setTokenMemo","customFees","setCustomFees","tokenType","setTokenType","supplyType","setSupplyType","maxSupply","setMaxSupply","metadataKey","setMetadataKey","metadata","setMetadata","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","create","_fromProtobufTransactions","name","undefined","symbol","treasury","AccountId","Key","_fromProtobufKey","autoRenewAccount","expiry","memo","map","fee","fixedFee","CustomFixedFee","fractionalFee","CustomFractionalFee","CustomRoyaltyFee","TokenType","_fromCode","TokenSupplyType","_requireNotFrozen","Long","fromValue","convertAmountToLong","id","fromString","clone","key","freezeWith","client","transactionId","accountId","operatorAccountId","freeze","time","fromDate","_validateChecksums","validateChecksum","_execute","channel","request","token","createToken","_getTransactionDataCase","_makeTransactionData","toInt","_toProtobuf","_toProtobufKey","_code","_getLogId","_transactionIds","current","toString","TRANSACTION_REGISTRY","set"],"mappings":"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"}