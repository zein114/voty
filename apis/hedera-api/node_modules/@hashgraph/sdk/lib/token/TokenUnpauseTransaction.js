import t from"./TokenId.js";import n,{TRANSACTION_REGISTRY as e}from"../transaction/Transaction.js";class o extends n{constructor(t={}){super(),this._tokenId=null,null!=t.tokenId&&this.setTokenId(t.tokenId)}static _fromProtobuf(e,r,s,a,u){const i=u[0].tokenUnpause;return n._fromProtobufTransactions(new o({tokenId:null!=i.token?t._fromProtobuf(i.token):void 0}),e,r,s,a,u)}get tokenId(){return this._tokenId}setTokenId(n){return this._requireNotFrozen(),this._tokenId="string"==typeof n?t.fromString(n):n.clone(),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t)}_execute(t,n){return t.token.unpauseToken(n)}_getTransactionDataCase(){return"tokenUnpause"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null}}_getLogId(){return`TokenUnpauseTransaction:${this._transactionIds.current.validStart.toString()}`}}e.set("tokenUnpause",o._fromProtobuf);export{o as default};
//# sourceMappingURL=TokenUnpauseTransaction.js.map
