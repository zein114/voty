import t from"./TokenId.js";import e,{TRANSACTION_REGISTRY as a}from"../transaction/Transaction.js";class s extends e{constructor(t={}){super(),this._tokenId=null,this._serialNumbers=[],this._metadata=null,null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.serialNumbers&&this.setSerialNumbers(t.serialNumbers),null!=t.metadata&&this.setMetadata(t.metadata)}static _fromProtobuf(a,r,n,o,i){const u=i[0].tokenUpdateNfts;return e._fromProtobufTransactions(new s({tokenId:null!=u.token?t._fromProtobuf(u.token):void 0,serialNumbers:null!=u.serialNumbers?u.serialNumbers:[],metadata:null!=u.metadata&&Object.hasOwn(u.metadata,"value")?u.metadata.value:void 0}),a,r,n,o,i)}setTokenId(e){return this._requireNotFrozen(),this._tokenId="string"==typeof e?t.fromString(e):e.clone(),this}setSerialNumbers(t){return this._requireNotFrozen(),this._serialNumbers=t,this}setMetadata(t){return this._requireNotFrozen(),this._metadata=t,this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t)}_execute(t,e){return t.token.pauseToken(e)}_getTransactionDataCase(){return"tokenUpdateNfts"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null,serialNumbers:null!=this._serialNumbers?this._serialNumbers:[],...null!=this._metadata?{metadata:{value:this._metadata}}:null}}_getLogId(){return`TokenUpdateNftsTransaction:${this._transactionIds.current.validStart.toString()}`}}a.set("tokenUpdateNfts",s._fromProtobuf);export{s as default};
//# sourceMappingURL=TokenUpdateNftsTransaction.js.map
