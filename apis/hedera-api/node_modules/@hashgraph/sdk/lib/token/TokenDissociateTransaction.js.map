{"version":3,"file":"TokenDissociateTransaction.js","sources":["../../src/token/TokenDissociateTransaction.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport Hbar from \"../Hbar.js\";\nimport TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HieroProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HieroProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HieroProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HieroProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HieroProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenDissociateTransactionBody} HieroProto.proto.ITokenDissociateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenID} HieroProto.proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Dissociate a new Hederaâ„¢ crypto-currency token.\n */\nexport default class TokenDissociateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {(TokenId | string)[]} [props.tokenIds]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId[]}\n         */\n        this._tokenIds = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        this._defaultMaxTransactionFee = new Hbar(5);\n\n        if (props.tokenIds != null) {\n            this.setTokenIds(props.tokenIds);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ITransaction[]} transactions\n     * @param {HieroProto.proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {HieroProto.proto.ITransactionBody[]} bodies\n     * @returns {TokenDissociateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies,\n    ) {\n        const body = bodies[0];\n        const dissociateToken =\n            /** @type {HieroProto.proto.ITokenDissociateTransactionBody} */ (\n                body.tokenDissociate\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenDissociateTransaction({\n                tokenIds:\n                    dissociateToken.tokens != null\n                        ? dissociateToken.tokens.map((token) =>\n                              TokenId._fromProtobuf(token),\n                          )\n                        : undefined,\n                accountId:\n                    dissociateToken.account != null\n                        ? AccountId._fromProtobuf(dissociateToken.account)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies,\n        );\n    }\n\n    /**\n     * @returns {?TokenId[]}\n     */\n    get tokenIds() {\n        return this._tokenIds;\n    }\n\n    /**\n     * @param {(TokenId | string)[]} tokenIds\n     * @returns {this}\n     */\n    setTokenIds(tokenIds) {\n        this._requireNotFrozen();\n        this._tokenIds = tokenIds.map((tokenId) =>\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone(),\n        );\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n\n        for (const tokenId of this._tokenIds != null ? this._tokenIds : []) {\n            if (tokenId != null) {\n                tokenId.validateChecksum(client);\n            }\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HieroProto.proto.ITransaction} request\n     * @returns {Promise<HieroProto.proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.dissociateTokens(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<HieroProto.proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenDissociate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {HieroProto.proto.ITokenDissociateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            tokens:\n                this._tokenIds != null\n                    ? this._tokenIds.map((tokenId) => tokenId._toProtobuf())\n                    : null,\n            account:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp = /** @type {import(\"../Timestamp.js\").default} */ (\n            this._transactionIds.current.validStart\n        );\n        return `TokenDissociateTransaction:${timestamp.toString()}`;\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenDissociate\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenDissociateTransaction._fromProtobuf,\n);\n"],"names":["TokenDissociateTransaction","Transaction","constructor","props","super","this","_tokenIds","_accountId","_defaultMaxTransactionFee","Hbar","tokenIds","setTokenIds","accountId","setAccountId","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","dissociateToken","_fromProtobufTransactions","tokens","map","token","TokenId","undefined","account","AccountId","_requireNotFrozen","tokenId","fromString","clone","_validateChecksums","client","validateChecksum","_execute","channel","request","dissociateTokens","_getTransactionDataCase","_makeTransactionData","_toProtobuf","_getLogId","_transactionIds","current","toString","TRANSACTION_REGISTRY","set"],"mappings":"qKA6Be,MAAMA,UAAmCC,EAMpD,WAAAC,CAAYC,EAAQ,IAChBC,QAMAC,KAAKC,UAAY,KAMjBD,KAAKE,WAAa,KAElBF,KAAKG,0BAA4B,IAAIC,EAAK,GAEpB,MAAlBN,EAAMO,UACNL,KAAKM,YAAYR,EAAMO,UAGJ,MAAnBP,EAAMS,WACNP,KAAKQ,aAAaV,EAAMS,UAEpC,CAWI,oBAAOE,CACHC,EACAC,EACAC,EACAC,EACAC,GAEA,MACMC,EADOD,EAAO,GAIf,gBAEL,OAAOlB,EAAYoB,0BACf,IAAIrB,EAA2B,CAC3BU,SAC8B,MAA1BU,EAAgBE,OACVF,EAAgBE,OAAOC,IAAKC,GACxBC,EAAQX,cAAcU,SAE1BE,EACVd,UAC+B,MAA3BQ,EAAgBO,QACVC,EAAUd,cAAcM,EAAgBO,cACxCD,IAEdX,EACAC,EACAC,EACAC,EACAC,EAEZ,CAKI,YAAIT,GACA,OAAOL,KAAKC,SACpB,CAMI,WAAAK,CAAYD,GAQR,OAPAL,KAAKwB,oBACLxB,KAAKC,UAAYI,EAASa,IAAKO,GACR,iBAAZA,EACDL,EAAQM,WAAWD,GACnBA,EAAQE,SAGX3B,IACf,CAKI,aAAIO,GACA,OAAOP,KAAKE,UACpB,CAMI,YAAAM,CAAaD,GAOT,OANAP,KAAKwB,oBACLxB,KAAKE,WACoB,iBAAdK,EACDgB,EAAUG,WAAWnB,GACrBA,EAAUoB,QAEb3B,IACf,CAKI,kBAAA4B,CAAmBC,GACQ,MAAnB7B,KAAKE,YACLF,KAAKE,WAAW4B,iBAAiBD,GAGrC,IAAK,MAAMJ,KAA6B,MAAlBzB,KAAKC,UAAoBD,KAAKC,UAAY,GAC7C,MAAXwB,GACAA,EAAQK,iBAAiBD,EAGzC,CASI,QAAAE,CAASC,EAASC,GACd,OAAOD,EAAQb,MAAMe,iBAAiBD,EAC9C,CAOI,uBAAAE,GACI,MAAO,iBACf,CAOI,oBAAAC,GACI,MAAO,CACHnB,OACsB,MAAlBjB,KAAKC,UACCD,KAAKC,UAAUiB,IAAKO,GAAYA,EAAQY,eACxC,KACVf,QACuB,MAAnBtB,KAAKE,WAAqBF,KAAKE,WAAWmC,cAAgB,KAE1E,CAKI,SAAAC,GAII,MAAO,8BAFHtC,KAAKuC,gBAAgBC,QACxB,WAC8CC,YACvD,EAGAC,EAAqBC,IACjB,kBAEAhD,EAA2Bc"}