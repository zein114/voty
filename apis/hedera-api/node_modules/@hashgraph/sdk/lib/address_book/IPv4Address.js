import t from"./IPv4AddressPart.js";class s{constructor(t={}){this._network=null,null!=t.network&&this.setNetwork(t.network),this._host=null,null!=t.host&&this.setHost(t.host)}get newtork(){return this._network}setNetwork(t){return this._network=t,this}get host(){return this._host}setHost(t){return this._host=t,this}static _fromProtobuf(r){return new s({network:(new t).setLeft(r[0]).setRight(r[1]),host:(new t).setLeft(r[2]).setRight(r[3])})}_toProtobuf(){return Uint8Array.of(null!=this._network&&null!=this._network._left?this._network._left:0,null!=this._network&&null!=this._network.right?this._network.right:0,null!=this._host&&null!=this._host.left?this._host.left:0,null!=this._host&&null!=this._host.right?this._host.right:0)}static _fromString(r){const e=r.split(".");if(4!==e.length)throw new Error("Invalid IPv4 address format");const o=(new t).setLeft(Number(e[0])).setRight(Number(e[1])),n=(new t).setLeft(Number(e[2])).setRight(Number(e[3]));return new s({network:o,host:n})}toString(){return null!=this._network&&null!=this._host?`${this._network.toString()}.${this._host.toString()}`:""}}export{s as default};
//# sourceMappingURL=IPv4Address.js.map
