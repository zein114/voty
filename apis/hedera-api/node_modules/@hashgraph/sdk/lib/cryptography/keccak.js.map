{"version":3,"file":"keccak.js","sources":["../../src/cryptography/keccak.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\n// Originally sourced from:\n// https://github.com/MaiaVictor/eth-lib/blob/da0971f5b09964d9c8449975fa87933f0c9fef35/src/hash.js\n//  - added type declarations\n//  - switched to es6 module syntax\n//\n// Disable linting for entire file because it's nearly all pure JS\n// eslint-disable\n\nconst HEX_CHARS = \"0123456789abcdef\".split(\"\");\nconst KECCAK_PADDING = [1, 256, 65536, 16777216];\nconst SHIFT = [0, 8, 16, 24];\nconst RC = [\n    1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0,\n    2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0,\n    2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905,\n    2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0,\n    2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648,\n    2147483649, 0, 2147516424, 2147483648,\n];\n\n/**\n * @typedef {object} KeccakT\n * @property {number[]} blocks\n * @property {number} blockCount\n * @property {number} outputBlocks\n * @property {number[]} s\n * @property {number} start\n * @property {number} block\n * @property {boolean} reset\n * @property {number=} lastByteIndex\n */\n\n/** @type {(bits: number) => KeccakT} */\nconst Keccak = (bits) => ({\n    blocks: [],\n    reset: true,\n    block: 0,\n    start: 0,\n    blockCount: (1600 - (bits << 1)) >> 5,\n    outputBlocks: bits >> 5,\n    // @ts-ignore\n    s: ((s) => [].concat(s, s, s, s, s))([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),\n});\n\n/** @type {(state: KeccakT, message: string | number[]) => string} */\n//NOSONAR\nconst update = (state, /** @type {string | number[]} */ message) => {\n    var length = message.length,\n        blocks = state.blocks,\n        byteCount = state.blockCount << 2,\n        blockCount = state.blockCount,\n        outputBlocks = state.outputBlocks,\n        s = state.s,\n        index = 0,\n        i,\n        code;\n\n    // update\n    while (index < length) {\n        if (state.reset) {\n            state.reset = false;\n            blocks[0] = state.block;\n            for (i = 1; i < blockCount + 1; ++i) {\n                blocks[i] = 0;\n            }\n        }\n        if (typeof message !== \"string\") {\n            for (i = state.start; index < length && i < byteCount; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        } else {\n            for (i = state.start; index < length && i < byteCount; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                } else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                } else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |=\n                        (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                } else {\n                    code =\n                        0x10000 +\n                        (((code & 0x3ff) << 10) |\n                            (message.charCodeAt(++index) & 0x3ff)); //NOSONAR\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |=\n                        (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |=\n                        (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        state.lastByteIndex = i;\n        if (i >= byteCount) {\n            state.start = i - byteCount;\n            state.block = blocks[blockCount];\n            for (i = 0; i < blockCount; ++i) {\n                s[i] ^= blocks[i];\n            }\n            f(s);\n            state.reset = true;\n        } else {\n            state.start = i;\n        }\n    }\n\n    // finalize\n    i = state.lastByteIndex;\n    // @ts-ignore\n    blocks[i >> 2] |= KECCAK_PADDING[i & 3];\n    if (state.lastByteIndex === byteCount) {\n        blocks[0] = blocks[blockCount];\n        for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n        }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n    }\n    f(s);\n\n    // toString\n    var hex = \"\";\n    var block;\n    var j = 0;\n    i = 0; //NOSONAR\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            block = s[i];\n            hex +=\n                HEX_CHARS[(block >> 4) & 0x0f] +\n                HEX_CHARS[block & 0x0f] +\n                HEX_CHARS[(block >> 12) & 0x0f] +\n                HEX_CHARS[(block >> 8) & 0x0f] +\n                HEX_CHARS[(block >> 20) & 0x0f] +\n                HEX_CHARS[(block >> 16) & 0x0f] +\n                HEX_CHARS[(block >> 28) & 0x0f] +\n                HEX_CHARS[(block >> 24) & 0x0f];\n        }\n        if (j % blockCount === 0) {\n            f(s);\n            i = 0; //NOSONAR\n        }\n    }\n    // @ts-ignore\n    return \"0x\" + hex;\n};\n\n/** @type {(s: number[]) => void} */\nconst f = (s) => {\n    var h,\n        l,\n        n,\n        c0,\n        c1,\n        c2,\n        c3,\n        c4,\n        c5,\n        c6,\n        c7,\n        c8,\n        c9,\n        b0,\n        b1,\n        b2,\n        b3,\n        b4,\n        b5,\n        b6,\n        b7,\n        b8,\n        b9,\n        b10,\n        b11,\n        b12,\n        b13,\n        b14,\n        b15,\n        b16,\n        b17,\n        b18,\n        b19,\n        b20,\n        b21,\n        b22,\n        b23,\n        b24,\n        b25,\n        b26,\n        b27,\n        b28,\n        b29,\n        b30,\n        b31,\n        b32,\n        b33,\n        b34,\n        b35,\n        b36,\n        b37,\n        b38,\n        b39,\n        b40,\n        b41,\n        b42,\n        b43,\n        b44,\n        b45,\n        b46,\n        b47,\n        b48,\n        b49;\n\n    for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n        h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n        l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n        l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n        l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n        l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n        l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n\n        b0 = s[0];\n        b1 = s[1];\n        b32 = (s[11] << 4) | (s[10] >>> 28);\n        b33 = (s[10] << 4) | (s[11] >>> 28);\n        b14 = (s[20] << 3) | (s[21] >>> 29);\n        b15 = (s[21] << 3) | (s[20] >>> 29);\n        b46 = (s[31] << 9) | (s[30] >>> 23);\n        b47 = (s[30] << 9) | (s[31] >>> 23);\n        b28 = (s[40] << 18) | (s[41] >>> 14);\n        b29 = (s[41] << 18) | (s[40] >>> 14);\n        b20 = (s[2] << 1) | (s[3] >>> 31);\n        b21 = (s[3] << 1) | (s[2] >>> 31);\n        b2 = (s[13] << 12) | (s[12] >>> 20);\n        b3 = (s[12] << 12) | (s[13] >>> 20);\n        b34 = (s[22] << 10) | (s[23] >>> 22);\n        b35 = (s[23] << 10) | (s[22] >>> 22);\n        b16 = (s[33] << 13) | (s[32] >>> 19);\n        b17 = (s[32] << 13) | (s[33] >>> 19);\n        b48 = (s[42] << 2) | (s[43] >>> 30);\n        b49 = (s[43] << 2) | (s[42] >>> 30);\n        b40 = (s[5] << 30) | (s[4] >>> 2);\n        b41 = (s[4] << 30) | (s[5] >>> 2);\n        b22 = (s[14] << 6) | (s[15] >>> 26);\n        b23 = (s[15] << 6) | (s[14] >>> 26);\n        b4 = (s[25] << 11) | (s[24] >>> 21);\n        b5 = (s[24] << 11) | (s[25] >>> 21);\n        b36 = (s[34] << 15) | (s[35] >>> 17);\n        b37 = (s[35] << 15) | (s[34] >>> 17);\n        b18 = (s[45] << 29) | (s[44] >>> 3);\n        b19 = (s[44] << 29) | (s[45] >>> 3);\n        b10 = (s[6] << 28) | (s[7] >>> 4);\n        b11 = (s[7] << 28) | (s[6] >>> 4);\n        b42 = (s[17] << 23) | (s[16] >>> 9);\n        b43 = (s[16] << 23) | (s[17] >>> 9);\n        b24 = (s[26] << 25) | (s[27] >>> 7);\n        b25 = (s[27] << 25) | (s[26] >>> 7);\n        b6 = (s[36] << 21) | (s[37] >>> 11);\n        b7 = (s[37] << 21) | (s[36] >>> 11);\n        b38 = (s[47] << 24) | (s[46] >>> 8);\n        b39 = (s[46] << 24) | (s[47] >>> 8);\n        b30 = (s[8] << 27) | (s[9] >>> 5);\n        b31 = (s[9] << 27) | (s[8] >>> 5);\n        b12 = (s[18] << 20) | (s[19] >>> 12);\n        b13 = (s[19] << 20) | (s[18] >>> 12);\n        b44 = (s[29] << 7) | (s[28] >>> 25);\n        b45 = (s[28] << 7) | (s[29] >>> 25);\n        b26 = (s[38] << 8) | (s[39] >>> 24);\n        b27 = (s[39] << 8) | (s[38] >>> 24);\n        b8 = (s[48] << 14) | (s[49] >>> 18);\n        b9 = (s[49] << 14) | (s[48] >>> 18);\n\n        s[0] = b0 ^ (~b2 & b4);\n        s[1] = b1 ^ (~b3 & b5);\n        s[10] = b10 ^ (~b12 & b14);\n        s[11] = b11 ^ (~b13 & b15);\n        s[20] = b20 ^ (~b22 & b24);\n        s[21] = b21 ^ (~b23 & b25);\n        s[30] = b30 ^ (~b32 & b34);\n        s[31] = b31 ^ (~b33 & b35);\n        s[40] = b40 ^ (~b42 & b44);\n        s[41] = b41 ^ (~b43 & b45);\n        s[2] = b2 ^ (~b4 & b6);\n        s[3] = b3 ^ (~b5 & b7);\n        s[12] = b12 ^ (~b14 & b16);\n        s[13] = b13 ^ (~b15 & b17);\n        s[22] = b22 ^ (~b24 & b26);\n        s[23] = b23 ^ (~b25 & b27);\n        s[32] = b32 ^ (~b34 & b36);\n        s[33] = b33 ^ (~b35 & b37);\n        s[42] = b42 ^ (~b44 & b46);\n        s[43] = b43 ^ (~b45 & b47);\n        s[4] = b4 ^ (~b6 & b8);\n        s[5] = b5 ^ (~b7 & b9);\n        s[14] = b14 ^ (~b16 & b18);\n        s[15] = b15 ^ (~b17 & b19);\n        s[24] = b24 ^ (~b26 & b28);\n        s[25] = b25 ^ (~b27 & b29);\n        s[34] = b34 ^ (~b36 & b38);\n        s[35] = b35 ^ (~b37 & b39);\n        s[44] = b44 ^ (~b46 & b48);\n        s[45] = b45 ^ (~b47 & b49);\n        s[6] = b6 ^ (~b8 & b0);\n        s[7] = b7 ^ (~b9 & b1);\n        s[16] = b16 ^ (~b18 & b10);\n        s[17] = b17 ^ (~b19 & b11);\n        s[26] = b26 ^ (~b28 & b20);\n        s[27] = b27 ^ (~b29 & b21);\n        s[36] = b36 ^ (~b38 & b30);\n        s[37] = b37 ^ (~b39 & b31);\n        s[46] = b46 ^ (~b48 & b40);\n        s[47] = b47 ^ (~b49 & b41);\n        s[8] = b8 ^ (~b0 & b2);\n        s[9] = b9 ^ (~b1 & b3);\n        s[18] = b18 ^ (~b10 & b12);\n        s[19] = b19 ^ (~b11 & b13);\n        s[28] = b28 ^ (~b20 & b22);\n        s[29] = b29 ^ (~b21 & b23);\n        s[38] = b38 ^ (~b30 & b32);\n        s[39] = b39 ^ (~b31 & b33);\n        s[48] = b48 ^ (~b40 & b42);\n        s[49] = b49 ^ (~b41 & b43);\n\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n    }\n};\n\nconst keccak = (/** @type {number} */ bits) => (/** @type {string} */ str) => {\n    var msg;\n    if (str.slice(0, 2) === \"0x\") {\n        msg = [];\n        for (var i = 2, l = str.length; i < l; i += 2)\n            msg.push(parseInt(str.slice(i, i + 2), 16));\n    } else {\n        msg = str;\n    }\n    // @ts-ignore\n    return update(Keccak(bits), msg);\n};\n\n/**\n * @type {(message: string) => string}\n */\nexport const keccak256 = keccak(256);\n"],"names":["HEX_CHARS","split","KECCAK_PADDING","SHIFT","RC","f","s","h","l","n","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","keccak256","bits","str","msg","slice","i","length","push","parseInt","state","message","code","blocks","byteCount","blockCount","outputBlocks","index","reset","block","start","charCodeAt","lastByteIndex","hex","j","update","concat","Keccak"],"mappings":"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"}