{"version":3,"file":"TokenTransferMap.js","sources":["../../src/account/TokenTransferMap.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport TokenId from \"../token/TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport TokenTransferAccountMap from \"./TokenTransferAccountMap.js\";\nimport ObjectMap from \"../ObjectMap.js\";\nimport { convertAmountToLong } from \"../util.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenTransferList} HieroProto.proto.ITokenTransferList\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountAmount} HieroProto.proto.IAccountAmount\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenID} HieroProto.proto.ITokenID\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HieroProto.proto.IAccountID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n */\n\n/**\n * @augments {ObjectMap<TokenId, TokenTransferAccountMap>}\n */\nexport default class TokenTransferMap extends ObjectMap {\n    constructor() {\n        super((s) => TokenId.fromString(s));\n    }\n\n    /**\n     * @internal\n     * @param {TokenId} tokenId\n     * @param {AccountId} accountId\n     * @param {Long | number | BigNumber | bigint} amount\n     */\n    __set(tokenId, accountId, amount) {\n        const token = tokenId.toString();\n\n        let _map = this._map.get(token);\n        if (_map == null) {\n            _map = new TokenTransferAccountMap();\n            this._map.set(token, _map);\n            this.__map.set(tokenId, _map);\n        }\n\n        _map._set(accountId, convertAmountToLong(amount));\n    }\n\n    /**\n     * @param {HieroProto.proto.ITokenTransferList[]} transfers\n     * @returns {TokenTransferMap}\n     */\n    static _fromProtobuf(transfers) {\n        const tokenTransfersMap = new TokenTransferMap();\n\n        for (const transfer of transfers) {\n            const token = TokenId._fromProtobuf(\n                /** @type {HieroProto.proto.ITokenID} */ (transfer.token),\n            );\n\n            for (const aa of transfer.transfers != null\n                ? transfer.transfers\n                : []) {\n                const account = AccountId._fromProtobuf(\n                    /** @type {HieroProto.proto.IAccountID} */ (aa.accountID),\n                );\n\n                tokenTransfersMap.__set(\n                    token,\n                    account,\n                    /** @type {Long} */ (aa.amount),\n                );\n            }\n        }\n\n        return tokenTransfersMap;\n    }\n\n    /**\n     * @returns {HieroProto.proto.ITokenTransferList[]}\n     */\n    _toProtobuf() {\n        /** @type {HieroProto.proto.ITokenTransferList[]} */\n        const tokenTransferList = [];\n\n        for (const [tokenId, value] of this) {\n            /** @type {HieroProto.proto.IAccountAmount[]} */\n            const transfers = [];\n\n            for (const [accountId, amount] of value) {\n                transfers.push({\n                    accountID: accountId._toProtobuf(),\n                    amount: amount,\n                });\n            }\n\n            tokenTransferList.push({\n                token: tokenId._toProtobuf(),\n                transfers: transfers,\n            });\n        }\n\n        return tokenTransferList;\n    }\n}\n"],"names":["TokenTransferMap","ObjectMap","constructor","super","s","TokenId","fromString","__set","tokenId","accountId","amount","token","toString","_map","this","get","TokenTransferAccountMap","set","__map","_set","convertAmountToLong","_fromProtobuf","transfers","tokenTransfersMap","transfer","aa","account","AccountId","_toProtobuf","tokenTransferList","value","push","accountID"],"mappings":"6LAuBe,MAAMA,UAAyBC,EAC1C,WAAAC,GACIC,MAAOC,GAAMC,EAAQC,WAAWF,GACxC,CAQI,KAAAG,CAAMC,EAASC,EAAWC,GACtB,MAAMC,EAAQH,EAAQI,WAEtB,IAAIC,EAAOC,KAAKD,KAAKE,IAAIJ,GACb,MAARE,IACAA,EAAO,IAAIG,EACXF,KAAKD,KAAKI,IAAIN,EAAOE,GACrBC,KAAKI,MAAMD,IAAIT,EAASK,IAG5BA,EAAKM,KAAKV,EAAWW,EAAoBV,GACjD,CAMI,oBAAOW,CAAcC,GACjB,MAAMC,EAAoB,IAAIvB,EAE9B,IAAK,MAAMwB,KAAYF,EAAW,CAC9B,MAAMX,EAAQN,EAAQgB,cACwBG,EAAc,OAG5D,IAAK,MAAMC,KAA4B,MAAtBD,EAASF,UACpBE,EAASF,UACT,GAAI,CACN,MAAMI,EAAUC,EAAUN,cACsBI,EAAY,WAG5DF,EAAkBhB,MACdI,EACAe,EACqBD,EAAS,OAElD,CACA,CAEQ,OAAOF,CACf,CAKI,WAAAK,GAEI,MAAMC,EAAoB,GAE1B,IAAK,MAAOrB,EAASsB,KAAUhB,KAAM,CAEjC,MAAMQ,EAAY,GAElB,IAAK,MAAOb,EAAWC,KAAWoB,EAC9BR,EAAUS,KAAK,CACXC,UAAWvB,EAAUmB,cACrBlB,OAAQA,IAIhBmB,EAAkBE,KAAK,CACnBpB,MAAOH,EAAQoB,cACfN,UAAWA,GAE3B,CAEQ,OAAOO,CACf"}