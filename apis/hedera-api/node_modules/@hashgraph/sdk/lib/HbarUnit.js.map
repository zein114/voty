{"version":3,"file":"HbarUnit.js","sources":["../src/HbarUnit.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport BigNumber from \"bignumber.js\";\n\n/**\n * Represents a unit of HBAR currency measurement in the Hedera network.\n * Defines the various denominations of HBAR (tinybar, microbar, millibar, hbar, kilobar, megabar, gigabar)\n * and provides utilities for converting between these units. Each unit has a name, symbol, and conversion\n * rate to tinybar (the smallest unit of HBAR).\n */\nexport default class HbarUnit {\n    /**\n     * @internal\n     * @param {string} name\n     * @param {string} symbol\n     * @param {BigNumber} tinybar\n     */\n    constructor(name, symbol, tinybar) {\n        /**\n         * @internal\n         * @readonly\n         */\n        this._name = name;\n\n        /**\n         * @internal\n         * @readonly\n         */\n        this._symbol = symbol;\n\n        /**\n         * @internal\n         * @readonly\n         */\n        this._tinybar = tinybar;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @param {string} unit\n     * @returns {HbarUnit}\n     */\n    static fromString(unit) {\n        switch (unit) {\n            case HbarUnit.Hbar._symbol:\n                return HbarUnit.Hbar;\n            case HbarUnit.Tinybar._symbol:\n                return HbarUnit.Tinybar;\n            case HbarUnit.Microbar._symbol:\n                return HbarUnit.Microbar;\n            case HbarUnit.Millibar._symbol:\n                return HbarUnit.Millibar;\n            case HbarUnit.Kilobar._symbol:\n                return HbarUnit.Kilobar;\n            case HbarUnit.Megabar._symbol:\n                return HbarUnit.Megabar;\n            case HbarUnit.Gigabar._symbol:\n                return HbarUnit.Gigabar;\n            default:\n                throw new Error(\"Unknown unit.\");\n        }\n    }\n}\n\nHbarUnit.Tinybar = new HbarUnit(\"tinybar\", \"tℏ\", new BigNumber(1));\n\nHbarUnit.Microbar = new HbarUnit(\"microbar\", \"μℏ\", new BigNumber(100));\n\nHbarUnit.Millibar = new HbarUnit(\"millibar\", \"mℏ\", new BigNumber(100000));\n\nHbarUnit.Hbar = new HbarUnit(\"hbar\", \"ℏ\", new BigNumber(\"100000000\"));\n\nHbarUnit.Kilobar = new HbarUnit(\n    \"kilobar\",\n    \"kℏ\",\n    new BigNumber(1000).multipliedBy(new BigNumber(\"100000000\")),\n);\n\nHbarUnit.Megabar = new HbarUnit(\n    \"megabar\",\n    \"Mℏ\",\n    new BigNumber(1000000).multipliedBy(new BigNumber(\"100000000\")),\n);\n\nHbarUnit.Gigabar = new HbarUnit(\n    \"gigabar\",\n    \"Gℏ\",\n    new BigNumber(\"1000000000\").multipliedBy(new BigNumber(\"100000000\")),\n);\n"],"names":["HbarUnit","constructor","name","symbol","tinybar","this","_name","_symbol","_tinybar","Object","freeze","fromString","unit","Hbar","Tinybar","Microbar","Millibar","Kilobar","Megabar","Gigabar","Error","BigNumber","multipliedBy"],"mappings":"4BAUe,MAAMA,EAOjB,WAAAC,CAAYC,EAAMC,EAAQC,GAKtBC,KAAKC,MAAQJ,EAMbG,KAAKE,QAAUJ,EAMfE,KAAKG,SAAWJ,EAEhBK,OAAOC,OAAOL,KACtB,CAMI,iBAAOM,CAAWC,GACd,OAAQA,GACJ,KAAKZ,EAASa,KAAKN,QACf,OAAOP,EAASa,KACpB,KAAKb,EAASc,QAAQP,QAClB,OAAOP,EAASc,QACpB,KAAKd,EAASe,SAASR,QACnB,OAAOP,EAASe,SACpB,KAAKf,EAASgB,SAAST,QACnB,OAAOP,EAASgB,SACpB,KAAKhB,EAASiB,QAAQV,QAClB,OAAOP,EAASiB,QACpB,KAAKjB,EAASkB,QAAQX,QAClB,OAAOP,EAASkB,QACpB,KAAKlB,EAASmB,QAAQZ,QAClB,OAAOP,EAASmB,QACpB,QACI,MAAM,IAAIC,MAAM,iBAEhC,EAGApB,EAASc,QAAU,IAAId,EAAS,UAAW,KAAM,IAAIqB,EAAU,IAE/DrB,EAASe,SAAW,IAAIf,EAAS,WAAY,KAAM,IAAIqB,EAAU,MAEjErB,EAASgB,SAAW,IAAIhB,EAAS,WAAY,KAAM,IAAIqB,EAAU,MAEjErB,EAASa,KAAO,IAAIb,EAAS,OAAQ,IAAK,IAAIqB,EAAU,cAExDrB,EAASiB,QAAU,IAAIjB,EACnB,UACA,KACA,IAAIqB,EAAU,KAAMC,aAAa,IAAID,EAAU,eAGnDrB,EAASkB,QAAU,IAAIlB,EACnB,UACA,KACA,IAAIqB,EAAU,KAASC,aAAa,IAAID,EAAU,eAGtDrB,EAASmB,QAAU,IAAInB,EACnB,UACA,KACA,IAAIqB,EAAU,cAAcC,aAAa,IAAID,EAAU"}