import e from"../MirrorNode.js";import r from"./ManagedNetwork.js";class t extends r{constructor(e){super(e)}setNetwork(e){this._setNetwork(new Map(e.map(e=>[e,e])))}get network(){var e=[];for(const r of this._nodes)e.push(r.address.toString());return e}_createNodeFromNetworkEntry(r){return new e({newNode:{address:r[1],channelInitFunction:this._createNetworkChannel}}).setMinBackoff(this._minBackoff)}_getNodesToRemove(e){const r=[],t=Object.values(e);for(let e=this._nodes.length-1;e>=0;e--){const o=this._nodes[e];t.includes(o.address.toString())||r.push(e)}return r}getNextMirrorNode(){return this._getNumberOfMostHealthyNodes(1)[0]}get mirrorRestApiBaseUrl(){try{return this.getNextMirrorNode().mirrorRestApiBaseUrl}catch(e){throw new Error("Client has no mirror network configured or no healthy mirror nodes are available")}}}export{t as default};
//# sourceMappingURL=MirrorNetwork.js.map
