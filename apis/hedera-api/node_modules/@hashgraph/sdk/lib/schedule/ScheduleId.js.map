{"version":3,"file":"ScheduleId.js","sources":["../../src/schedule/ScheduleId.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport * as entity_id from \"../EntityIdHelper.js\";\nimport * as HieroProto from \"@hashgraph/proto\";\n\n/**\n * @typedef {import(\"long\")} Long\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * Class representing a unique identifier for a scheduled transaction on the Hedera network.\n *\n * A ScheduleId consists of three components:\n * Shard ID: The shard number where the schedule exists\n * Realm ID: The realm number within the shard\n * Schedule Number: The unique number identifying the schedule\n * @augments {EntityId<HieroProto.proto.IScheduleID>}\n */\n\nexport default class ScheduleId {\n    /**\n     * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n     * @param {(number | Long)=} realm\n     * @param {(number | Long)=} num\n     */\n    constructor(props, realm, num) {\n        const result = entity_id.constructor(props, realm, num);\n\n        this.shard = result.shard;\n        this.realm = result.realm;\n        this.num = result.num;\n\n        /**\n         * @type {string | null}\n         */\n        this._checksum = null;\n    }\n\n    /**\n     * @param {string} text\n     * @returns {ScheduleId}\n     */\n    static fromString(text) {\n        const result = entity_id.fromString(text);\n        const id = new ScheduleId(result);\n        id._checksum = result.checksum;\n        return id;\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.IScheduleID} id\n     * @returns {ScheduleId}\n     */\n    static _fromProtobuf(id) {\n        const scheduleId = new ScheduleId(\n            id.shardNum != null ? id.shardNum : 0,\n            id.realmNum != null ? id.realmNum : 0,\n            id.scheduleNum != null ? id.scheduleNum : 0,\n        );\n\n        return scheduleId;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get checksum() {\n        return this._checksum;\n    }\n\n    /**\n     * @deprecated - Use `validateChecksum` instead\n     * @param {Client} client\n     */\n    validate(client) {\n        console.warn(\"Deprecated: Use `validateChecksum` instead\");\n        this.validateChecksum(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    validateChecksum(client) {\n        entity_id.validateChecksum(\n            this.shard,\n            this.realm,\n            this.num,\n            this._checksum,\n            client,\n        );\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {ScheduleId}\n     */\n    static fromBytes(bytes) {\n        return ScheduleId._fromProtobuf(\n            HieroProto.proto.ScheduleID.decode(bytes),\n        );\n    }\n\n    /**\n     * @param {string} address\n     * @returns {ScheduleId}\n     */\n    static fromSolidityAddress(address) {\n        return new ScheduleId(...entity_id.fromSolidityAddress(address));\n    }\n\n    /**\n     * @returns {string}\n     */\n    toSolidityAddress() {\n        return entity_id.toSolidityAddress([this.shard, this.realm, this.num]);\n    }\n\n    /**\n     * @internal\n     * @returns {HieroProto.proto.ScheduleID}\n     */\n    _toProtobuf() {\n        return {\n            scheduleNum: this.num,\n            shardNum: this.shard,\n            realmNum: this.realm,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`;\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {string}\n     */\n    toStringWithChecksum(client) {\n        return entity_id.toStringWithChecksum(this.toString(), client);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return HieroProto.proto.ScheduleID.encode(this._toProtobuf()).finish();\n    }\n\n    /**\n     * @returns {ScheduleId}\n     */\n    clone() {\n        const id = new ScheduleId(this);\n        id._checksum = this._checksum;\n        return id;\n    }\n\n    /**\n     * @param {ScheduleId} other\n     * @returns {number}\n     */\n    compare(other) {\n        return entity_id.compare(\n            [this.shard, this.realm, this.num],\n            [other.shard, other.realm, other.num],\n        );\n    }\n}\n"],"names":["ScheduleId","constructor","props","realm","num","result","entity_id.constructor","this","shard","_checksum","fromString","text","entity_id.fromString","id","checksum","_fromProtobuf","shardNum","realmNum","scheduleNum","validate","client","console","warn","validateChecksum","entity_id.validateChecksum","fromBytes","bytes","HieroProto","proto","ScheduleID","decode","fromSolidityAddress","address","entity_id.fromSolidityAddress","toSolidityAddress","entity_id.toSolidityAddress","_toProtobuf","toString","toStringWithChecksum","entity_id.toStringWithChecksum","toBytes","encode","finish","clone","compare","other","entity_id.compare"],"mappings":"mNAoBe,MAAMA,EAMjB,WAAAC,CAAYC,EAAOC,EAAOC,GACtB,MAAMC,EAASC,EAAsBJ,EAAOC,EAAOC,GAEnDG,KAAKC,MAAQH,EAAOG,MACpBD,KAAKJ,MAAQE,EAAOF,MACpBI,KAAKH,IAAMC,EAAOD,IAKlBG,KAAKE,UAAY,IACzB,CAMI,iBAAOC,CAAWC,GACd,MAAMN,EAASO,EAAqBD,GAC9BE,EAAK,IAAIb,EAAWK,GAE1B,OADAQ,EAAGJ,UAAYJ,EAAOS,SACfD,CACf,CAOI,oBAAOE,CAAcF,GAOjB,OANmB,IAAIb,EACJ,MAAfa,EAAGG,SAAmBH,EAAGG,SAAW,EACrB,MAAfH,EAAGI,SAAmBJ,EAAGI,SAAW,EAClB,MAAlBJ,EAAGK,YAAsBL,EAAGK,YAAc,EAItD,CAKI,YAAIJ,GACA,OAAOP,KAAKE,SACpB,CAMI,QAAAU,CAASC,GACLC,QAAQC,KAAK,8CACbf,KAAKgB,iBAAiBH,EAC9B,CAKI,gBAAAG,CAAiBH,GACbI,EACIjB,KAAKC,MACLD,KAAKJ,MACLI,KAAKH,IACLG,KAAKE,UACLW,EAEZ,CAMI,gBAAOK,CAAUC,GACb,OAAO1B,EAAWe,cACdY,EAAWC,MAAMC,WAAWC,OAAOJ,GAE/C,CAMI,0BAAOK,CAAoBC,GACvB,OAAO,IAAIhC,KAAciC,EAA8BD,GAC/D,CAKI,iBAAAE,GACI,OAAOC,EAA4B,CAAC5B,KAAKC,MAAOD,KAAKJ,MAAOI,KAAKH,KACzE,CAMI,WAAAgC,GACI,MAAO,CACHlB,YAAaX,KAAKH,IAClBY,SAAUT,KAAKC,MACfS,SAAUV,KAAKJ,MAE3B,CAKI,QAAAkC,GACI,MAAO,GAAG9B,KAAKC,MAAM6B,cAAc9B,KAAKJ,MAAMkC,cAAc9B,KAAKH,IAAIiC,YAC7E,CAMI,oBAAAC,CAAqBlB,GACjB,OAAOmB,EAA+BhC,KAAK8B,WAAYjB,EAC/D,CAKI,OAAAoB,GACI,OAAOb,EAAWC,MAAMC,WAAWY,OAAOlC,KAAK6B,eAAeM,QACtE,CAKI,KAAAC,GACI,MAAM9B,EAAK,IAAIb,EAAWO,MAE1B,OADAM,EAAGJ,UAAYF,KAAKE,UACbI,CACf,CAMI,OAAA+B,CAAQC,GACJ,OAAOC,EACH,CAACvC,KAAKC,MAAOD,KAAKJ,MAAOI,KAAKH,KAC9B,CAACyC,EAAMrC,MAAOqC,EAAM1C,MAAO0C,EAAMzC,KAE7C"}