import e from"./ScheduleId.js";import t from"../Hbar.js";import s,{TRANSACTION_REGISTRY as r}from"../transaction/Transaction.js";class u extends s{constructor(e={}){super(),this._scheduleId=null,null!=e.scheduleId&&this.setScheduleId(e.scheduleId),this._defaultMaxTransactionFee=new t(5)}static _fromProtobuf(t,r,d,n,l){const c=l[0].scheduleSign;return s._fromProtobufTransactions(new u({scheduleId:null!=c.scheduleID?e._fromProtobuf(c.scheduleID):void 0}),t,r,d,n,l)}get scheduleId(){return this._scheduleId}setScheduleId(t){return this._requireNotFrozen(),this._scheduleId="string"==typeof t?e.fromString(t):t.clone(),this}_validateChecksums(e){null!=this._scheduleId&&this._scheduleId.validateChecksum(e)}_execute(e,t){return e.schedule.signSchedule(t)}_getTransactionDataCase(){return"scheduleSign"}_makeTransactionData(){return{scheduleID:null!=this._scheduleId?this._scheduleId._toProtobuf():null}}_getLogId(){return`ScheduleSignTransaction:${this._transactionIds.current.validStart.toString()}`}}r.set("scheduleSign",u._fromProtobuf);export{u as default};
//# sourceMappingURL=ScheduleSignTransaction.js.map
