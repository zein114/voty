{"version":3,"file":"ScheduleInfoQuery.js","sources":["../../src/schedule/ScheduleInfoQuery.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport ScheduleId from \"./ScheduleId.js\";\nimport ScheduleInfo from \"./ScheduleInfo.js\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport Hbar from \"../Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IQuery} HieroProto.proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IQueryHeader} HieroProto.proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IResponse} HieroProto.proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IResponseHeader} HieroProto.proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IScheduleInfo} HieroProto.proto.IScheduleInfo\n * @typedef {import(\"@hashgraph/proto\").proto.IScheduleGetInfoQuery} HieroProto.proto.IScheduleGetInfoQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IScheduleGetInfoResponse} HieroProto.proto.IScheduleGetInfoResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * Retrieve the metadata for a schedule.\n * @augments {Query<ScheduleInfo>}\n */\nexport default class ScheduleInfoQuery extends Query {\n    /**\n     * @param {object} properties\n     * @param {ScheduleId | string} [properties.scheduleId]\n     */\n    constructor(properties = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ScheduleId}\n         */\n        this._scheduleId = null;\n\n        if (properties.scheduleId != null) {\n            this.setScheduleId(properties.scheduleId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.IQuery} query\n     * @returns {ScheduleInfoQuery}\n     */\n    static _fromProtobuf(query) {\n        const info = /** @type {HieroProto.proto.IScheduleGetInfoQuery} */ (\n            query.scheduleGetInfo\n        );\n\n        return new ScheduleInfoQuery({\n            scheduleId:\n                info.scheduleID != null\n                    ? ScheduleId._fromProtobuf(info.scheduleID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?ScheduleId}\n     */\n    get scheduleId() {\n        return this._scheduleId;\n    }\n\n    /**\n     *\n     * @param {ScheduleId | string} scheduleId\n     * @returns {ScheduleInfoQuery}\n     */\n    setScheduleId(scheduleId) {\n        this._scheduleId =\n            typeof scheduleId === \"string\"\n                ? ScheduleId.fromString(scheduleId)\n                : scheduleId.clone();\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<Hbar>}\n     */\n    async getCost(client) {\n        return super.getCost(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._scheduleId != null) {\n            this._scheduleId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HieroProto.proto.IQuery} request\n     * @returns {Promise<HieroProto.proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.schedule.getScheduleInfo(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {HieroProto.proto.IResponse} response\n     * @returns {HieroProto.proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const scheduleGetInfo =\n            /** @type {HieroProto.proto.IScheduleGetInfoResponse} */ (\n                response.scheduleGetInfo\n            );\n        return /** @type {HieroProto.proto.IResponseHeader} */ (\n            scheduleGetInfo.header\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {HieroProto.proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {HieroProto.proto.IQuery} request\n     * @returns {Promise<ScheduleInfo>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const info = /** @type {HieroProto.proto.IScheduleGetInfoResponse} */ (\n            response.scheduleGetInfo\n        );\n\n        return Promise.resolve(\n            ScheduleInfo._fromProtobuf(\n                /** @type {HieroProto.proto.IScheduleInfo} */ (\n                    info.scheduleInfo\n                ),\n            ),\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {HieroProto.proto.IQueryHeader} header\n     * @returns {HieroProto.proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            scheduleGetInfo: {\n                header,\n                scheduleID:\n                    this._scheduleId != null\n                        ? this._scheduleId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp =\n            this._paymentTransactionId != null &&\n            this._paymentTransactionId.validStart != null\n                ? this._paymentTransactionId.validStart\n                : this._timestamp;\n\n        return `ScheduleInfoQuery:${timestamp.toString()}`;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"scheduleGetInfo\", ScheduleInfoQuery._fromProtobuf);\n"],"names":["ScheduleInfoQuery","Query","constructor","properties","super","this","_scheduleId","scheduleId","setScheduleId","_fromProtobuf","query","info","scheduleID","ScheduleId","undefined","fromString","clone","getCost","client","_validateChecksums","validateChecksum","_execute","channel","request","schedule","getScheduleInfo","_mapResponseHeader","response","_mapResponse","nodeAccountId","Promise","resolve","ScheduleInfo","_onMakeRequest","header","scheduleGetInfo","_toProtobuf","_getLogId","_paymentTransactionId","validStart","_timestamp","toString","QUERY_REGISTRY","set"],"mappings":"+KA6Be,MAAMA,UAA0BC,EAK3C,WAAAC,CAAYC,EAAa,IACrBC,QAMAC,KAAKC,YAAc,KAEU,MAAzBH,EAAWI,YACXF,KAAKG,cAAcL,EAAWI,WAE1C,CAOI,oBAAOE,CAAcC,GACjB,MAAMC,EACFD,EACH,gBAED,OAAO,IAAIV,EAAkB,CACzBO,WACuB,MAAnBI,EAAKC,WACCC,EAAWJ,cAAcE,EAAKC,iBAC9BE,GAEtB,CAKI,cAAIP,GACA,OAAOF,KAAKC,WACpB,CAOI,aAAAE,CAAcD,GAMV,OALAF,KAAKC,YACqB,iBAAfC,EACDM,EAAWE,WAAWR,GACtBA,EAAWS,QAEdX,IACf,CAOI,aAAMY,CAAQC,GACV,OAAOd,MAAMa,QAAQC,EAC7B,CAKI,kBAAAC,CAAmBD,GACS,MAApBb,KAAKC,aACLD,KAAKC,YAAYc,iBAAiBF,EAE9C,CASI,QAAAG,CAASC,EAASC,GACd,OAAOD,EAAQE,SAASC,gBAAgBF,EAChD,CAQI,kBAAAG,CAAmBC,GAKf,OAFQA,EACH,gBAGb,MACA,CAWI,YAAAC,CAAaD,EAAUE,EAAeN,GAClC,MAAMZ,EACFgB,EACH,gBAED,OAAOG,QAAQC,QACXC,EAAavB,cAELE,EACpB,cAGA,CAQI,cAAAsB,CAAeC,GACX,MAAO,CACHC,gBAAiB,CACbD,SACAtB,WACwB,MAApBP,KAAKC,YACCD,KAAKC,YAAY8B,cACjB,MAG1B,CAKI,SAAAC,GAOI,MAAO,sBAL2B,MAA9BhC,KAAKiC,uBACoC,MAAzCjC,KAAKiC,sBAAsBC,WACrBlC,KAAKiC,sBAAsBC,WAC3BlC,KAAKmC,YAEuBC,YAC9C,EAIAC,EAAeC,IAAI,kBAAmB3C,EAAkBS"}