{"version":3,"file":"ReceiptStatusError.js","sources":["../src/ReceiptStatusError.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport StatusError from \"./StatusError.js\";\n\n/**\n * @typedef {import(\"./Status.js\").default} Status\n * @typedef {import(\"./transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"./transaction/TransactionReceipt.js\").default} TransactionReceipt\n */\n\n/**\n * Represents an error that occurs when a transaction receipt indicates a failure\n * on the Hedera network. The `ReceiptStatusError` class extends the base\n * `StatusError` class and provides additional context specific to receipt-related\n * failures, such as the transaction ID, status, and any associated messages.\n *\n * This error is typically thrown when a transaction has been processed, but the\n * receipt indicates that it did not complete successfully. It allows developers to\n * handle such errors effectively in their applications by providing detailed\n * information about the failure.\n */\nexport default class ReceiptStatusError extends StatusError {\n    /**\n     * @param {object} props\n     * @param {TransactionReceipt} props.transactionReceipt\n     * @param {Status} props.status\n     * @param {TransactionId} props.transactionId\n     */\n    constructor(props) {\n        super(\n            props,\n            `receipt for transaction ${props.transactionId.toString()} contained error status ${props.status.toString()}`,\n        );\n\n        /**\n         * @type {TransactionReceipt}\n         * @readonly\n         */\n        this.transactionReceipt = props.transactionReceipt;\n    }\n}\n"],"names":["ReceiptStatusError","StatusError","constructor","props","super","transactionId","toString","status","this","transactionReceipt"],"mappings":"gCAqBe,MAAMA,UAA2BC,EAO5C,WAAAC,CAAYC,GACRC,MACID,EACA,2BAA2BA,EAAME,cAAcC,qCAAqCH,EAAMI,OAAOD,cAOrGE,KAAKC,mBAAqBN,EAAMM,kBACxC"}