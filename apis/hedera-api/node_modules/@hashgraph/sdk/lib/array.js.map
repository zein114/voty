{"version":3,"file":"array.js","sources":["../src/array.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\n/**\n * A simple efficient function for comparing byte arrays\n *\n * @param {Uint8Array} array1\n * @param {Uint8Array} array2\n * @returns {boolean}\n */\nexport function arrayEqual(array1, array2) {\n    if (array1 === array2) {\n        return true;\n    }\n\n    if (array1.byteLength !== array2.byteLength) {\n        return false;\n    }\n\n    const view1 = new DataView(\n        array1.buffer,\n        array1.byteOffset,\n        array1.byteLength,\n    );\n    const view2 = new DataView(\n        array2.buffer,\n        array2.byteOffset,\n        array2.byteLength,\n    );\n\n    let i = array1.byteLength;\n\n    while (i--) {\n        if (view1.getUint8(i) !== view2.getUint8(i)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * @param {Uint8Array} array\n * @param {Uint8Array} arrayPrefix\n * @returns {boolean}\n */\nexport function arrayStartsWith(array, arrayPrefix) {\n    if (array.byteLength < arrayPrefix.byteLength) {\n        return false;\n    }\n\n    let i = arrayPrefix.byteLength;\n\n    while (i--) {\n        if (array[i] !== arrayPrefix[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n"],"names":["arrayEqual","array1","array2","byteLength","view1","DataView","buffer","byteOffset","view2","i","getUint8"],"mappings":"AASO,SAASA,EAAWC,EAAQC,GAC/B,GAAID,IAAWC,EACX,OAAO,EAGX,GAAID,EAAOE,aAAeD,EAAOC,WAC7B,OAAO,EAGX,MAAMC,EAAQ,IAAIC,SACdJ,EAAOK,OACPL,EAAOM,WACPN,EAAOE,YAELK,EAAQ,IAAIH,SACdH,EAAOI,OACPJ,EAAOK,WACPL,EAAOC,YAGX,IAAIM,EAAIR,EAAOE,WAEf,KAAOM,KACH,GAAIL,EAAMM,SAASD,KAAOD,EAAME,SAASD,GACrC,OAAO,EAIf,OAAO,CACX"}