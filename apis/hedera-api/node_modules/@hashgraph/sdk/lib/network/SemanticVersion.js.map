{"version":3,"file":"SemanticVersion.js","sources":["../../src/network/SemanticVersion.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport * as HieroProto from \"@hashgraph/proto\";\n/**\n * Represents a semantic versioning structure for software components.\n *\n * This class encapsulates the major, minor, and patch version numbers, following\n * the Semantic Versioning (SemVer) specification. It provides methods for creating,\n * comparing, and manipulating version numbers, ensuring that versioning adheres to\n * the SemVer rules.\n */\nexport default class SemanticVersion {\n    /**\n     * @private\n     * @param {object} props\n     * @param {number} props.major\n     * @param {number} props.minor\n     * @param {number} props.patch\n     */\n    constructor(props) {\n        /** @readonly */\n        this.major = props.major;\n        /** @readonly */\n        this.minor = props.minor;\n        /** @readonly */\n        this.patch = props.patch;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ISemanticVersion} version\n     * @returns {SemanticVersion}\n     */\n    static _fromProtobuf(version) {\n        return new SemanticVersion({\n            major: /** @type {number} */ (version.major),\n            minor: /** @type {number} */ (version.minor),\n            patch: /** @type {number} */ (version.patch),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {HieroProto.proto.ISemanticVersion}\n     */\n    _toProtobuf() {\n        return {\n            major: this.major,\n            minor: this.minor,\n            patch: this.patch,\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {SemanticVersion}\n     */\n    static fromBytes(bytes) {\n        return SemanticVersion._fromProtobuf(\n            HieroProto.proto.SemanticVersion.decode(bytes),\n        );\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return HieroProto.proto.SemanticVersion.encode(\n            this._toProtobuf(),\n        ).finish();\n    }\n}\n"],"names":["SemanticVersion","constructor","props","this","major","minor","patch","Object","freeze","_fromProtobuf","version","_toProtobuf","fromBytes","bytes","HieroProto","proto","decode","toBytes","encode","finish"],"mappings":"mCAWe,MAAMA,EAQjB,WAAAC,CAAYC,GAERC,KAAKC,MAAQF,EAAME,MAEnBD,KAAKE,MAAQH,EAAMG,MAEnBF,KAAKG,MAAQJ,EAAMI,MAEnBC,OAAOC,OAAOL,KACtB,CAOI,oBAAOM,CAAcC,GACjB,OAAO,IAAIV,EAAgB,CACvBI,MAA8BM,EAAa,MAC3CL,MAA8BK,EAAa,MAC3CJ,MAA8BI,EAAa,OAEvD,CAMI,WAAAC,GACI,MAAO,CACHP,MAAOD,KAAKC,MACZC,MAAOF,KAAKE,MACZC,MAAOH,KAAKG,MAExB,CAMI,gBAAOM,CAAUC,GACb,OAAOb,EAAgBS,cACnBK,EAAWC,MAAMf,gBAAgBgB,OAAOH,GAEpD,CAKI,OAAAI,GACI,OAAOH,EAAWC,MAAMf,gBAAgBkB,OACpCf,KAAKQ,eACPQ,QACV"}