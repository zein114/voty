{"version":3,"file":"IPv4Address.js","sources":["../../src/address_book/IPv4Address.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport IPv4AddressPart from \"./IPv4AddressPart.js\";\n\nexport default class IPv4Address {\n    /**\n     * @param {object} props\n     * @param {IPv4AddressPart} [props.network]\n     * @param {IPv4AddressPart} [props.host]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {IPv4AddressPart | null}\n         */\n        this._network = null;\n\n        if (props.network != null) {\n            this.setNetwork(props.network);\n        }\n\n        /**\n         * @type {IPv4AddressPart | null}\n         */\n        this._host = null;\n\n        if (props.host != null) {\n            this.setHost(props.host);\n        }\n    }\n\n    /**\n     * @returns {?IPv4AddressPart}\n     */\n    get newtork() {\n        return this._network;\n    }\n\n    /**\n     * @param {IPv4AddressPart} part\n     * @returns {this}\n     */\n    setNetwork(part) {\n        this._network = part;\n        return this;\n    }\n\n    /**\n     * @returns {?IPv4AddressPart}\n     */\n    get host() {\n        return this._host;\n    }\n\n    /**\n     * @param {IPv4AddressPart} part\n     * @returns {this}\n     */\n    setHost(part) {\n        this._host = part;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @param {Uint8Array} bytes\n     * @returns {IPv4Address}\n     */\n    static _fromProtobuf(bytes) {\n        return new IPv4Address({\n            network: new IPv4AddressPart().setLeft(bytes[0]).setRight(bytes[1]),\n            host: new IPv4AddressPart().setLeft(bytes[2]).setRight(bytes[3]),\n        });\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    _toProtobuf() {\n        return Uint8Array.of(\n            this._network != null && this._network._left != null\n                ? this._network._left\n                : 0,\n            this._network != null && this._network.right != null\n                ? this._network.right\n                : 0,\n            this._host != null && this._host.left != null ? this._host.left : 0,\n            this._host != null && this._host.right != null\n                ? this._host.right\n                : 0,\n        );\n    }\n\n    /**\n     * @internal\n     * @param {string} address - IPv4 address string in format \"x.x.x.x\"\n     * @returns {IPv4Address}\n     * @throws {Error} If the address string is invalid\n     */\n    static _fromString(address) {\n        const parts = address.split(\".\");\n        if (parts.length !== 4) {\n            throw new Error(\"Invalid IPv4 address format\");\n        }\n\n        const network = new IPv4AddressPart()\n            .setLeft(Number(parts[0]))\n            .setRight(Number(parts[1]));\n        const host = new IPv4AddressPart()\n            .setLeft(Number(parts[2]))\n            .setRight(Number(parts[3]));\n\n        return new IPv4Address({ network, host });\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        if (this._network != null && this._host != null) {\n            return `${this._network.toString()}.${this._host.toString()}`;\n        } else {\n            return \"\";\n        }\n    }\n}\n"],"names":["IPv4Address","constructor","props","this","_network","network","setNetwork","_host","host","setHost","newtork","part","_fromProtobuf","bytes","IPv4AddressPart","setLeft","setRight","_toProtobuf","Uint8Array","of","_left","right","left","_fromString","address","parts","split","length","Error","Number","toString"],"mappings":"oCAIe,MAAMA,EAMjB,WAAAC,CAAYC,EAAQ,IAIhBC,KAAKC,SAAW,KAEK,MAAjBF,EAAMG,SACNF,KAAKG,WAAWJ,EAAMG,SAM1BF,KAAKI,MAAQ,KAEK,MAAdL,EAAMM,MACNL,KAAKM,QAAQP,EAAMM,KAE/B,CAKI,WAAIE,GACA,OAAOP,KAAKC,QACpB,CAMI,UAAAE,CAAWK,GAEP,OADAR,KAAKC,SAAWO,EACTR,IACf,CAKI,QAAIK,GACA,OAAOL,KAAKI,KACpB,CAMI,OAAAE,CAAQE,GAEJ,OADAR,KAAKI,MAAQI,EACNR,IACf,CAOI,oBAAOS,CAAcC,GACjB,OAAO,IAAIb,EAAY,CACnBK,SAAS,IAAIS,GAAkBC,QAAQF,EAAM,IAAIG,SAASH,EAAM,IAChEL,MAAM,IAAIM,GAAkBC,QAAQF,EAAM,IAAIG,SAASH,EAAM,KAEzE,CAKI,WAAAI,GACI,OAAOC,WAAWC,GACG,MAAjBhB,KAAKC,UAA2C,MAAvBD,KAAKC,SAASgB,MACjCjB,KAAKC,SAASgB,MACd,EACW,MAAjBjB,KAAKC,UAA2C,MAAvBD,KAAKC,SAASiB,MACjClB,KAAKC,SAASiB,MACd,EACQ,MAAdlB,KAAKI,OAAoC,MAAnBJ,KAAKI,MAAMe,KAAenB,KAAKI,MAAMe,KAAO,EACpD,MAAdnB,KAAKI,OAAqC,MAApBJ,KAAKI,MAAMc,MAC3BlB,KAAKI,MAAMc,MACX,EAElB,CAQI,kBAAOE,CAAYC,GACf,MAAMC,EAAQD,EAAQE,MAAM,KAC5B,GAAqB,IAAjBD,EAAME,OACN,MAAM,IAAIC,MAAM,+BAGpB,MAAMvB,GAAU,IAAIS,GACfC,QAAQc,OAAOJ,EAAM,KACrBT,SAASa,OAAOJ,EAAM,KACrBjB,GAAO,IAAIM,GACZC,QAAQc,OAAOJ,EAAM,KACrBT,SAASa,OAAOJ,EAAM,KAE3B,OAAO,IAAIzB,EAAY,CAAEK,UAASG,QAC1C,CAKI,QAAAsB,GACI,OAAqB,MAAjB3B,KAAKC,UAAkC,MAAdD,KAAKI,MACvB,GAAGJ,KAAKC,SAAS0B,cAAc3B,KAAKI,MAAMuB,aAE1C,EAEnB"}