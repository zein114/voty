{"version":3,"file":"ExchangeRates.js","sources":["../src/ExchangeRates.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport ExchangeRate from \"./ExchangeRate.js\";\nimport * as HieroProto from \"@hashgraph/proto\";\n\nconst { proto } = HieroProto;\n\n/**\n *  Represents a pair of exchange rates for HBAR to USD cents conversion.\n * Contains both the current exchange rate and the next exchange rate that will take effect.\n */\nexport default class ExchangeRates {\n    /**\n     * @private\n     * @param {object} props\n     * @param {ExchangeRate} props.currentRate\n     * @param {ExchangeRate} props.nextRate\n     */\n    constructor(props) {\n        /**\n         * @readonly\n         */\n        this.currentRate = props.currentRate;\n\n        /**\n         * @readonly\n         */\n        this.nextRate = props.nextRate;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.IExchangeRateSet} rateSet\n     * @returns {ExchangeRates}\n     */\n    static _fromProtobuf(rateSet) {\n        return new ExchangeRates({\n            currentRate: ExchangeRate._fromProtobuf(\n                /** @type {HieroProto.proto.IExchangeRate} */ (\n                    rateSet.currentRate\n                ),\n            ),\n            nextRate: ExchangeRate._fromProtobuf(\n                /** @type {HieroProto.proto.IExchangeRate} */ (\n                    rateSet.nextRate\n                ),\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {HieroProto.proto.IExchangeRateSet}\n     */\n    _toProtobuf() {\n        return {\n            currentRate: this.currentRate._toProtobuf(),\n            nextRate: this.nextRate._toProtobuf(),\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {ExchangeRates}\n     */\n    static fromBytes(bytes) {\n        return ExchangeRates._fromProtobuf(proto.ExchangeRateSet.decode(bytes));\n    }\n}\n"],"names":["proto","HieroProto","ExchangeRates","constructor","props","this","currentRate","nextRate","Object","freeze","_fromProtobuf","rateSet","ExchangeRate","_toProtobuf","fromBytes","bytes","ExchangeRateSet","decode"],"mappings":"oEAKA,MAAMA,MAAEA,GAAUC,EAMH,MAAMC,EAOjB,WAAAC,CAAYC,GAIRC,KAAKC,YAAcF,EAAME,YAKzBD,KAAKE,SAAWH,EAAMG,SAEtBC,OAAOC,OAAOJ,KACtB,CAOI,oBAAOK,CAAcC,GACjB,OAAO,IAAIT,EAAc,CACrBI,YAAaM,EAAaF,cAElBC,EACpB,aAEYJ,SAAUK,EAAaF,cAEfC,EACpB,WAGA,CAMI,WAAAE,GACI,MAAO,CACHP,YAAaD,KAAKC,YAAYO,cAC9BN,SAAUF,KAAKE,SAASM,cAEpC,CAMI,gBAAOC,CAAUC,GACb,OAAOb,EAAcQ,cAAcV,EAAMgB,gBAAgBC,OAAOF,GACxE"}