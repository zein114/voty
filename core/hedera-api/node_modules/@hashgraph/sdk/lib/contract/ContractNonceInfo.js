import t from"./ContractId.js";import o from"long";import*as n from"@hashgraph/proto";const{proto:r}=n;class c{constructor(t){this.contractId=t.contractId,this.nonce=t.nonce,Object.freeze(this)}static _fromProtobuf(n){return new c({contractId:t._fromProtobuf(n.contractId),nonce:null!=n.nonce?n.nonce:o.ZERO})}_toProtobuf(){return{contractId:this.contractId._toProtobuf(),nonce:this.nonce}}static fromBytes(t){return c._fromProtobuf(r.ContractNonceInfo.decode(t))}toBytes(){return r.ContractNonceInfo.encode(this._toProtobuf()).finish()}toJSON(){return{contractId:this.contractId.toString(),nonce:this.nonce.toNumber()}}toString(){return JSON.stringify(this.toJSON())}equals(t){return this.contractId.equals(t.contractId)&&this.nonce.eq(t.nonce)}}export{c as default};
//# sourceMappingURL=ContractNonceInfo.js.map
