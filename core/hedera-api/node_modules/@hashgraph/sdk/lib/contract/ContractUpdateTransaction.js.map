{"version":3,"file":"ContractUpdateTransaction.js","sources":["../../src/contract/ContractUpdateTransaction.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport AccountId from \"../account/AccountId.js\";\nimport ContractId from \"./ContractId.js\";\nimport FileId from \"../file/FileId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Duration from \"../Duration.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Key from \"../Key.js\";\nimport Long from \"long\";\nimport * as Proto from \"@hashgraph/proto\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HieroProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HieroProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HieroProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HieroProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HieroProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IContractUpdateTransactionBody} HieroProto.proto.IContractUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HieroProto.proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").proto.IContractID} HieroProto.proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").proto.IFileID} HieroProto.proto.IFileID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Modify a smart contract.<br/>\n * Any change other than updating the expiration time requires that the\n * contract be modifiable (has a valid `adminKey`) and that the\n * transaction be signed by the `adminKey`\n * <p>\n * Fields _not set_ on the request SHALL NOT be modified.\n */\nexport default class ContractUpdateTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {ContractId | string} [props.contractId]\n     * @param {FileId | string} [props.bytecodeFileId]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {Key} [props.adminKey]\n     * @param {AccountId | string} [props.proxyAccountId]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {string} [props.contractMemo]\n     * @param {number} [props.maxAutomaticTokenAssociations]\n     * @param {AccountId | string} [props.stakedAccountId]\n     * @param {Long | number} [props.stakedNodeId]\n     * @param {boolean} [props.declineStakingReward]\n     * @param {AccountId} [props.autoRenewAccountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._proxyAccountId = null;\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._autoRenewPeriod = null;\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._bytecodeFileId = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._contractMemo = null;\n\n        /**\n         * @private\n         * @type {?number}\n         */\n        this._maxAutomaticTokenAssociations = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._stakedAccountId = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._stakedNodeId = null;\n\n        /**\n         * @private\n         * @type {?boolean}\n         */\n        this._declineStakingReward = null;\n\n        /**\n         * @type {?AccountId}\n         */\n        this._autoRenewAccountId = null;\n\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.proxyAccountId != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setProxyAccountId(props.proxyAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.bytecodeFileId != null) {\n            this.setBytecodeFileId(props.bytecodeFileId);\n        }\n\n        if (props.contractMemo != null) {\n            this.setContractMemo(props.contractMemo);\n        }\n\n        if (props.maxAutomaticTokenAssociations != null) {\n            this.setMaxAutomaticTokenAssociations(\n                props.maxAutomaticTokenAssociations,\n            );\n        }\n\n        if (props.stakedAccountId != null) {\n            this.setStakedAccountId(props.stakedAccountId);\n        }\n\n        if (props.stakedNodeId != null) {\n            this.setStakedNodeId(props.stakedNodeId);\n        }\n\n        if (props.declineStakingReward != null) {\n            this.setDeclineStakingReward(props.declineStakingReward);\n        }\n\n        if (props.autoRenewAccountId != null) {\n            this.setAutoRenewAccountId(props.autoRenewAccountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ITransaction[]} transactions\n     * @param {HieroProto.proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {HieroProto.proto.ITransactionBody[]} bodies\n     * @returns {ContractUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies,\n    ) {\n        const body = bodies[0];\n        const update =\n            /** @type {HieroProto.proto.IContractUpdateTransactionBody} */ (\n                body.contractUpdateInstance\n            );\n\n        let autoRenewPeriod = undefined;\n        if (\n            update.autoRenewPeriod != null &&\n            update.autoRenewPeriod.seconds != null\n        ) {\n            autoRenewPeriod = update.autoRenewPeriod.seconds;\n        }\n\n        let contractMemo = undefined;\n        if (\n            update.memoWrapper != null &&\n            Object.hasOwn(update.memoWrapper, \"value\") &&\n            update.memoWrapper.value != null\n        ) {\n            contractMemo = update.memoWrapper.value;\n        }\n\n        let maxAutomaticTokenAssociations = undefined;\n        if (\n            update.maxAutomaticTokenAssociations != null &&\n            update.maxAutomaticTokenAssociations.value != null\n        ) {\n            maxAutomaticTokenAssociations =\n                update.maxAutomaticTokenAssociations.value;\n        }\n\n        return Transaction._fromProtobufTransactions(\n            new ContractUpdateTransaction({\n                contractId:\n                    update.contractID != null\n                        ? ContractId._fromProtobuf(\n                              /** @type {HieroProto.proto.IContractID} */ (\n                                  update.contractID\n                              ),\n                          )\n                        : undefined,\n                bytecodeFileId:\n                    update.fileID != null\n                        ? FileId._fromProtobuf(\n                              /** @type {HieroProto.proto.IFileID} */ (\n                                  update.fileID\n                              ),\n                          )\n                        : undefined,\n                expirationTime:\n                    update.expirationTime != null\n                        ? Timestamp._fromProtobuf(update.expirationTime)\n                        : undefined,\n                adminKey:\n                    update.adminKey != null\n                        ? Key._fromProtobufKey(update.adminKey)\n                        : undefined,\n                proxyAccountId:\n                    update.proxyAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {HieroProto.proto.IAccountID} */ (\n                                  update.proxyAccountID\n                              ),\n                          )\n                        : undefined,\n                autoRenewPeriod,\n                contractMemo,\n                maxAutomaticTokenAssociations,\n                stakedAccountId:\n                    update.stakedAccountId != null\n                        ? AccountId._fromProtobuf(update.stakedAccountId)\n                        : undefined,\n                stakedNodeId:\n                    update.stakedNodeId != null\n                        ? update.stakedNodeId\n                        : undefined,\n                declineStakingReward:\n                    update.declineReward != null &&\n                    Boolean(update.declineReward) == true,\n                autoRenewAccountId:\n                    update.autoRenewAccountId != null\n                        ? AccountId._fromProtobuf(update.autoRenewAccountId)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies,\n        );\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Sets the contract ID which is being deleted in this transaction.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractUpdateTransaction}\n     */\n    setContractId(contractId) {\n        this._requireNotFrozen();\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * Sets the contract ID which is being deleted in this transaction.\n     *\n     * @param {Timestamp | Date} expirationTime\n     * @returns {ContractUpdateTransaction}\n     */\n    setExpirationTime(expirationTime) {\n        this._requireNotFrozen();\n        this._expirationTime =\n            expirationTime instanceof Timestamp\n                ? expirationTime\n                : Timestamp.fromDate(expirationTime);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} adminKey\n     * @returns {this}\n     */\n    setAdminKey(adminKey) {\n        this._requireNotFrozen();\n        this._adminKey = adminKey;\n\n        return this;\n    }\n\n    /**\n     * @deprecated\n     * @returns {?AccountId}\n     */\n    get proxyAccountId() {\n        return this._proxyAccountId;\n    }\n\n    /**\n     * @deprecated\n     * @param {AccountId | string} proxyAccountId\n     * @returns {this}\n     */\n    setProxyAccountId(proxyAccountId) {\n        this._requireNotFrozen();\n        this._proxyAccountId =\n            typeof proxyAccountId === \"string\"\n                ? AccountId.fromString(proxyAccountId)\n                : proxyAccountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get bytecodeFileId() {\n        return this._bytecodeFileId;\n    }\n\n    /**\n     * @param {FileId | string} bytecodeFileId\n     * @returns {this}\n     */\n    setBytecodeFileId(bytecodeFileId) {\n        console.warn(\"Deprecated: there is no replacement\");\n        this._requireNotFrozen();\n        this._bytecodeFileId =\n            typeof bytecodeFileId === \"string\"\n                ? FileId.fromString(bytecodeFileId)\n                : bytecodeFileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get contractMemo() {\n        return this._contractMemo;\n    }\n\n    /**\n     * @param {string} contractMemo\n     * @returns {this}\n     */\n    setContractMemo(contractMemo) {\n        this._requireNotFrozen();\n        this._contractMemo = contractMemo;\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearContractMemo() {\n        this._requireNotFrozen();\n        this._contractMemo = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {number | null}\n     */\n    get maxAutomaticTokenAssociations() {\n        return this._maxAutomaticTokenAssociations;\n    }\n\n    /**\n     * @param {number} maxAutomaticTokenAssociations\n     * @returns {this}\n     */\n    setMaxAutomaticTokenAssociations(maxAutomaticTokenAssociations) {\n        this._requireNotFrozen();\n        this._maxAutomaticTokenAssociations = maxAutomaticTokenAssociations;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get stakedAccountId() {\n        return this._stakedAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} stakedAccountId\n     * @returns {this}\n     */\n    setStakedAccountId(stakedAccountId) {\n        this._requireNotFrozen();\n        this._stakedAccountId =\n            typeof stakedAccountId === \"string\"\n                ? AccountId.fromString(stakedAccountId)\n                : stakedAccountId;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get stakedNodeId() {\n        return this._stakedNodeId;\n    }\n\n    /**\n     * @param {Long | number} stakedNodeId\n     * @returns {this}\n     */\n    setStakedNodeId(stakedNodeId) {\n        this._requireNotFrozen();\n        this._stakedNodeId = Long.fromValue(stakedNodeId);\n\n        return this;\n    }\n\n    /**\n     * @returns {?boolean}\n     */\n    get declineStakingRewards() {\n        return this._declineStakingReward;\n    }\n\n    /**\n     * @param {boolean} declineStakingReward\n     * @returns {this}\n     */\n    setDeclineStakingReward(declineStakingReward) {\n        this._requireNotFrozen();\n        this._declineStakingReward = declineStakingReward;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get autoRenewAccountId() {\n        return this._autoRenewAccountId;\n    }\n\n    /**\n     * If set to the sentinel <tt>0.0.0</tt> AccountID, this field removes the contract's auto-renew\n     * account. Otherwise it updates the contract's auto-renew account to the referenced account.\n     *\n     * @param {string | AccountId} autoRenewAccountId\n     * @returns {this}\n     */\n    setAutoRenewAccountId(autoRenewAccountId) {\n        this._requireNotFrozen();\n        this._autoRenewAccountId =\n            typeof autoRenewAccountId === \"string\"\n                ? AccountId.fromString(autoRenewAccountId)\n                : autoRenewAccountId;\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearAutoRenewAccountId() {\n        this._autoRenewAccountId = new AccountId(0);\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n\n        if (this._bytecodeFileId != null) {\n            this._bytecodeFileId.validateChecksum(client);\n        }\n\n        if (this._proxyAccountId != null) {\n            this._proxyAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HieroProto.proto.ITransaction} request\n     * @returns {Promise<HieroProto.proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.updateContract(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<HieroProto.proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"contractUpdateInstance\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {HieroProto.proto.IContractUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            contractID:\n                this._contractId != null\n                    ? this._contractId._toProtobuf()\n                    : null,\n            expirationTime:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            proxyAccountID:\n                this._proxyAccountId != null\n                    ? this._proxyAccountId._toProtobuf()\n                    : null,\n            autoRenewPeriod:\n                this._autoRenewPeriod != null\n                    ? this._autoRenewPeriod._toProtobuf()\n                    : null,\n            fileID: this._bytecodeFileId\n                ? this._bytecodeFileId._toProtobuf()\n                : null,\n            memoWrapper:\n                this._contractMemo != null\n                    ? {\n                          value: this._contractMemo,\n                      }\n                    : null,\n            maxAutomaticTokenAssociations:\n                this._maxAutomaticTokenAssociations != null\n                    ? {\n                          value: this._maxAutomaticTokenAssociations,\n                      }\n                    : null,\n            stakedAccountId:\n                this.stakedAccountId != null\n                    ? this.stakedAccountId._toProtobuf()\n                    : null,\n            stakedNodeId: this.stakedNodeId,\n            declineReward:\n                this.declineStakingRewards != null\n                    ? { value: this.declineStakingRewards }\n                    : null,\n            autoRenewAccountId:\n                this._autoRenewAccountId != null\n                    ? this._autoRenewAccountId.toString() == \"0.0.0\"\n                        ? Proto.proto.AccountID.create()\n                        : this._autoRenewAccountId._toProtobuf()\n                    : null,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp = /** @type {import(\"../Timestamp.js\").default} */ (\n            this._transactionIds.current.validStart\n        );\n        return `ContractUpdateTransaction:${timestamp.toString()}`;\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"contractUpdateInstance\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ContractUpdateTransaction._fromProtobuf,\n);\n"],"names":["ContractUpdateTransaction","Transaction","constructor","props","super","this","_contractId","_expirationTime","_adminKey","_proxyAccountId","_autoRenewPeriod","_bytecodeFileId","_contractMemo","_maxAutomaticTokenAssociations","_stakedAccountId","_stakedNodeId","_declineStakingReward","_autoRenewAccountId","contractId","setContractId","expirationTime","setExpirationTime","adminKey","setAdminKey","proxyAccountId","setProxyAccountId","autoRenewPeriod","setAutoRenewPeriod","bytecodeFileId","setBytecodeFileId","contractMemo","setContractMemo","maxAutomaticTokenAssociations","setMaxAutomaticTokenAssociations","stakedAccountId","setStakedAccountId","stakedNodeId","setStakedNodeId","declineStakingReward","setDeclineStakingReward","autoRenewAccountId","setAutoRenewAccountId","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","update","seconds","memoWrapper","Object","hasOwn","value","_fromProtobufTransactions","contractID","ContractId","undefined","fileID","FileId","Timestamp","Key","_fromProtobufKey","proxyAccountID","AccountId","declineReward","Boolean","_requireNotFrozen","fromString","clone","fromDate","Duration","console","warn","clearContractMemo","Long","fromValue","declineStakingRewards","clearAutoRenewAccountId","_validateChecksums","client","validateChecksum","_execute","channel","request","smartContract","updateContract","_getTransactionDataCase","_makeTransactionData","_toProtobuf","_toProtobufKey","toString","Proto","proto","AccountID","create","_getLogId","_transactionIds","current","TRANSACTION_REGISTRY","set"],"mappings":"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"}