import t,{QUERY_REGISTRY as e}from"../query/Query.js";import r from"./ContractId.js";class o extends t{constructor(t={}){super(),this._contractId=null,null!=t.contractId&&this.setContractId(t.contractId)}static _fromProtobuf(t){const e=t.contractGetBytecode;return new o({contractId:null!=e.contractID?r._fromProtobuf(e.contractID):void 0})}get contractId(){return this._contractId}setContractId(t){return this._contractId="string"==typeof t?r.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._contractId&&this._contractId.validateChecksum(t)}_execute(t,e){return t.smartContract.contractGetBytecode(e)}_mapResponseHeader(t){return t.contractGetBytecodeResponse.header}_mapResponse(t){const e=t.contractGetBytecodeResponse;return Promise.resolve(null!=e.bytecode?e.bytecode:new Uint8Array)}_onMakeRequest(t){return{contractGetBytecode:{header:t,contractID:null!=this._contractId?this._contractId._toProtobuf():null}}}_getLogId(){return`ContractByteCodeQuery:${(null!=this._paymentTransactionId&&null!=this._paymentTransactionId.validStart?this._paymentTransactionId.validStart:this._timestamp).toString()}`}}e.set("contractGetBytecode",o._fromProtobuf);export{o as default};
//# sourceMappingURL=ContractByteCodeQuery.js.map
