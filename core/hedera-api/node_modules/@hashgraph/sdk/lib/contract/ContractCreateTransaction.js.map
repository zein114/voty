{"version":3,"file":"ContractCreateTransaction.js","sources":["../../src/contract/ContractCreateTransaction.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport Hbar from \"../Hbar.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport FileId from \"../file/FileId.js\";\nimport ContractFunctionParameters from \"./ContractFunctionParameters.js\";\nimport Transaction, {\n    DEFAULT_AUTO_RENEW_PERIOD,\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Long from \"long\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HieroProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HieroProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HieroProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HieroProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HieroProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IContractCreateTransactionBody} HieroProto.proto.IContractCreateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HieroProto.proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").proto.IFileID} HieroProto.proto.IFileID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Create a new smart contract.\n *\n * If this transaction succeeds, the `ContractID` for the new smart contract\n * SHALL be set in the transaction receipt.<br/>\n * The contract is defined by the initial bytecode (or `initcode`). The\n * `initcode` SHALL be stored either in a previously created file, or in the\n * transaction body itself for very small contracts.\n *\n * As part of contract creation, the constructor defined for the new smart\n * contract SHALL run with the parameters provided in the\n * `constructorParameters` field.<br/>\n * The gas to \"power\" that constructor MUST be provided via the `gas` field,\n * and SHALL be charged to the payer for this transaction.<br/>\n * If the contract _constructor_ stores information, it is charged gas for that\n * storage. There is a separate fee in HBAR to maintain that storage until the\n * expiration, and that fee SHALL be added to this transaction as part of the\n * _transaction fee_, rather than gas.\n *\n */\n\nexport default class ContractCreateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.bytecodeFileId]\n     * @param {Uint8Array} [props.bytecode]\n     * @param {Key} [props.adminKey]\n     * @param {number | Long} [props.gas]\n     * @param {number | string | Long | BigNumber | Hbar} [props.initialBalance]\n     * @param {AccountId | string} [props.proxyAccountId]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {Uint8Array} [props.constructorParameters]\n     * @param {string} [props.contractMemo]\n     * @param {number} [props.maxAutomaticTokenAssociations]\n     * @param {AccountId | string} [props.stakedAccountId]\n     * @param {Long | number} [props.stakedNodeId]\n     * @param {boolean} [props.declineStakingReward]\n     * @param {AccountId} [props.autoRenewAccountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._bytecodeFileId = null;\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._bytecode = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._gas = null;\n\n        /**\n         * @private\n         * @type {?Hbar}\n         */\n        this._initialBalance = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._proxyAccountId = null;\n\n        /**\n         * @private\n         * @type {Duration}\n         */\n        this._autoRenewPeriod = new Duration(DEFAULT_AUTO_RENEW_PERIOD);\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._constructorParameters = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._contractMemo = null;\n\n        /**\n         * @private\n         * @type {?number}\n         */\n        this._maxAutomaticTokenAssociations = null;\n\n        this._defaultMaxTransactionFee = new Hbar(20);\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._stakedAccountId = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._stakedNodeId = null;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._declineStakingReward = false;\n\n        /**\n         * @type {?AccountId}\n         */\n        this._autoRenewAccountId = null;\n\n        if (props.bytecodeFileId != null) {\n            this.setBytecodeFileId(props.bytecodeFileId);\n        }\n\n        if (props.bytecode != null) {\n            this.setBytecode(props.bytecode);\n        }\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.gas != null) {\n            this.setGas(props.gas);\n        }\n\n        if (props.initialBalance != null) {\n            this.setInitialBalance(props.initialBalance);\n        }\n\n        if (props.proxyAccountId != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setProxyAccountId(props.proxyAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.constructorParameters != null) {\n            this.setConstructorParameters(props.constructorParameters);\n        }\n\n        if (props.contractMemo != null) {\n            this.setContractMemo(props.contractMemo);\n        }\n\n        if (props.maxAutomaticTokenAssociations != null) {\n            this.setMaxAutomaticTokenAssociations(\n                props.maxAutomaticTokenAssociations,\n            );\n        }\n\n        if (props.stakedAccountId != null) {\n            this.setStakedAccountId(props.stakedAccountId);\n        }\n\n        if (props.stakedNodeId != null) {\n            this.setStakedNodeId(props.stakedNodeId);\n        }\n\n        if (props.declineStakingReward != null) {\n            this.setDeclineStakingReward(props.declineStakingReward);\n        }\n\n        if (props.autoRenewAccountId != null) {\n            this.setAutoRenewAccountId(props.autoRenewAccountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ITransaction[]} transactions\n     * @param {HieroProto.proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {HieroProto.proto.ITransactionBody[]} bodies\n     * @returns {ContractCreateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies,\n    ) {\n        const body = bodies[0];\n        const create =\n            /** @type {HieroProto.proto.IContractCreateTransactionBody} */ (\n                body.contractCreateInstance\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new ContractCreateTransaction({\n                bytecodeFileId:\n                    create.fileID != null\n                        ? FileId._fromProtobuf(\n                              /** @type {HieroProto.proto.IFileID} */ (\n                                  create.fileID\n                              ),\n                          )\n                        : undefined,\n                adminKey:\n                    create.adminKey != null\n                        ? Key._fromProtobufKey(create.adminKey)\n                        : undefined,\n                gas: create.gas != null ? create.gas : undefined,\n                initialBalance:\n                    create.initialBalance != null\n                        ? Hbar.fromTinybars(create.initialBalance)\n                        : undefined,\n                proxyAccountId:\n                    create.proxyAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {HieroProto.proto.IAccountID} */ (\n                                  create.proxyAccountID\n                              ),\n                          )\n                        : undefined,\n                autoRenewPeriod:\n                    create.autoRenewPeriod != null\n                        ? create.autoRenewPeriod.seconds != null\n                            ? create.autoRenewPeriod.seconds\n                            : undefined\n                        : undefined,\n                constructorParameters:\n                    create.constructorParameters != null\n                        ? create.constructorParameters\n                        : undefined,\n                contractMemo: create.memo != null ? create.memo : undefined,\n                maxAutomaticTokenAssociations:\n                    create.maxAutomaticTokenAssociations != null\n                        ? create.maxAutomaticTokenAssociations\n                        : undefined,\n                stakedAccountId:\n                    create.stakedAccountId != null\n                        ? AccountId._fromProtobuf(create.stakedAccountId)\n                        : undefined,\n                stakedNodeId:\n                    create.stakedNodeId != null\n                        ? create.stakedNodeId\n                        : undefined,\n                declineStakingReward: create.declineReward == true,\n                autoRenewAccountId:\n                    create.autoRenewAccountId != null\n                        ? AccountId._fromProtobuf(create.autoRenewAccountId)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies,\n        );\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get bytecodeFileId() {\n        return this._bytecodeFileId;\n    }\n\n    /**\n     * @param {FileId | string} bytecodeFileId\n     * @returns {this}\n     */\n    setBytecodeFileId(bytecodeFileId) {\n        this._requireNotFrozen();\n        this._bytecodeFileId =\n            typeof bytecodeFileId === \"string\"\n                ? FileId.fromString(bytecodeFileId)\n                : bytecodeFileId.clone();\n        this._bytecode = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get bytecode() {\n        return this._bytecode;\n    }\n\n    /**\n     * @param {Uint8Array} bytecode\n     * @returns {this}\n     */\n    setBytecode(bytecode) {\n        this._requireNotFrozen();\n        this._bytecode = bytecode;\n        this._bytecodeFileId = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} adminKey\n     * @returns {this}\n     */\n    setAdminKey(adminKey) {\n        this._requireNotFrozen();\n        this._adminKey = adminKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get gas() {\n        return this._gas;\n    }\n\n    /**\n     * @param {number | Long} gas\n     * @returns {this}\n     */\n    setGas(gas) {\n        this._requireNotFrozen();\n        this._gas = gas instanceof Long ? gas : Long.fromValue(gas);\n        if (this._gas.lessThan(0)) {\n            throw new Error(\"Gas cannot be negative number\");\n        }\n        return this;\n    }\n\n    /**\n     * @returns {?Hbar}\n     */\n    get initialBalance() {\n        return this._initialBalance;\n    }\n\n    /**\n     * Set the initial amount to transfer into this contract.\n     *\n     * @param {number | string | Long | BigNumber | Hbar} initialBalance\n     * @returns {this}\n     */\n    setInitialBalance(initialBalance) {\n        this._requireNotFrozen();\n        this._initialBalance =\n            initialBalance instanceof Hbar\n                ? initialBalance\n                : new Hbar(initialBalance);\n\n        return this;\n    }\n\n    /**\n     * @deprecated\n     * @returns {?AccountId}\n     */\n    get proxyAccountId() {\n        return this._proxyAccountId;\n    }\n\n    /**\n     * @deprecated\n     * @param {AccountId | string} proxyAccountId\n     * @returns {this}\n     */\n    setProxyAccountId(proxyAccountId) {\n        this._requireNotFrozen();\n        this._proxyAccountId =\n            proxyAccountId instanceof AccountId\n                ? proxyAccountId\n                : AccountId.fromString(proxyAccountId);\n\n        return this;\n    }\n\n    /**\n     * @returns {Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * An account to charge for auto-renewal of this contract. If not set, or set to an\n     * account with zero hbar balance, the contract's own hbar balance will be used to\n     * cover auto-renewal fees.\n     *\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get constructorParameters() {\n        return this._constructorParameters;\n    }\n\n    /**\n     * @param {Uint8Array | ContractFunctionParameters} constructorParameters\n     * @returns {this}\n     */\n    setConstructorParameters(constructorParameters) {\n        this._requireNotFrozen();\n        this._constructorParameters =\n            constructorParameters instanceof ContractFunctionParameters\n                ? constructorParameters._build()\n                : constructorParameters;\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get contractMemo() {\n        return this._contractMemo;\n    }\n\n    /**\n     * @param {string} contractMemo\n     * @returns {this}\n     */\n    setContractMemo(contractMemo) {\n        this._requireNotFrozen();\n        this._contractMemo = contractMemo;\n\n        return this;\n    }\n\n    /**\n     * @returns {?number}\n     */\n    get maxAutomaticTokenAssociations() {\n        return this._maxAutomaticTokenAssociations;\n    }\n\n    /**\n     * @param {number} maxAutomaticTokenAssociations\n     * @returns {this}\n     */\n    setMaxAutomaticTokenAssociations(maxAutomaticTokenAssociations) {\n        this._maxAutomaticTokenAssociations = maxAutomaticTokenAssociations;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get stakedAccountId() {\n        return this._stakedAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} stakedAccountId\n     * @returns {this}\n     */\n    setStakedAccountId(stakedAccountId) {\n        this._requireNotFrozen();\n        this._stakedAccountId =\n            typeof stakedAccountId === \"string\"\n                ? AccountId.fromString(stakedAccountId)\n                : stakedAccountId;\n        this._stakedNodeId = null;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get stakedNodeId() {\n        return this._stakedNodeId;\n    }\n\n    /**\n     * @param {Long | number} stakedNodeId\n     * @returns {this}\n     */\n    setStakedNodeId(stakedNodeId) {\n        this._requireNotFrozen();\n        this._stakedNodeId = Long.fromValue(stakedNodeId);\n        this._stakedAccountId = null;\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get declineStakingRewards() {\n        return this._declineStakingReward;\n    }\n\n    /**\n     * @param {boolean} declineStakingReward\n     * @returns {this}\n     */\n    setDeclineStakingReward(declineStakingReward) {\n        this._requireNotFrozen();\n        this._declineStakingReward = declineStakingReward;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get autoRenewAccountId() {\n        return this._autoRenewAccountId;\n    }\n\n    /**\n     * @param {string | AccountId} autoRenewAccountId\n     * @returns {this}\n     */\n    setAutoRenewAccountId(autoRenewAccountId) {\n        this._requireNotFrozen();\n        this._autoRenewAccountId =\n            typeof autoRenewAccountId === \"string\"\n                ? AccountId.fromString(autoRenewAccountId)\n                : autoRenewAccountId;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._bytecodeFileId != null) {\n            this._bytecodeFileId.validateChecksum(client);\n        }\n\n        if (this._proxyAccountId != null) {\n            this._proxyAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HieroProto.proto.ITransaction} request\n     * @returns {Promise<HieroProto.proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.createContract(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<HieroProto.proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"contractCreateInstance\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {HieroProto.proto.IContractCreateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            fileID:\n                this._bytecodeFileId != null\n                    ? this._bytecodeFileId._toProtobuf()\n                    : null,\n            initcode: this._bytecode,\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            gas: this._gas,\n            initialBalance:\n                this._initialBalance != null\n                    ? this._initialBalance.toTinybars()\n                    : null,\n            proxyAccountID:\n                this._proxyAccountId != null\n                    ? this._proxyAccountId._toProtobuf()\n                    : null,\n            autoRenewPeriod: this._autoRenewPeriod._toProtobuf(),\n            constructorParameters: this._constructorParameters,\n            memo: this._contractMemo,\n            maxAutomaticTokenAssociations: this._maxAutomaticTokenAssociations,\n            stakedAccountId:\n                this.stakedAccountId != null\n                    ? this.stakedAccountId._toProtobuf()\n                    : null,\n            stakedNodeId: this.stakedNodeId,\n            declineReward: this.declineStakingRewards,\n            autoRenewAccountId:\n                this._autoRenewAccountId != null\n                    ? this._autoRenewAccountId._toProtobuf()\n                    : null,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp = /** @type {import(\"../Timestamp.js\").default} */ (\n            this._transactionIds.current.validStart\n        );\n        return `ContractCreateTransaction:${timestamp.toString()}`;\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"contractCreateInstance\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ContractCreateTransaction._fromProtobuf,\n);\n"],"names":["ContractCreateTransaction","Transaction","constructor","props","super","this","_bytecodeFileId","_bytecode","_adminKey","_gas","_initialBalance","_proxyAccountId","_autoRenewPeriod","Duration","DEFAULT_AUTO_RENEW_PERIOD","_constructorParameters","_contractMemo","_maxAutomaticTokenAssociations","_defaultMaxTransactionFee","Hbar","_stakedAccountId","_stakedNodeId","_declineStakingReward","_autoRenewAccountId","bytecodeFileId","setBytecodeFileId","bytecode","setBytecode","adminKey","setAdminKey","gas","setGas","initialBalance","setInitialBalance","proxyAccountId","setProxyAccountId","autoRenewPeriod","setAutoRenewPeriod","constructorParameters","setConstructorParameters","contractMemo","setContractMemo","maxAutomaticTokenAssociations","setMaxAutomaticTokenAssociations","stakedAccountId","setStakedAccountId","stakedNodeId","setStakedNodeId","declineStakingReward","setDeclineStakingReward","autoRenewAccountId","setAutoRenewAccountId","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","create","_fromProtobufTransactions","fileID","FileId","undefined","Key","_fromProtobufKey","fromTinybars","proxyAccountID","AccountId","seconds","memo","declineReward","_requireNotFrozen","fromString","clone","Long","fromValue","lessThan","Error","ContractFunctionParameters","_build","declineStakingRewards","_validateChecksums","client","validateChecksum","_execute","channel","request","smartContract","createContract","_getTransactionDataCase","_makeTransactionData","_toProtobuf","initcode","_toProtobufKey","toTinybars","_getLogId","_transactionIds","current","toString","TRANSACTION_REGISTRY","set"],"mappings":"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"}