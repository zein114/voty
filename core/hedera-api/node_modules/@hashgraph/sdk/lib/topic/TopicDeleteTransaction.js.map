{"version":3,"file":"TopicDeleteTransaction.js","sources":["../../src/topic/TopicDeleteTransaction.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport TopicId from \"./TopicId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IConsensusDeleteTopicTransactionBody} HieroProto.proto.IConsensusDeleteTopicTransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HieroProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HieroProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HieroProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HieroProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HieroProto.proto.ITransactionResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Delete a topic.\n *\n * No more transactions or queries on the topic will succeed.\n *\n * If an adminKey is set, this transaction must be signed by that key.\n * If there is no adminKey, this transaction will fail with Status#Unautorized.\n */\nexport default class TopicDeleteTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {TopicId | string} [props.topicId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TopicId}\n         */\n        this._topicId = null;\n\n        if (props.topicId != null) {\n            this.setTopicId(props.topicId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ITransaction[]} transactions\n     * @param {HieroProto.proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {HieroProto.proto.ITransactionBody[]} bodies\n     * @returns {TopicDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies,\n    ) {\n        const body = bodies[0];\n        const topicDelete =\n            /** @type {HieroProto.proto.IConsensusDeleteTopicTransactionBody} */ (\n                body.consensusDeleteTopic\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TopicDeleteTransaction({\n                topicId:\n                    topicDelete.topicID != null\n                        ? TopicId._fromProtobuf(topicDelete.topicID)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies,\n        );\n    }\n\n    /**\n     * @returns {?TopicId}\n     */\n    get topicId() {\n        return this._topicId;\n    }\n\n    /**\n     * Set the topic ID which is being deleted in this transaction.\n     *\n     * @param {TopicId | string} topicId\n     * @returns {TopicDeleteTransaction}\n     */\n    setTopicId(topicId) {\n        this._requireNotFrozen();\n        this._topicId =\n            typeof topicId === \"string\"\n                ? TopicId.fromString(topicId)\n                : topicId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._topicId != null) {\n            this._topicId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HieroProto.proto.ITransaction} request\n     * @returns {Promise<HieroProto.proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.consensus.deleteTopic(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<HieroProto.proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"consensusDeleteTopic\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {HieroProto.proto.IConsensusDeleteTopicTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            topicID: this._topicId != null ? this._topicId._toProtobuf() : null,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp = /** @type {import(\"../Timestamp.js\").default} */ (\n            this._transactionIds.current.validStart\n        );\n        return `TopicDeleteTransaction:${timestamp.toString()}`;\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"consensusDeleteTopic\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TopicDeleteTransaction._fromProtobuf,\n);\n"],"names":["TopicDeleteTransaction","Transaction","constructor","props","super","this","_topicId","topicId","setTopicId","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","topicDelete","_fromProtobufTransactions","topicID","TopicId","undefined","_requireNotFrozen","fromString","clone","_validateChecksums","client","validateChecksum","_execute","channel","request","consensus","deleteTopic","_getTransactionDataCase","_makeTransactionData","_toProtobuf","_getLogId","_transactionIds","current","toString","TRANSACTION_REGISTRY","set"],"mappings":"oGAgCe,MAAMA,UAA+BC,EAKhD,WAAAC,CAAYC,EAAQ,IAChBC,QAMAC,KAAKC,SAAW,KAEK,MAAjBH,EAAMI,SACNF,KAAKG,WAAWL,EAAMI,QAElC,CAWI,oBAAOE,CACHC,EACAC,EACAC,EACAC,EACAC,GAEA,MACMC,EADOD,EAAO,GAIf,qBAEL,OAAOb,EAAYe,0BACf,IAAIhB,EAAuB,CACvBO,QAC2B,MAAvBQ,EAAYE,QACNC,EAAQT,cAAcM,EAAYE,cAClCE,IAEdT,EACAC,EACAC,EACAC,EACAC,EAEZ,CAKI,WAAIP,GACA,OAAOF,KAAKC,QACpB,CAQI,UAAAE,CAAWD,GAOP,OANAF,KAAKe,oBACLf,KAAKC,SACkB,iBAAZC,EACDW,EAAQG,WAAWd,GACnBA,EAAQe,QAEXjB,IACf,CAKI,kBAAAkB,CAAmBC,GACM,MAAjBnB,KAAKC,UACLD,KAAKC,SAASmB,iBAAiBD,EAE3C,CASI,QAAAE,CAASC,EAASC,GACd,OAAOD,EAAQE,UAAUC,YAAYF,EAC7C,CAOI,uBAAAG,GACI,MAAO,sBACf,CAOI,oBAAAC,GACI,MAAO,CACHf,QAA0B,MAAjBZ,KAAKC,SAAmBD,KAAKC,SAAS2B,cAAgB,KAE3E,CAKI,SAAAC,GAII,MAAO,0BAFH7B,KAAK8B,gBAAgBC,QACxB,WAC0CC,YACnD,EAGAC,EAAqBC,IACjB,uBAEAvC,EAAuBS"}