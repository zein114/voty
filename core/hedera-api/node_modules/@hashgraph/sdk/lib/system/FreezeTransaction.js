import e,{TRANSACTION_REGISTRY as t}from"../transaction/Transaction.js";import i from"../Timestamp.js";import r from"../file/FileId.js";import{decode as s}from"../encoding/hex.js";import n from"../FreezeType.js";class l extends e{constructor(e={}){super(),this._startTime=null,this._startTimestamp=null,this._endTime=null,this._fileId=null,this._fileHash=null,this._freezeType=null,null!=e.startTime&&this.setStartTime(e.startTime.hour,e.startTime.minute),null!=e.endTime&&this.setEndTime(e.endTime.hour,e.endTime.minute),null!=e.startTimestamp&&this.setStartTimestamp(e.startTimestamp),null!=e.updateFileId&&this.setUpdateFileId(e.updateFileId),null!=e.fileId&&this.setFileId(e.fileId),null!=e.fileHash&&this.setFileHash(e.fileHash),null!=e.freezeType&&this.setFreezeType(e.freezeType)}static _fromProtobuf(t,s,a,u,o){const m=o[0].freeze;return e._fromProtobufTransactions(new l({startTime:null!=m.startHour&&null!=m.startMin?{hour:m.startHour,minute:m.startMin}:void 0,endTime:null!=m.endHour&&null!=m.endMin?{hour:m.endHour,minute:m.endMin}:void 0,startTimestamp:null!=m.startTime?i._fromProtobuf(m.startTime):void 0,updateFileId:null!=m.updateFile?r._fromProtobuf(m.updateFile):void 0,fileHash:null!=m.fileHash?m.fileHash:void 0,freezeType:null!=m.freezeType?n._fromCode(m.freezeType):void 0}),t,s,a,u,o)}get startTime(){return null}setStartTime(e,t){if(this._requireNotFrozen(),"string"==typeof e){const t=e.split(":");this._startTime={hour:Number(t[0]),minute:Number(t[1])}}else this._startTime={hour:e,minute:t};return this}get startTimestamp(){return this._startTimestamp}setStartTimestamp(e){return this._requireNotFrozen(),this._startTimestamp=e,this}get endTime(){return console.warn("`FreezeTransaction.endTime` is deprecated"),this._endTime}setEndTime(e,t){if(console.warn("`FreezeTransaction.endTime` is deprecated"),this._requireNotFrozen(),"string"==typeof e){const t=e.split(":");this._endTime={hour:Number(t[0]),minute:Number(t[1])}}else this._endTime={hour:e,minute:t};return this}get updateFileId(){return this.fileId}setUpdateFileId(e){return this.setFileId(e)}get fileId(){return this._fileId}setFileId(e){return this._requireNotFrozen(),this._fileId=e,this}get fileHash(){return this._fileHash}setFileHash(e){return this._requireNotFrozen(),this._fileHash="string"==typeof e?s(e):e,this}get freezeType(){return this._freezeType}setFreezeType(e){return this._requireNotFrozen(),this._freezeType=e,this}_getTransactionDataCase(){return"freeze"}_makeTransactionData(){return{startTime:null!=this._startTimestamp?this._startTimestamp._toProtobuf():null,updateFile:null!=this._fileId?this._fileId._toProtobuf():null,fileHash:this._fileHash,freezeType:null!=this._freezeType?this._freezeType.valueOf():null}}_getLogId(){return`FreezeTransaction:${this._transactionIds.current.validStart.toString()}`}_execute(e,t){return e.freeze.freeze(t)}}t.set("freeze",l._fromProtobuf);export{l as default};
//# sourceMappingURL=FreezeTransaction.js.map
