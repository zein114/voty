{"version":3,"file":"FreezeTransaction.js","sources":["../../src/system/FreezeTransaction.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport FileId from \"../file/FileId.js\";\nimport * as hex from \"../encoding/hex.js\";\nimport FreezeType from \"../FreezeType.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HieroProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HieroProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HieroProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HieroProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HieroProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IFreezeTransactionBody} HieroProto.proto.IFreezeTransactionBody\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * @typedef {object} HourMinute\n * @property {number} hour\n * @property {number} minute\n */\n\n/**\n * Freeze, cancel, or prepare a freeze.\n * This single transaction performs all of the functions supported\n * by the network freeze service. These functions include actions to\n * prepare an upgrade, prepare a telemetry upgrade, freeze the network,\n * freeze the network for upgrade, or abort a scheduled freeze.\n * <p>\n * The actual freeze action SHALL be determined by the `freeze_type` field\n * of the `FreezeTransactionBody`.<br/>\n */\nexport default class FreezeTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {HourMinute} [props.startTime]\n     * @param {HourMinute} [props.endTime]\n     * @param {Timestamp} [props.startTimestamp]\n     * @param {FileId} [props.updateFileId]\n     * @param {FileId} [props.fileId]\n     * @param {Uint8Array | string} [props.fileHash]\n     * @param { FreezeType } [props.freezeType]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?HourMinute}\n         */\n        this._startTime = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._startTimestamp = null;\n\n        /**\n         * @private\n         * @type {?HourMinute}\n         */\n        this._endTime = null;\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._fileId = null;\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._fileHash = null;\n\n        /**\n         * @private\n         * @type {?FreezeType}\n         */\n        this._freezeType = null;\n\n        if (props.startTime != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setStartTime(props.startTime.hour, props.startTime.minute);\n        }\n\n        if (props.endTime != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setEndTime(props.endTime.hour, props.endTime.minute);\n        }\n\n        if (props.startTimestamp != null) {\n            this.setStartTimestamp(props.startTimestamp);\n        }\n\n        if (props.updateFileId != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setUpdateFileId(props.updateFileId);\n        }\n\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n\n        if (props.fileHash != null) {\n            this.setFileHash(props.fileHash);\n        }\n\n        if (props.freezeType != null) {\n            this.setFreezeType(props.freezeType);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ITransaction[]} transactions\n     * @param {HieroProto.proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {HieroProto.proto.ITransactionBody[]} bodies\n     * @returns {FreezeTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies,\n    ) {\n        const body = bodies[0];\n        const freeze = /** @type {HieroProto.proto.IFreezeTransactionBody} */ (\n            body.freeze\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new FreezeTransaction({\n                startTime:\n                    freeze.startHour != null && freeze.startMin != null\n                        ? {\n                              hour: freeze.startHour,\n                              minute: freeze.startMin,\n                          }\n                        : undefined,\n                endTime:\n                    freeze.endHour != null && freeze.endMin != null\n                        ? {\n                              hour: freeze.endHour,\n                              minute: freeze.endMin,\n                          }\n                        : undefined,\n                startTimestamp:\n                    freeze.startTime != null\n                        ? Timestamp._fromProtobuf(freeze.startTime)\n                        : undefined,\n                updateFileId:\n                    freeze.updateFile != null\n                        ? FileId._fromProtobuf(freeze.updateFile)\n                        : undefined,\n                fileHash: freeze.fileHash != null ? freeze.fileHash : undefined,\n                freezeType:\n                    freeze.freezeType != null\n                        ? FreezeType._fromCode(freeze.freezeType)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies,\n        );\n    }\n\n    /**\n     * @deprecated - Use `startTimestamp` instead\n     * @returns {?HourMinute}\n     */\n    get startTime() {\n        return null;\n    }\n\n    /**\n     * @deprecated - Use `startTimestamp` instead\n     * @param {number | string} startHourOrString\n     * @param {?number} startMinute\n     * @returns {FreezeTransaction}\n     */\n    setStartTime(startHourOrString, startMinute) {\n        this._requireNotFrozen();\n        if (typeof startHourOrString === \"string\") {\n            const split = startHourOrString.split(\":\");\n            this._startTime = {\n                hour: Number(split[0]),\n                minute: Number(split[1]),\n            };\n        } else {\n            this._startTime = {\n                hour: startHourOrString,\n                minute: /** @type {number} */ (startMinute),\n            };\n        }\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get startTimestamp() {\n        return this._startTimestamp;\n    }\n\n    /**\n     * @param {Timestamp} startTimestamp\n     * @returns {FreezeTransaction}\n     */\n    setStartTimestamp(startTimestamp) {\n        this._requireNotFrozen();\n        this._startTimestamp = startTimestamp;\n\n        return this;\n    }\n\n    /**\n     * @deprecated\n     * @returns {?HourMinute}\n     */\n    get endTime() {\n        console.warn(\"`FreezeTransaction.endTime` is deprecated\");\n        return this._endTime;\n    }\n\n    /**\n     * @deprecated\n     * @param {number | string} endHourOrString\n     * @param {?number} endMinute\n     * @returns {FreezeTransaction}\n     */\n    setEndTime(endHourOrString, endMinute) {\n        console.warn(\"`FreezeTransaction.endTime` is deprecated\");\n        this._requireNotFrozen();\n        if (typeof endHourOrString === \"string\") {\n            const split = endHourOrString.split(\":\");\n            this._endTime = {\n                hour: Number(split[0]),\n                minute: Number(split[1]),\n            };\n        } else {\n            this._endTime = {\n                hour: endHourOrString,\n                minute: /** @type {number} */ (endMinute),\n            };\n        }\n\n        return this;\n    }\n\n    /**\n     * @deprecated - Use `fileId` instead\n     * @returns {?FileId}\n     */\n    get updateFileId() {\n        return this.fileId;\n    }\n\n    /**\n     * @deprecated - Use `setFileId()` instead\n     * @param {FileId} updateFileId\n     * @returns {FreezeTransaction}\n     */\n    setUpdateFileId(updateFileId) {\n        return this.setFileId(updateFileId);\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * @param {FileId} fileId\n     * @returns {FreezeTransaction}\n     */\n    setFileId(fileId) {\n        this._requireNotFrozen();\n        this._fileId = fileId;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get fileHash() {\n        return this._fileHash;\n    }\n\n    /**\n     * @param {Uint8Array | string} fileHash\n     * @returns {FreezeTransaction}\n     */\n    setFileHash(fileHash) {\n        this._requireNotFrozen();\n        this._fileHash =\n            typeof fileHash === \"string\" ? hex.decode(fileHash) : fileHash;\n\n        return this;\n    }\n\n    /**\n     * @returns {?FreezeType}\n     */\n    get freezeType() {\n        return this._freezeType;\n    }\n\n    /**\n     * @param {FreezeType} freezeType\n     * @returns {FreezeTransaction}\n     */\n    setFreezeType(freezeType) {\n        this._requireNotFrozen();\n        this._freezeType = freezeType;\n        return this;\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<HieroProto.proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"freeze\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {HieroProto.proto.IFreezeTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            startTime:\n                this._startTimestamp != null\n                    ? this._startTimestamp._toProtobuf()\n                    : null,\n            updateFile:\n                this._fileId != null ? this._fileId._toProtobuf() : null,\n            fileHash: this._fileHash,\n            freezeType:\n                this._freezeType != null ? this._freezeType.valueOf() : null,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp = /** @type {import(\"../Timestamp.js\").default} */ (\n            this._transactionIds.current.validStart\n        );\n        return `FreezeTransaction:${timestamp.toString()}`;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HieroProto.proto.ITransaction} request\n     * @returns {Promise<HieroProto.proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.freeze.freeze(request);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nTRANSACTION_REGISTRY.set(\"freeze\", FreezeTransaction._fromProtobuf);\n"],"names":["FreezeTransaction","Transaction","constructor","props","super","this","_startTime","_startTimestamp","_endTime","_fileId","_fileHash","_freezeType","startTime","setStartTime","hour","minute","endTime","setEndTime","startTimestamp","setStartTimestamp","updateFileId","setUpdateFileId","fileId","setFileId","fileHash","setFileHash","freezeType","setFreezeType","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","freeze","_fromProtobufTransactions","startHour","startMin","undefined","endHour","endMin","Timestamp","updateFile","FileId","FreezeType","_fromCode","startHourOrString","startMinute","_requireNotFrozen","split","Number","console","warn","endHourOrString","endMinute","hex.decode","_getTransactionDataCase","_makeTransactionData","_toProtobuf","valueOf","_getLogId","_transactionIds","current","toString","_execute","channel","request","TRANSACTION_REGISTRY","set"],"mappings":"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"}