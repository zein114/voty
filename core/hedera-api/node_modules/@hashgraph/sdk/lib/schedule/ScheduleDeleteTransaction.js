import e from"./ScheduleId.js";import t,{TRANSACTION_REGISTRY as s}from"../transaction/Transaction.js";import r from"../Hbar.js";class u extends t{constructor(e={}){super(),this._scheduleId=null,null!=e.scheduleId&&this.setScheduleId(e.scheduleId),this._defaultMaxTransactionFee=new r(5)}static _fromProtobuf(s,r,d,l,c){const o=c[0].scheduleDelete;return t._fromProtobufTransactions(new u({scheduleId:null!=o.scheduleID?e._fromProtobuf(o.scheduleID):void 0}),s,r,d,l,c)}get scheduleId(){return this._scheduleId}setScheduleId(t){return this._requireNotFrozen(),this._scheduleId="string"==typeof t?e.fromString(t):t.clone(),this}_validateChecksums(e){null!=this._scheduleId&&this._scheduleId.validateChecksum(e)}_execute(e,t){return e.schedule.deleteSchedule(t)}_getTransactionDataCase(){return"scheduleDelete"}_makeTransactionData(){return{scheduleID:null!=this._scheduleId?this._scheduleId._toProtobuf():null}}_getLogId(){return`ScheduleDeleteTransaction:${this._transactionIds.current.validStart.toString()}`}}s.set("scheduleDelete",u._fromProtobuf);export{u as default};
//# sourceMappingURL=ScheduleDeleteTransaction.js.map
