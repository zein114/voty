const t=new class{constructor(){this._timeDrift=0,this._contractId=null,this._keyList=null,this._thresholdKey=null,this._publicKeyED25519=null,this._publicKeyECDSA=null,this._privateKeyConstructor=null,this._mnemonicFromString=null,this._accountIdConstructor=null,this._delegateContractId=null,this._evmAddress=null,this._ethereumTransactionDataLegacyFromBytes=null,this._ethereumTransactionDataEip1559FromBytes=null,this._ethereumTransactionDataEip2930FromBytes=null,this._transactionReceiptQueryConstructor=null,this._transactionRecordQueryConstructor=null}setTimeDrift(t){this._timeDrift=t}get timeDrift(){if(null==this._timeDrift)throw new Error("Cache.timeDrift was used before it was set");return this._timeDrift}setContractId(t){this._contractId=t}get contractId(){if(null==this._contractId)throw new Error("Cache.contractId was used before it was set");return this._contractId}setKeyList(t){this._keyList=t}get keyList(){if(null==this._keyList)throw new Error("Cache.keyList was used before it was set");return this._keyList}setThresholdKey(t){this._thresholdKey=t}get thresholdKey(){if(null==this._thresholdKey)throw new Error("Cache.thresholdKey was used before it was set");return this._thresholdKey}setPublicKeyED25519(t){this._publicKeyED25519=t}get publicKeyED25519(){if(null==this._publicKeyED25519)throw new Error("Cache.publicKeyED25519 was used before it was set");return this._publicKeyED25519}setPublicKeyECDSA(t){this._publicKeyECDSA=t}get publicKeyECDSA(){if(null==this._publicKeyECDSA)throw new Error("Cache.publicKeyECDSA was used before it was set");return this._publicKeyECDSA}setPrivateKeyConstructor(t){this._privateKeyConstructor=t}get privateKeyConstructor(){if(null==this._privateKeyConstructor)throw new Error("Cache.privateKeyConstructor was used before it was set");return this._privateKeyConstructor}setMnemonicFromString(t){this._mnemonicFromString=t}get mnemonicFromString(){if(null==this._mnemonicFromString)throw new Error("Cache.mnemonicFromString was used before it was set");return this.mnemonicFromString}setAccountIdConstructor(t){this._accountIdConstructor=t}get accountIdConstructor(){if(null==this._accountIdConstructor)throw new Error("Cache.accountIdConstructor was used before it was set");return this._accountIdConstructor}setDelegateContractId(t){this._delegateContractId=t}get delegateContractId(){if(null==this._delegateContractId)throw new Error("Cache.delegateContractId was used before it was set");return this._delegateContractId}setEvmAddress(t){this._evmAddress=t}get evmAddress(){if(null==this._evmAddress)throw new Error("Cache.evmAddress was used before it was set");return this._evmAddress}setEthereumTransactionDataLegacyFromBytes(t){this._ethereumTransactionDataLegacyFromBytes=t}get ethereumTransactionDataLegacyFromBytes(){if(null==this._ethereumTransactionDataLegacyFromBytes)throw new Error("Cache.ethereumTransactionDataLegacyFromBytes was used before it was set");return this._ethereumTransactionDataLegacyFromBytes}setEthereumTransactionDataEip1559FromBytes(t){this._ethereumTransactionDataEip1559FromBytes=t}get ethereumTransactionDataEip1559FromBytes(){if(null==this._ethereumTransactionDataEip1559FromBytes)throw new Error("Cache.ethereumTransactionDataEip1559FromBytes was used before it was set");return this._ethereumTransactionDataEip1559FromBytes}setEthereumTransactionDataEip2930FromBytes(t){this._ethereumTransactionDataEip2930FromBytes=t}get ethereumTransactionDataEip2930FromBytes(){if(null==this._ethereumTransactionDataEip2930FromBytes)throw new Error("Cache.ethereumTransactionDataEip2930FromBytes was used before it was set");return this._ethereumTransactionDataEip2930FromBytes}setTransactionReceiptQueryConstructor(t){this._transactionReceiptQueryConstructor=t}get transactionReceiptQueryConstructor(){if(null==this._transactionReceiptQueryConstructor)throw new Error("Cache.transactionReceiptQueryConstructor was used before it was set");return this._transactionReceiptQueryConstructor}setTransactionRecordQueryConstructor(t){this._transactionRecordQueryConstructor=t}get transactionRecordQueryConstructor(){if(null==this._transactionRecordQueryConstructor)throw new Error("Cache.transactionRecordQueryConstructor was used before it was set");return this._transactionRecordQueryConstructor}};export{t as default};
//# sourceMappingURL=Cache.js.map
