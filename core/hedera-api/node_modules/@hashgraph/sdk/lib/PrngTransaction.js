import t,{TRANSACTION_REGISTRY as r}from"./transaction/Transaction.js";import{isNumber as n}from"./util.js";class e extends t{constructor(t={}){super(),this._range=null,null!=t.range&&this.setRange(t.range)}setRange(t){return this._range=t,this}get range(){return this._range}_validateChecksums(t){null!=this._range&&n(this._range)&&this._validateChecksums(t)}_execute(t,r){return t.util.prng(r)}static _fromProtobuf(r,n,a,s,i){const o=i[0].utilPrng;return t._fromProtobufTransactions(new e({range:o.range}),r,n,a,s,i)}_getTransactionDataCase(){return"utilPrng"}_makeTransactionData(){return{range:this.range}}_getLogId(){return`RandomGenerate:${this._transactionIds.current.validStart.toString()}`}}r.set("utilPrng",e._fromProtobuf);export{e as default};
//# sourceMappingURL=PrngTransaction.js.map
