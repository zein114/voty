{"version":3,"file":"TokenFeeScheduleUpdateTransaction.js","sources":["../../src/token/TokenFeeScheduleUpdateTransaction.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport TokenId from \"./TokenId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport CustomFixedFee from \"./CustomFixedFee.js\";\nimport CustomFractionalFee from \"./CustomFractionalFee.js\";\nimport CustomRoyaltyFee from \"./CustomRoyaltyFee.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HieroProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HieroProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HieroProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HieroProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HieroProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenFeeScheduleUpdateTransactionBody} HieroProto.proto.ITokenFeeScheduleUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITokenID} HieroProto.proto.ITokenID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"./CustomFee.js\").default} CustomFee\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * FeeScheduleUpdate a new Hederaâ„¢ crypto-currency token.\n */\nexport default class TokenFeeScheduleUpdateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {CustomFee[]} [props.customFees]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {CustomFee[]}\n         */\n        this._customFees = [];\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.customFees != null) {\n            this.setCustomFees(props.customFees);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ITransaction[]} transactions\n     * @param {HieroProto.proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {HieroProto.proto.ITransactionBody[]} bodies\n     * @returns {TokenFeeScheduleUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies,\n    ) {\n        const body = bodies[0];\n        const feeScheduleUpdate =\n            /** @type {HieroProto.proto.ITokenFeeScheduleUpdateTransactionBody} */ (\n                body.tokenFeeScheduleUpdate\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenFeeScheduleUpdateTransaction({\n                tokenId:\n                    feeScheduleUpdate.tokenId != null\n                        ? TokenId._fromProtobuf(feeScheduleUpdate.tokenId)\n                        : undefined,\n                customFees:\n                    feeScheduleUpdate.customFees != null\n                        ? feeScheduleUpdate.customFees.map((fee) => {\n                              if (fee.fixedFee != null) {\n                                  return CustomFixedFee._fromProtobuf(fee);\n                              } else if (fee.fractionalFee != null) {\n                                  return CustomFractionalFee._fromProtobuf(fee);\n                              } else {\n                                  return CustomRoyaltyFee._fromProtobuf(fee);\n                              }\n                          })\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies,\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : TokenId._fromProtobuf(tokenId._toProtobuf());\n\n        return this;\n    }\n\n    /**\n     * @returns {CustomFee[]}\n     */\n    get customFees() {\n        return this._customFees;\n    }\n\n    /**\n     * @param {CustomFee[]} fees\n     * @returns {this}\n     */\n    setCustomFees(fees) {\n        this._requireNotFrozen();\n        this._customFees = fees;\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HieroProto.proto.ITransaction} request\n     * @returns {Promise<HieroProto.proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.updateTokenFeeSchedule(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<HieroProto.proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenFeeScheduleUpdate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {HieroProto.proto.ITokenFeeScheduleUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            tokenId: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            customFees: this._customFees.map((fee) => fee._toProtobuf()),\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp = /** @type {import(\"../Timestamp.js\").default} */ (\n            this._transactionIds.current.validStart\n        );\n        return `TokenFeeScheduleUpdateTransaction:${timestamp.toString()}`;\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenFeeScheduleUpdate\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenFeeScheduleUpdateTransaction._fromProtobuf,\n);\n"],"names":["TokenFeeScheduleUpdateTransaction","Transaction","constructor","props","super","this","_tokenId","_customFees","tokenId","setTokenId","customFees","setCustomFees","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","feeScheduleUpdate","_fromProtobufTransactions","TokenId","undefined","map","fee","fixedFee","CustomFixedFee","fractionalFee","CustomFractionalFee","CustomRoyaltyFee","_requireNotFrozen","fromString","_toProtobuf","fees","_execute","channel","request","token","updateTokenFeeSchedule","_getTransactionDataCase","_makeTransactionData","_getLogId","_transactionIds","current","toString","TRANSACTION_REGISTRY","set"],"mappings":"oNAgCe,MAAMA,UAA0CC,EAM3D,WAAAC,CAAYC,EAAQ,IAChBC,QAMAC,KAAKC,SAAW,KAMhBD,KAAKE,YAAc,GAEE,MAAjBJ,EAAMK,SACNH,KAAKI,WAAWN,EAAMK,SAGF,MAApBL,EAAMO,YACNL,KAAKM,cAAcR,EAAMO,WAErC,CAWI,oBAAOE,CACHC,EACAC,EACAC,EACAC,EACAC,GAEA,MACMC,EADOD,EAAO,GAIf,uBAEL,OAAOhB,EAAYkB,0BACf,IAAInB,EAAkC,CAClCQ,QACiC,MAA7BU,EAAkBV,QACZY,EAAQR,cAAcM,EAAkBV,cACxCa,EACVX,WACoC,MAAhCQ,EAAkBR,WACZQ,EAAkBR,WAAWY,IAAKC,GACV,MAAhBA,EAAIC,SACGC,EAAeb,cAAcW,GACR,MAArBA,EAAIG,cACJC,EAAoBf,cAAcW,GAElCK,EAAiBhB,cAAcW,SAG9CF,IAEdR,EACAC,EACAC,EACAC,EACAC,EAEZ,CAKI,WAAIT,GACA,OAAOH,KAAKC,QACpB,CAMI,UAAAG,CAAWD,GAOP,OANAH,KAAKwB,oBACLxB,KAAKC,SACkB,iBAAZE,EACDY,EAAQU,WAAWtB,GACnBY,EAAQR,cAAcJ,EAAQuB,eAEjC1B,IACf,CAKI,cAAIK,GACA,OAAOL,KAAKE,WACpB,CAMI,aAAAI,CAAcqB,GAIV,OAHA3B,KAAKwB,oBACLxB,KAAKE,YAAcyB,EAEZ3B,IACf,CASI,QAAA4B,CAASC,EAASC,GACd,OAAOD,EAAQE,MAAMC,uBAAuBF,EACpD,CAOI,uBAAAG,GACI,MAAO,wBACf,CAOI,oBAAAC,GACI,MAAO,CACH/B,QAA0B,MAAjBH,KAAKC,SAAmBD,KAAKC,SAASyB,cAAgB,KAC/DrB,WAAYL,KAAKE,YAAYe,IAAKC,GAAQA,EAAIQ,eAE1D,CAKI,SAAAS,GAII,MAAO,qCAFHnC,KAAKoC,gBAAgBC,QACxB,WACqDC,YAC9D,EAGAC,EAAqBC,IACjB,yBAEA7C,EAAkCY"}