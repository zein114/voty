{"version":3,"file":"FileContentsQuery.js","sources":["../../src/file/FileContentsQuery.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport FileId from \"./FileId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IQuery} HieroProto.proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IQueryHeader} HieroProto.proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IResponse} HieroProto.proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IResponseHeader} HieroProto.proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").proto.IFileGetContentsQuery} HieroProto.proto.IFileGetContentsQuery\n * @typedef {import(\"@hashgraph/proto\").proto.IFileGetContentsResponse} HieroProto.proto.IFileGetContentsResponse\n * @typedef {import(\"@hashgraph/proto\").proto.FileGetContentsResponse.IFileContents} HieroProto.proto.FileGetContentsResponse.IFileContents\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @augments {Query<Uint8Array>}\n * Retrieve the content of a file in HFS.<br/>\n * Note that this query retrieves _only_ the file content, not any of\n * the metadata for the file.\n */\nexport default class FileContentsQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.fileId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @type {?FileId}\n         * @private\n         */\n        this._fileId = null;\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.IQuery} query\n     * @returns {FileContentsQuery}\n     */\n    static _fromProtobuf(query) {\n        const contents = /** @type {HieroProto.proto.IFileGetContentsQuery} */ (\n            query.fileGetContents\n        );\n\n        return new FileContentsQuery({\n            fileId:\n                contents.fileID != null\n                    ? FileId._fromProtobuf(contents.fileID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._fileId != null) {\n            this._fileId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HieroProto.proto.IQuery} request\n     * @returns {Promise<HieroProto.proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.file.getFileContent(request);\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * Set the file ID for which the info is being requested.\n     *\n     * @param {FileId | string} fileId\n     * @returns {FileContentsQuery}\n     */\n    setFileId(fileId) {\n        this._fileId =\n            typeof fileId === \"string\"\n                ? FileId.fromString(fileId)\n                : fileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {HieroProto.proto.IResponse} response\n     * @returns {HieroProto.proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const fileGetContents =\n            /** @type {HieroProto.proto.IFileGetContentsResponse} */ (\n                response.fileGetContents\n            );\n        return /** @type {HieroProto.proto.IResponseHeader} */ (\n            fileGetContents.header\n        );\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {HieroProto.proto.IResponse} response\n     * @returns {Promise<Uint8Array>}\n     */\n    _mapResponse(response) {\n        const fileContentsResponse =\n            /** @type {HieroProto.proto.IFileGetContentsResponse} */ (\n                response.fileGetContents\n            );\n        const fileConents =\n            /** @type {HieroProto.proto.FileGetContentsResponse.IFileContents} */ (\n                fileContentsResponse.fileContents\n            );\n        const contents = /** @type {Uint8Array} */ (fileConents.contents);\n\n        return Promise.resolve(contents);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {HieroProto.proto.IQueryHeader} header\n     * @returns {HieroProto.proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            fileGetContents: {\n                header,\n                fileID:\n                    this._fileId != null ? this._fileId._toProtobuf() : null,\n            },\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp =\n            this._paymentTransactionId != null &&\n            this._paymentTransactionId.validStart != null\n                ? this._paymentTransactionId.validStart\n                : this._timestamp;\n\n        return `FileContentsQuery:${timestamp.toString()}`;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"fileGetContents\", FileContentsQuery._fromProtobuf);\n"],"names":["FileContentsQuery","Query","constructor","props","super","this","_fileId","fileId","setFileId","_fromProtobuf","query","contents","fileID","FileId","undefined","_validateChecksums","client","validateChecksum","_execute","channel","request","file","getFileContent","fromString","clone","_mapResponseHeader","response","_mapResponse","Promise","resolve","_onMakeRequest","header","fileGetContents","_toProtobuf","_getLogId","_paymentTransactionId","validStart","_timestamp","toString","QUERY_REGISTRY","set"],"mappings":"iFA4Be,MAAMA,UAA0BC,EAK3C,WAAAC,CAAYC,EAAQ,IAChBC,QAMAC,KAAKC,QAAU,KACK,MAAhBH,EAAMI,QACNF,KAAKG,UAAUL,EAAMI,OAEjC,CAOI,oBAAOE,CAAcC,GACjB,MAAMC,EACFD,EACH,gBAED,OAAO,IAAIV,EAAkB,CACzBO,OACuB,MAAnBI,EAASC,OACHC,EAAOJ,cAAcE,EAASC,aAC9BE,GAEtB,CAKI,kBAAAC,CAAmBC,GACK,MAAhBX,KAAKC,SACLD,KAAKC,QAAQW,iBAAiBD,EAE1C,CASI,QAAAE,CAASC,EAASC,GACd,OAAOD,EAAQE,KAAKC,eAAeF,EAC3C,CAKI,UAAIb,GACA,OAAOF,KAAKC,OACpB,CAQI,SAAAE,CAAUD,GAMN,OALAF,KAAKC,QACiB,iBAAXC,EACDM,EAAOU,WAAWhB,GAClBA,EAAOiB,QAEVnB,IACf,CAQI,kBAAAoB,CAAmBC,GAKf,OAFQA,EACH,gBAGb,MACA,CAQI,YAAAC,CAAaD,GACT,MAQMf,EANEe,EACH,gBAIA,aAC2D,SAEhE,OAAOE,QAAQC,QAAQlB,EAC/B,CAQI,cAAAmB,CAAeC,GACX,MAAO,CACHC,gBAAiB,CACbD,SACAnB,OACoB,MAAhBP,KAAKC,QAAkBD,KAAKC,QAAQ2B,cAAgB,MAGxE,CAKI,SAAAC,GAOI,MAAO,sBAL2B,MAA9B7B,KAAK8B,uBACoC,MAAzC9B,KAAK8B,sBAAsBC,WACrB/B,KAAK8B,sBAAsBC,WAC3B/B,KAAKgC,YAEuBC,YAC9C,EAIAC,EAAeC,IAAI,kBAAmBxC,EAAkBS"}