{"version":3,"file":"FileDeleteTransaction.js","sources":["../../src/file/FileDeleteTransaction.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport FileId from \"./FileId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.ITransaction} HieroProto.proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").proto.ISignedTransaction} HieroProto.proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").proto.TransactionBody} HieroProto.proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionBody} HieroProto.proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").proto.ITransactionResponse} HieroProto.proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").proto.IFileDeleteTransactionBody} HieroProto.proto.IFileDeleteTransactionBody\n */\n\n/**\n * @typedef {import(\"@hashgraph/cryptography\").Key} Key\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * A transaction to delete a file on the Hedera network.\n *\n * When deleted, a file's contents are truncated to zero length and it can no longer be updated\n * or appended to, or its expiration time extended. FileContentsQuery and FileInfoQuery\n * will throw HederaPreCheckStatusException with a status of Status#FileDeleted.\n *\n * Only one of the file's keys needs to sign to delete the file, unless the key you have is part\n * of a KeyList.\n */\nexport default class FileDeleteTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.fileId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._fileId = null;\n\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ITransaction[]} transactions\n     * @param {HieroProto.proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {HieroProto.proto.ITransactionBody[]} bodies\n     * @returns {FileDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies,\n    ) {\n        const body = bodies[0];\n        const fileDelete =\n            /** @type {HieroProto.proto.IFileDeleteTransactionBody} */ (\n                body.fileDelete\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new FileDeleteTransaction({\n                fileId:\n                    fileDelete.fileID != null\n                        ? FileId._fromProtobuf(fileDelete.fileID)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies,\n        );\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * Set the file ID which is being deleted in this transaction.\n     *\n     * @param {FileId | string} fileId\n     * @returns {FileDeleteTransaction}\n     */\n    setFileId(fileId) {\n        this._requireNotFrozen();\n        this._fileId =\n            typeof fileId === \"string\"\n                ? FileId.fromString(fileId)\n                : fileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._fileId != null) {\n            this._fileId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {HieroProto.proto.ITransaction} request\n     * @returns {Promise<HieroProto.proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.file.deleteFile(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<HieroProto.proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"fileDelete\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {HieroProto.proto.IFileDeleteTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            fileID: this._fileId != null ? this._fileId._toProtobuf() : null,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    _getLogId() {\n        const timestamp = /** @type {import(\"../Timestamp.js\").default} */ (\n            this._transactionIds.current.validStart\n        );\n        return `FileDeleteTransaction:${timestamp.toString()}`;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nTRANSACTION_REGISTRY.set(\"fileDelete\", FileDeleteTransaction._fromProtobuf);\n"],"names":["FileDeleteTransaction","Transaction","constructor","props","super","this","_fileId","fileId","setFileId","_fromProtobuf","transactions","signedTransactions","transactionIds","nodeIds","bodies","fileDelete","_fromProtobufTransactions","fileID","FileId","undefined","_requireNotFrozen","fromString","clone","_validateChecksums","client","validateChecksum","_execute","channel","request","file","deleteFile","_getTransactionDataCase","_makeTransactionData","_toProtobuf","_getLogId","_transactionIds","current","toString","TRANSACTION_REGISTRY","set"],"mappings":"mGAmCe,MAAMA,UAA8BC,EAK/C,WAAAC,CAAYC,EAAQ,IAChBC,QAMAC,KAAKC,QAAU,KAEK,MAAhBH,EAAMI,QACNF,KAAKG,UAAUL,EAAMI,OAEjC,CAWI,oBAAOE,CACHC,EACAC,EACAC,EACAC,EACAC,GAEA,MACMC,EADOD,EAAO,GAIf,WAEL,OAAOb,EAAYe,0BACf,IAAIhB,EAAsB,CACtBO,OACyB,MAArBQ,EAAWE,OACLC,EAAOT,cAAcM,EAAWE,aAChCE,IAEdT,EACAC,EACAC,EACAC,EACAC,EAEZ,CAKI,UAAIP,GACA,OAAOF,KAAKC,OACpB,CAQI,SAAAE,CAAUD,GAON,OANAF,KAAKe,oBACLf,KAAKC,QACiB,iBAAXC,EACDW,EAAOG,WAAWd,GAClBA,EAAOe,QAEVjB,IACf,CAKI,kBAAAkB,CAAmBC,GACK,MAAhBnB,KAAKC,SACLD,KAAKC,QAAQmB,iBAAiBD,EAE1C,CASI,QAAAE,CAASC,EAASC,GACd,OAAOD,EAAQE,KAAKC,WAAWF,EACvC,CAOI,uBAAAG,GACI,MAAO,YACf,CAOI,oBAAAC,GACI,MAAO,CACHf,OAAwB,MAAhBZ,KAAKC,QAAkBD,KAAKC,QAAQ2B,cAAgB,KAExE,CAKI,SAAAC,GAII,MAAO,yBAFH7B,KAAK8B,gBAAgBC,QACxB,WACyCC,YAClD,EAIAC,EAAqBC,IAAI,aAAcvC,EAAsBS"}