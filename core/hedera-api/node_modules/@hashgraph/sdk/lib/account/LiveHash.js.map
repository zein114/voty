{"version":3,"file":"LiveHash.js","sources":["../../src/account/LiveHash.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport AccountId from \"./AccountId.js\";\nimport Duration from \"../Duration.js\";\nimport KeyList from \"../KeyList.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HieroProto.proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").proto.ILiveHash} HieroProto.proto.ILiveHash\n * @typedef {import(\"@hashgraph/proto\").proto.IDuration} HieroProto.proto.IDuration\n */\n\n/**\n * Response when the client sends the node CryptoGetInfoQuery.\n */\nexport default class LiveHash {\n    /**\n     * @private\n     * @param {object} props\n     * @param {AccountId} props.accountId\n     * @param {Uint8Array} props.hash\n     * @param {KeyList} props.keys\n     * @param {Duration} props.duration\n     */\n    constructor(props) {\n        /** @readonly */\n        this.accountId = props.accountId;\n\n        /** @readonly */\n        this.hash = props.hash;\n\n        /** @readonly */\n        this.keys = props.keys;\n\n        /** @readonly */\n        this.duration = props.duration;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ILiveHash} liveHash\n     * @returns {LiveHash}\n     */\n    static _fromProtobuf(liveHash) {\n        const liveHash_ = /** @type {HieroProto.proto.ILiveHash} */ (liveHash);\n\n        return new LiveHash({\n            accountId: AccountId._fromProtobuf(\n                /** @type {HieroProto.proto.IAccountID} */ (\n                    liveHash_.accountId\n                ),\n            ),\n            hash: liveHash_.hash != null ? liveHash_.hash : new Uint8Array(),\n            keys:\n                liveHash_.keys != null\n                    ? KeyList.__fromProtobufKeyList(liveHash_.keys)\n                    : new KeyList(),\n            duration: Duration._fromProtobuf(\n                /** @type {HieroProto.proto.IDuration} */ (liveHash_.duration),\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {HieroProto.proto.ILiveHash}\n     */\n    _toProtobuf() {\n        return {\n            accountId: this.accountId._toProtobuf(),\n            hash: this.hash,\n            keys: this.keys._toProtobufKey().keyList,\n            duration: this.duration._toProtobuf(),\n        };\n    }\n}\n"],"names":["LiveHash","constructor","props","this","accountId","hash","keys","duration","Object","freeze","_fromProtobuf","liveHash","liveHash_","AccountId","Uint8Array","KeyList","__fromProtobufKeyList","Duration","_toProtobuf","_toProtobufKey","keyList"],"mappings":"yFAgBe,MAAMA,EASjB,WAAAC,CAAYC,GAERC,KAAKC,UAAYF,EAAME,UAGvBD,KAAKE,KAAOH,EAAMG,KAGlBF,KAAKG,KAAOJ,EAAMI,KAGlBH,KAAKI,SAAWL,EAAMK,SAEtBC,OAAOC,OAAON,KACtB,CAOI,oBAAOO,CAAcC,GACjB,MAAMC,EAAuD,EAE7D,OAAO,IAAIZ,EAAS,CAChBI,UAAWS,EAAUH,cAEbE,EACpB,WAEYP,KAAwB,MAAlBO,EAAUP,KAAeO,EAAUP,KAAO,IAAIS,WACpDR,KACsB,MAAlBM,EAAUN,KACJS,EAAQC,sBAAsBJ,EAAUN,MACxC,IAAIS,EACdR,SAAUU,EAASP,cAC4BE,EAAkB,WAG7E,CAMI,WAAAM,GACI,MAAO,CACHd,UAAWD,KAAKC,UAAUc,cAC1Bb,KAAMF,KAAKE,KACXC,KAAMH,KAAKG,KAAKa,iBAAiBC,QACjCb,SAAUJ,KAAKI,SAASW,cAEpC"}