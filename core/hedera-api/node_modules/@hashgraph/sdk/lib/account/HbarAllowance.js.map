{"version":3,"file":"HbarAllowance.js","sources":["../../src/account/HbarAllowance.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\nimport AccountId from \"./AccountId.js\";\nimport Hbar from \"../Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").proto.IGrantedCryptoAllowance} HieroProto.proto.IGrantedCryptoAllowance\n * @typedef {import(\"@hashgraph/proto\").proto.ICryptoAllowance} HieroProto.proto.ICryptoAllowance\n * @typedef {import(\"@hashgraph/proto\").proto.IAccountID} HieroProto.proto.IAccountID\n */\n\n/**\n * @typedef {import(\"long\")} Long\n */\n\n/**\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * Represents an HBAR allowance granted to a spender account by an owner account.\n * This class manages the permissions for one account to spend HBAR on behalf of another account.\n */\nexport default class HbarAllowance {\n    /**\n     * @internal\n     * @param {object} props\n     * @param {AccountId | null} props.spenderAccountId\n     * @param {AccountId | null} props.ownerAccountId\n     * @param {Hbar | null} props.amount\n     */\n    constructor(props) {\n        /**\n         * The account ID of the hbar allowance spender.\n         *\n         * @readonly\n         */\n        this.spenderAccountId = props.spenderAccountId;\n\n        /**\n         * The account ID of the hbar allowance owner.\n         *\n         * @readonly\n         */\n        this.ownerAccountId = props.ownerAccountId;\n\n        /**\n         * The current balance of the spender's allowance in tinybars.\n         *\n         * @readonly\n         */\n        this.amount = props.amount;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.ICryptoAllowance} allowance\n     * @returns {HbarAllowance}\n     */\n    static _fromProtobuf(allowance) {\n        return new HbarAllowance({\n            spenderAccountId: AccountId._fromProtobuf(\n                /** @type {HieroProto.proto.IAccountID} */ (allowance.spender),\n            ),\n            ownerAccountId:\n                allowance.owner != null\n                    ? AccountId._fromProtobuf(\n                          /**@type {HieroProto.proto.IAccountID}*/ (\n                              allowance.owner\n                          ),\n                      )\n                    : null,\n            amount: Hbar.fromTinybars(\n                allowance.amount != null ? allowance.amount : 0,\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @param {HieroProto.proto.IGrantedCryptoAllowance} allowance\n     * @param {AccountId} ownerAccountId\n     * @returns {HbarAllowance}\n     */\n    static _fromGrantedProtobuf(allowance, ownerAccountId) {\n        return new HbarAllowance({\n            spenderAccountId: AccountId._fromProtobuf(\n                /** @type {HieroProto.proto.IAccountID} */ (allowance.spender),\n            ),\n            ownerAccountId,\n            amount: Hbar.fromTinybars(\n                allowance.amount != null ? allowance.amount : 0,\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {HieroProto.proto.ICryptoAllowance}\n     */\n    _toProtobuf() {\n        return {\n            owner:\n                this.ownerAccountId != null\n                    ? this.ownerAccountId._toProtobuf()\n                    : null,\n            spender:\n                this.spenderAccountId != null\n                    ? this.spenderAccountId._toProtobuf()\n                    : null,\n            amount: this.amount != null ? this.amount.toTinybars() : null,\n        };\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this.spenderAccountId != null) {\n            this.spenderAccountId.validateChecksum(client);\n        }\n\n        if (this.spenderAccountId != null) {\n            this.spenderAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @returns {object}\n     */\n    toJSON() {\n        return {\n            ownerAccountId:\n                this.ownerAccountId != null\n                    ? this.ownerAccountId.toString()\n                    : null,\n            spenderAccountId:\n                this.spenderAccountId != null\n                    ? this.spenderAccountId.toString()\n                    : null,\n            amount: this.amount != null ? this.amount.toString() : null,\n        };\n    }\n}\n"],"names":["HbarAllowance","constructor","props","this","spenderAccountId","ownerAccountId","amount","Object","freeze","_fromProtobuf","allowance","AccountId","owner","Hbar","fromTinybars","_fromGrantedProtobuf","_toProtobuf","spender","toTinybars","_validateChecksums","client","validateChecksum","toJSON","toString"],"mappings":"wDAwBe,MAAMA,EAQjB,WAAAC,CAAYC,GAMRC,KAAKC,iBAAmBF,EAAME,iBAO9BD,KAAKE,eAAiBH,EAAMG,eAO5BF,KAAKG,OAASJ,EAAMI,OAEpBC,OAAOC,OAAOL,KACtB,CAOI,oBAAOM,CAAcC,GACjB,OAAO,IAAIV,EAAc,CACrBI,iBAAkBO,EAAUF,cACoBC,EAAiB,SAEjEL,eACuB,MAAnBK,EAAUE,MACJD,EAAUF,cAEFC,EAC9B,OAEsB,KACVJ,OAAQO,EAAKC,aACW,MAApBJ,EAAUJ,OAAiBI,EAAUJ,OAAS,IAG9D,CAQI,2BAAOS,CAAqBL,EAAWL,GACnC,OAAO,IAAIL,EAAc,CACrBI,iBAAkBO,EAAUF,cACoBC,EAAiB,SAEjEL,iBACAC,OAAQO,EAAKC,aACW,MAApBJ,EAAUJ,OAAiBI,EAAUJ,OAAS,IAG9D,CAMI,WAAAU,GACI,MAAO,CACHJ,MAC2B,MAAvBT,KAAKE,eACCF,KAAKE,eAAeW,cACpB,KACVC,QAC6B,MAAzBd,KAAKC,iBACCD,KAAKC,iBAAiBY,cACtB,KACVV,OAAuB,MAAfH,KAAKG,OAAiBH,KAAKG,OAAOY,aAAe,KAErE,CAKI,kBAAAC,CAAmBC,GACc,MAAzBjB,KAAKC,kBACLD,KAAKC,iBAAiBiB,iBAAiBD,GAGd,MAAzBjB,KAAKC,kBACLD,KAAKC,iBAAiBiB,iBAAiBD,EAEnD,CAKI,MAAAE,GACI,MAAO,CACHjB,eAC2B,MAAvBF,KAAKE,eACCF,KAAKE,eAAekB,WACpB,KACVnB,iBAC6B,MAAzBD,KAAKC,iBACCD,KAAKC,iBAAiBmB,WACtB,KACVjB,OAAuB,MAAfH,KAAKG,OAAiBH,KAAKG,OAAOiB,WAAa,KAEnE"}