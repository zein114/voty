{"version":3,"file":"Provider.js","sources":["../src/Provider.js"],"sourcesContent":["// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @typedef {import(\"./LedgerId.js\").default} LedgerId\n * @typedef {import(\"./transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"./transaction/Transaction.js\").default} Transaction\n * @typedef {import(\"./transaction/TransactionResponse.js\").default} TransactionResponse\n * @typedef {import(\"./transaction/TransactionReceipt.js\").default} TransactionReceipt\n * @typedef {import(\"./transaction/TransactionRecord.js\").default} TransactionRecord\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n * @typedef {import(\"./account/AccountBalance.js\").default} AccountBalance\n * @typedef {import(\"./account/AccountInfo.js\").default} AccountInfo\n */\n\n/**\n * @template O\n * @typedef {import(\"./query/Query.js\").default<O>} Query<O>\n */\n\n/**\n * @template RequestT\n * @template ResponseT\n * @template OutputT\n * @typedef {import(\"./Executable.js\").default<RequestT, ResponseT, OutputT>} Executable<RequestT, ResponseT, OutputT>\n */\n\n/**\n * @typedef {object} Provider\n * @property {() => LedgerId?} getLedgerId\n * @property {() => {[key: string]: (string | AccountId)}} getNetwork\n * @property {() => string[]} getMirrorNetwork\n * @property {(accountId: AccountId | string) => Promise<AccountBalance>} getAccountBalance\n * @property {(accountId: AccountId | string) => Promise<AccountInfo>} getAccountInfo\n * @property {(accountId: AccountId | string) => Promise<TransactionRecord[]>} getAccountRecords\n * @property {(transactionId: TransactionId | string) => Promise<TransactionReceipt>} getTransactionReceipt\n * @property {(response: TransactionResponse) => Promise<TransactionReceipt>} waitForReceipt\n * @property {<RequestT, ResponseT, OutputT>(request: Executable<RequestT, ResponseT, OutputT>) => Promise<OutputT>} call\n */\n\nexport default {};\n"],"names":["Provider"],"mappings":"AAuCA,IAAAA,EAAe,CAAE"}