{"version":3,"file":"EthereumTransactionDataEip2930.js","sources":["../src/EthereumTransactionDataEip2930.js"],"sourcesContent":["import * as rlp from \"@ethersproject/rlp\";\nimport * as hex from \"./encoding/hex.js\";\nimport EthereumTransactionData from \"./EthereumTransactionData.js\";\nimport CACHE from \"./Cache.js\";\n\n/**\n * @typedef {object} EthereumTransactionDataEip2930JSON\n * @property {string} chainId\n * @property {string} nonce\n * @property {string} gasPrice\n * @property {string} gasLimit\n * @property {string} to\n * @property {string} value\n * @property {string} callData\n * @property {string[]} accessList\n * @property {string} recId\n * @property {string} r\n * @property {string} s\n */\n\nexport default class EthereumTransactionDataEip2930 extends EthereumTransactionData {\n    /**\n     * @private\n     * @param {object} props\n     * @param {Uint8Array} props.chainId\n     * @param {Uint8Array} props.nonce\n     * @param {Uint8Array} props.gasPrice\n     * @param {Uint8Array} props.gasLimit\n     * @param {Uint8Array} props.to\n     * @param {Uint8Array} props.value\n     * @param {Uint8Array} props.callData\n     * @param {Uint8Array[]} props.accessList\n     * @param {Uint8Array} props.recId\n     * @param {Uint8Array} props.r\n     * @param {Uint8Array} props.s\n     */\n    constructor(props) {\n        super(props);\n\n        this.chainId = props.chainId;\n        this.nonce = props.nonce;\n        this.gasPrice = props.gasPrice;\n        this.gasLimit = props.gasLimit;\n        this.to = props.to;\n        this.value = props.value;\n        this.accessList = props.accessList;\n        this.recId = props.recId;\n        this.r = props.r;\n        this.s = props.s;\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {EthereumTransactionData}\n     */\n    static fromBytes(bytes) {\n        if (bytes.length === 0) {\n            throw new Error(\"empty bytes\");\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const decoded = /** @type {string[]} */ (rlp.decode(bytes.subarray(1)));\n\n        if (!Array.isArray(decoded)) {\n            throw new Error(\"ethereum data is not a list\");\n        }\n\n        if (decoded.length !== 11) {\n            throw new Error(\"invalid ethereum transaction data\");\n        }\n\n        // TODO\n        return new EthereumTransactionDataEip2930({\n            chainId: hex.decode(/** @type {string} */ (decoded[0])),\n            nonce: hex.decode(/** @type {string} */ (decoded[1])),\n            gasPrice: hex.decode(/** @type {string} */ (decoded[2])),\n            gasLimit: hex.decode(/** @type {string} */ (decoded[3])),\n            to: hex.decode(/** @type {string} */ (decoded[4])),\n            value: hex.decode(/** @type {string} */ (decoded[5])),\n            callData: hex.decode(/** @type {string} */ (decoded[6])),\n            // @ts-ignore\n            accessList: /** @type {string[]} */ (decoded[7]).map((v) =>\n                hex.decode(v),\n            ),\n            recId: hex.decode(/** @type {string} */ (decoded[8])),\n            r: hex.decode(/** @type {string} */ (decoded[9])),\n            s: hex.decode(/** @type {string} */ (decoded[10])),\n        });\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        const encoded = rlp.encode([\n            this.chainId,\n            this.nonce,\n            this.gasPrice,\n            this.gasLimit,\n            this.to,\n            this.value,\n            this.callData,\n            this.accessList,\n            this.recId,\n            this.r,\n            this.s,\n        ]);\n        return hex.decode(\"01\" + encoded.substring(2));\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.toJSON(), null, 2);\n    }\n\n    /**\n     * @returns {EthereumTransactionDataEip2930JSON}\n     */\n    toJSON() {\n        return {\n            chainId: hex.encode(this.chainId),\n            nonce: hex.encode(this.nonce),\n            gasPrice: hex.encode(this.gasPrice),\n            gasLimit: hex.encode(this.gasLimit),\n            to: hex.encode(this.to),\n            value: hex.encode(this.value),\n            callData: hex.encode(this.callData),\n            accessList: this.accessList.map((v) => hex.encode(v)),\n            recId: hex.encode(this.recId),\n            r: hex.encode(this.r),\n            s: hex.encode(this.s),\n        };\n    }\n}\n\nCACHE.setEthereumTransactionDataEip2930FromBytes((bytes) =>\n    EthereumTransactionDataEip2930.fromBytes(bytes),\n);\n"],"names":["EthereumTransactionDataEip2930","EthereumTransactionData","constructor","props","super","this","chainId","nonce","gasPrice","gasLimit","to","value","accessList","recId","r","s","fromBytes","bytes","length","Error","decoded","rlp","decode","subarray","Array","isArray","hex.decode","callData","map","v","toBytes","encoded","encode","substring","toString","JSON","stringify","toJSON","hex.encode","CACHE","setEthereumTransactionDataEip2930FromBytes"],"mappings":"kKAoBe,MAAMA,UAAuCC,EAgBxD,WAAAC,CAAYC,GACRC,MAAMD,GAENE,KAAKC,QAAUH,EAAMG,QACrBD,KAAKE,MAAQJ,EAAMI,MACnBF,KAAKG,SAAWL,EAAMK,SACtBH,KAAKI,SAAWN,EAAMM,SACtBJ,KAAKK,GAAKP,EAAMO,GAChBL,KAAKM,MAAQR,EAAMQ,MACnBN,KAAKO,WAAaT,EAAMS,WACxBP,KAAKQ,MAAQV,EAAMU,MACnBR,KAAKS,EAAIX,EAAMW,EACfT,KAAKU,EAAIZ,EAAMY,CACvB,CAMI,gBAAOC,CAAUC,GACb,GAAqB,IAAjBA,EAAMC,OACN,MAAM,IAAIC,MAAM,eAIpB,MAAMC,EAAmCC,EAAIC,OAAOL,EAAMM,SAAS,IAEnE,IAAKC,MAAMC,QAAQL,GACf,MAAM,IAAID,MAAM,+BAGpB,GAAuB,KAAnBC,EAAQF,OACR,MAAM,IAAIC,MAAM,qCAIpB,OAAO,IAAInB,EAA+B,CACtCM,QAASoB,EAAkCN,EAAQ,IACnDb,MAAOmB,EAAkCN,EAAQ,IACjDZ,SAAUkB,EAAkCN,EAAQ,IACpDX,SAAUiB,EAAkCN,EAAQ,IACpDV,GAAIgB,EAAkCN,EAAQ,IAC9CT,MAAOe,EAAkCN,EAAQ,IACjDO,SAAUD,EAAkCN,EAAQ,IAEpDR,WAAqCQ,EAAQ,GAAIQ,IAAKC,GAClDH,EAAWG,IAEfhB,MAAOa,EAAkCN,EAAQ,IACjDN,EAAGY,EAAkCN,EAAQ,IAC7CL,EAAGW,EAAkCN,EAAQ,MAEzD,CAKI,OAAAU,GACI,MAAMC,EAAUV,EAAIW,OAAO,CACvB3B,KAAKC,QACLD,KAAKE,MACLF,KAAKG,SACLH,KAAKI,SACLJ,KAAKK,GACLL,KAAKM,MACLN,KAAKsB,SACLtB,KAAKO,WACLP,KAAKQ,MACLR,KAAKS,EACLT,KAAKU,IAET,OAAOW,EAAW,KAAOK,EAAQE,UAAU,GACnD,CAKI,QAAAC,GACI,OAAOC,KAAKC,UAAU/B,KAAKgC,SAAU,KAAM,EACnD,CAKI,MAAAA,GACI,MAAO,CACH/B,QAASgC,EAAWjC,KAAKC,SACzBC,MAAO+B,EAAWjC,KAAKE,OACvBC,SAAU8B,EAAWjC,KAAKG,UAC1BC,SAAU6B,EAAWjC,KAAKI,UAC1BC,GAAI4B,EAAWjC,KAAKK,IACpBC,MAAO2B,EAAWjC,KAAKM,OACvBgB,SAAUW,EAAWjC,KAAKsB,UAC1Bf,WAAYP,KAAKO,WAAWgB,IAAKC,GAAMS,EAAWT,IAClDhB,MAAOyB,EAAWjC,KAAKQ,OACvBC,EAAGwB,EAAWjC,KAAKS,GACnBC,EAAGuB,EAAWjC,KAAKU,GAE/B,EAGAwB,EAAMC,2CAA4CvB,GAC9CjB,EAA+BgB,UAAUC"}